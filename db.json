{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js.map","path":"js/application.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipay.jpg","path":"images/donate/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/weipay.jpg","path":"images/donate/weipay.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/weipayimg.png","path":"images/donate/weipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"7e1c4ad8c4604f5012028ff9eb99324ea3039f6e","modified":1508138193209},{"_id":"source/CNAME","hash":"ebdd5c00c7c33716fa9c4b4d70b19f823c500e59","modified":1508138193209},{"_id":"source/robots.txt","hash":"5aee9c68664440d8b3a2afcdbc3be2b524a3228f","modified":1508138193215},{"_id":"source/_posts/C-中的struct和class的区别.md","hash":"e9b0d5ec623009784983d6c2ce185e4947ae521f","modified":1508138193209},{"_id":"source/_posts/CSS中margin和padding的区别.md","hash":"d4b4ca4f0c494335758953c727145eef2b598ce9","modified":1508138193209},{"_id":"source/_posts/HTTP状态码.md","hash":"4e5b1b85a1dd197e0869140553c35c0f8575e764","modified":1508138193210},{"_id":"source/_posts/Emmet-WEB前端代码快速编写神器.md","hash":"f60c64de2472f6b807d936d21925d1c42cf847c0","modified":1508138193209},{"_id":"source/_posts/Hexo-Next主题个性化配置-1.md","hash":"dd04043ea3e7fc728ed417ed5a91c93ffd3172e3","modified":1508138193210},{"_id":"source/_posts/Hexo教程.md","hash":"21c6977eeac20b96e0210e27bed5a41e2bc43e96","modified":1508138193210},{"_id":"source/_posts/MPV播放器使用手册.md","hash":"458a33bb8630affcda4b23e34353089f91a71f00","modified":1508138193210},{"_id":"source/_posts/Mac下重置mysql的root密码.md","hash":"2212e0e3acb22da95d1f5436a057bcc9d47a3998","modified":1508138193210},{"_id":"source/_posts/Mac安装Hadoop2-8-0.md","hash":"1b3175f1cadb13bd830f4c88e61bdae23b813a8e","modified":1508138193210},{"_id":"source/_posts/gitbranch.md","hash":"1b8ea430cfb2430dd1312dda6f069c02c5992d29","modified":1508138193211},{"_id":"source/_posts/git养成记之二.md","hash":"691724e4ecd7ff8b1c4fe1a18551c21c0722368b","modified":1508138193211},{"_id":"source/_posts/hello-world.md","hash":"5c96fd546170e323ea43334a9cb579214d1774ed","modified":1508138193211},{"_id":"source/_posts/hexo-next搭建博客相册教程.md","hash":"046e037126b61b3574bf72b2cc30666903b428eb","modified":1508138193211},{"_id":"source/_posts/js闭包.md","hash":"a8ceb0ae0e7595ca18e14139cb990f1a1ecc0f7f","modified":1508138193211},{"_id":"source/_posts/php模拟登陆实现课表抓取-最新版.md","hash":"ae9515294806696034373d5c4c61ceb955616d43","modified":1508138193212},{"_id":"source/_posts/php面试题-1-附答案.md","hash":"e8135dcec6c971df60645784849bd3f2b7fc2e98","modified":1508138193212},{"_id":"source/_posts/php面试题-2-附答案.md","hash":"ce6fe95b0fdd565792485971c0c60cf19a1585bd","modified":1508138193212},{"_id":"source/_posts/同花顺笔试题精选.md","hash":"d3ca0a4cdcbae350718d6f1681fc4f9d791ac485","modified":1508138193212},{"_id":"source/_posts/用vue-js开发一个TodoList-1.md","hash":"33331c24c5988764f2524dd00ed2b44cbb66865e","modified":1508138193213},{"_id":"source/_posts/用vue-js开发一个TodoList-2.md","hash":"7a28d3ff278ab64ce25f620740863812ccbab8f1","modified":1508138193213},{"_id":"source/_posts/用vue-js开发一个TodoList-3.md","hash":"36cc0dd637f685d37696edbea28a1d444714e5d1","modified":1508138193213},{"_id":"source/_posts/让你的hexo博客支持LaTex数学公式.md","hash":"5de818e9f87bb5ee8d663e2cbac766d53b83da05","modified":1508138193213},{"_id":"source/_posts/软件测试习题（更新ing）.md","hash":"652f01751f8aec96ec5dc8c9d0dc9c6a77bcbb0f","modified":1508138193214},{"_id":"source/_posts/进程与线程的一个简单解释.md","hash":"398fd97b6834495860f9a9ee099df2707b7352ab","modified":1508138193214},{"_id":"source/_posts/阿里云-ECS-部署：nginx-MySQL-Laravel-PHP7-Redis-Node-js.md","hash":"9bdaa8345b99b7a28460d4cca8643802794cd4b5","modified":1508138193214},{"_id":"source/_posts/阿里云vps搭建自己的hexo博客.md","hash":"29724c66641f04b20401b3ca64b009309cb62573","modified":1508138193214},{"_id":"source/_posts/阿里云配置nodejs-mongodb环境.md","hash":"652f232d840c6365ca4ac1e5c942224c90ece6a8","modified":1508138193215},{"_id":"source/about/index.md","hash":"2185172fd39ccc9d890b7def58515e83e4576dfd","modified":1508139752729},{"_id":"public/404.html","hash":"669efdb001d7f04469bb9fbc1952a2b3f565b5f3","modified":1508140947604},{"_id":"public/about/index.html","hash":"27d6223157fe4efdd17b18f8bedfc5feedaf7536","modified":1508140947568},{"_id":"public/2017/06/16/阿里云vps搭建自己的hexo博客/index.html","hash":"7b242a9669fdd15d499af3725144cf07e72be89c","modified":1508140947607},{"_id":"public/2017/06/11/让你的hexo博客支持LaTex数学公式/index.html","hash":"7d9d2068df329e2a6e120618c54e7dc8efb06f28","modified":1508140947607},{"_id":"public/2017/06/11/软件测试习题（更新ing）/index.html","hash":"939a2ecf01ce290d0997ec922ec44b798cacf662","modified":1508140947607},{"_id":"public/2017/06/07/Emmet-WEB前端代码快速编写神器/index.html","hash":"6b068f4af33a3a506e279ddc8a38afa5f5bcaefc","modified":1508140947607},{"_id":"public/2017/06/06/同花顺笔试题精选/index.html","hash":"af574efde12d3934cb82495439afe9cf5f72ce94","modified":1508140947607},{"_id":"public/2017/06/06/C-中的struct和class的区别/index.html","hash":"f729cae0d5b41ce571c05381c308bf1a2dd9f800","modified":1508140947607},{"_id":"public/2017/06/06/MPV播放器使用手册/index.html","hash":"1ced13017dd76c075d81a07e6d3c57d3f9e4b2d3","modified":1508140947607},{"_id":"public/2017/06/05/进程与线程的一个简单解释/index.html","hash":"6fa9525bc269c04d3bd4906f6e533e2af7742281","modified":1508140947607},{"_id":"public/2017/06/04/js闭包/index.html","hash":"a1268d1065476f01862215ebcbb7daefa4e7f12c","modified":1508140947607},{"_id":"public/2017/06/04/HTTP状态码/index.html","hash":"c96221cc939851547960e339d6e44608fc43e937","modified":1508140947608},{"_id":"public/2017/06/03/CSS中margin和padding的区别/index.html","hash":"66a3c6a24b27fdfaf81e76e00eae609c6f4046e4","modified":1508140947608},{"_id":"public/2017/06/01/php面试题-2-附答案/index.html","hash":"c3415e23a07ecc91b49e5bd9b329d15a90226ef1","modified":1508140947608},{"_id":"public/2017/05/30/php面试题-1-附答案/index.html","hash":"2cef59e9f5ab983bfe14342c8001f8609c1e1cf6","modified":1508140947608},{"_id":"public/2017/05/30/Hexo-Next主题个性化配置-1/index.html","hash":"655576c8dc52f1e6ee96c059c0d335a46db8b314","modified":1508140947608},{"_id":"public/2017/05/29/用vue-js开发一个TodoList-3/index.html","hash":"fc7337c748a0ee86e6f220fb9714e1da45513170","modified":1508140947608},{"_id":"public/2017/05/29/用vue-js开发一个TodoList-2/index.html","hash":"0152b827127e759c53d263947eb09aae12699095","modified":1508140947608},{"_id":"public/2017/05/27/git养成记之二/index.html","hash":"e6474a14aa39ebb8b2f640ac72037ddb624a9a74","modified":1508140947608},{"_id":"public/2017/05/27/用vue-js开发一个TodoList-1/index.html","hash":"d314cd295c17fc93dfcedd7b67042cd0b55c51d5","modified":1508140947608},{"_id":"public/2017/05/26/php模拟登陆实现课表抓取-最新版/index.html","hash":"0c81c7663a17a469f5e5c5e7f9e0227dcfdcbff5","modified":1508140947608},{"_id":"public/2017/05/26/hello-world/index.html","hash":"43ff6c11c014b75f84b914a4b00f5f44fb7aabb5","modified":1508140947608},{"_id":"public/2017/05/26/hexo-next搭建博客相册教程/index.html","hash":"d84879a8d1ac71e5bcf0488487e8724832c0898e","modified":1508140947608},{"_id":"public/2017/05/25/Mac安装Hadoop2-8-0/index.html","hash":"c8ea70f2f40bd39dbb9b9af898048ca7871e0788","modified":1508140947608},{"_id":"public/2017/05/25/阿里云配置nodejs-mongodb环境/index.html","hash":"c6b341586d27e840c9b27260f9678aa245ba2b9f","modified":1508140947609},{"_id":"public/2017/05/25/阿里云-ECS-部署：nginx-MySQL-Laravel-PHP7-Redis-Node-js/index.html","hash":"8b7fc0cf8431e628720d1e71c6917dfdfd64710a","modified":1508140947609},{"_id":"public/2017/05/25/Mac下重置mysql的root密码/index.html","hash":"3a4e2f346d6af9013c238a672f56e6318beed6d4","modified":1508140947609},{"_id":"public/2017/05/25/gitbranch/index.html","hash":"6e8028f4fcc033a406054d5878960403edf4e930","modified":1508140947609},{"_id":"public/2017/05/25/Hexo教程/index.html","hash":"71e6171f67f556cb2ca486c1775f40e7a2475f9d","modified":1508140947609},{"_id":"public/archives/index.html","hash":"eb8724115e7e3c760d3e17d1999b880fb15223d3","modified":1508140947609},{"_id":"public/index.html","hash":"2193b5525b42c630888d1e22c217f946accd7070","modified":1508140947609},{"_id":"public/page/2/index.html","hash":"ec4da575c41dfcec55cf8a3cd8dfd98a8b1fc88b","modified":1508140947609},{"_id":"public/page/3/index.html","hash":"ac13e9b5ab9ed924208f8b94322f03fac6209c90","modified":1508140947609},{"_id":"public/tags/css/index.html","hash":"d55071494192d40755de92910fa2d7969a9ad7b1","modified":1508140947609},{"_id":"public/tags/C/index.html","hash":"b6e5f25230dc857b1fbabcba8a513893e04ffd3a","modified":1508140947609},{"_id":"public/tags/HTTP/index.html","hash":"5493e153a8466cc484162a51d6eda1e97980d0f5","modified":1508140947609},{"_id":"public/tags/Sublime插件/index.html","hash":"c772a1b38f522eebafb5882d7ee295325587d9d7","modified":1508140947609},{"_id":"public/tags/hexo/index.html","hash":"06bc1aec6ce1b4db21abcd37bc28fe4708cc640b","modified":1508140947609},{"_id":"public/tags/hexo-blog/index.html","hash":"57b5fd350358f87c23338030ca4aa2feb33b8d6b","modified":1508140947610},{"_id":"public/tags/mpv/index.html","hash":"39adbe3449fd92dae719c199728eca53998d84ff","modified":1508140947610},{"_id":"public/tags/mysql/index.html","hash":"11ad00331cfbdc06e901d3e43017b64261f0b8ff","modified":1508140947610},{"_id":"public/tags/Hadoop/index.html","hash":"ca4fd92da6f9952ee3ec25f09eea0b65f18f3f63","modified":1508140947610},{"_id":"public/tags/git/index.html","hash":"2ec4c13abfac8510cf63bbd31aa05bfde5b10d5c","modified":1508140947610},{"_id":"public/tags/javascript/index.html","hash":"f302ec1d2d68fbf1cf0f0e56a9e128c74043e568","modified":1508140947610},{"_id":"public/tags/php/index.html","hash":"41ea85c00b3abd28f6b93536d61f3bbf3c5c0b3b","modified":1508140947610},{"_id":"public/tags/笔试/index.html","hash":"89122988a28dd4c6ecb45a72832b854ed5aca5b9","modified":1508140947610},{"_id":"public/tags/vue-js/index.html","hash":"03863ffa686730714f89a92476ac3c4f636d0413","modified":1508140947610},{"_id":"public/tags/软件测试/index.html","hash":"a79cca354db4bdbec149a350cac66440661d2189","modified":1508140947610},{"_id":"public/tags/操作系统/index.html","hash":"1c5f5e88ada172d9bb6eda0f307d65fa342fa9ab","modified":1508140947610},{"_id":"public/tags/阿里云ECS/index.html","hash":"5f2dcf8fc97b975d913c82f3452d3284f6706358","modified":1508140947610},{"_id":"public/tags/node-js/index.html","hash":"90661efc3f1ebb9ed594219fb4d2fe3e00ca092f","modified":1508140947610},{"_id":"public/CNAME","hash":"ebdd5c00c7c33716fa9c4b4d70b19f823c500e59","modified":1508138606765},{"_id":"public/robots.txt","hash":"5aee9c68664440d8b3a2afcdbc3be2b524a3228f","modified":1508138606765},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1508138754732},{"_id":"themes/pure/README.cn.md","hash":"53895aa2a66c744e892f925570af31aa0e59d791","modified":1508138754732},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1508138754732},{"_id":"themes/pure/README.md","hash":"f23a5d745934b18827f706ee30bbe41424e733c4","modified":1508138754733},{"_id":"themes/pure/_config.yml","hash":"0a9b0308a3c3721ab6a6d7786e9f5b2f1340d038","modified":1508140582489},{"_id":"themes/pure/_config.yml.example","hash":"467fa33bc2a03fe3e2083198f9659ab9c810f426","modified":1508138754733},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1508138754753},{"_id":"themes/pure/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1508138754726},{"_id":"themes/pure/.git/config","hash":"7ec6421043b0f1135362e6c04e1f42251478e733","modified":1508138754727},{"_id":"themes/pure/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1508138749951},{"_id":"themes/pure/.git/index","hash":"d4e2f04572316b2338b2335db67d70af2fe3d3cf","modified":1508138754772},{"_id":"themes/pure/.git/packed-refs","hash":"2900031a5e07b989aada5f1be146a0173bc575e7","modified":1508138754709},{"_id":"themes/pure/languages/default.yml","hash":"5de022a32038bbf2aa5ed59d1d391a227e8ade6f","modified":1508138754735},{"_id":"themes/pure/languages/en.yml","hash":"5de022a32038bbf2aa5ed59d1d391a227e8ade6f","modified":1508138754735},{"_id":"themes/pure/languages/zh-CN.yml","hash":"d99b317fda0ababf46db31a3831f706e4182a1a4","modified":1508138754736},{"_id":"themes/pure/languages/zh-TW.yml","hash":"100df41740d58b582bce67a90af45788c36ed8b9","modified":1508138754736},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1508138754750},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1508138754750},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1508138754750},{"_id":"themes/pure/layout/categories.ejs","hash":"31aefdc46e7274e429aed0e1380d36533cf4fd9a","modified":1508138754751},{"_id":"themes/pure/layout/category.ejs","hash":"77c5f35de6ce3fc9aa90cb004e1cbc9ea5c065b5","modified":1508138754751},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1508138754751},{"_id":"themes/pure/layout/layout.ejs","hash":"614be53a4d0db62a6aa8082559dae44c2d7cbad6","modified":1508138754751},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1508138754752},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1508138754752},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1508138754752},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1508138754752},{"_id":"themes/pure/layout/tag.ejs","hash":"98d9338d29330a06978f282bfcd5a8eb9318bb80","modified":1508138754752},{"_id":"themes/pure/layout/tags.ejs","hash":"c25fc63a1aa5addf0fa4fe7943ca45d9abb4336c","modified":1508138754752},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1508138754765},{"_id":"themes/pure/screenshot/pure.png","hash":"306d0ec9938834b2b2c5cab92adbf09c0eb481f6","modified":1508138754754},{"_id":"themes/pure/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1508138749952},{"_id":"themes/pure/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1508138749951},{"_id":"themes/pure/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1508138749954},{"_id":"themes/pure/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1508138749954},{"_id":"themes/pure/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1508138749952},{"_id":"themes/pure/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1508138749955},{"_id":"themes/pure/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1508138749952},{"_id":"themes/pure/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1508138749953},{"_id":"themes/pure/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1508138749953},{"_id":"themes/pure/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1508138749955},{"_id":"themes/pure/.git/logs/HEAD","hash":"d7bdb1537e6027971480217a58205660947acbab","modified":1508138754726},{"_id":"themes/pure/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1508138749950},{"_id":"themes/pure/_source/404/index.md","hash":"d18cc3c0de0f8333c78239bbeecba816f08e0692","modified":1508138754733},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1508138754734},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1508138754734},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1508138754734},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1508138754734},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1508138754734},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1508138754735},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1508138754735},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1508138754735},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1508138754736},{"_id":"themes/pure/layout/_common/head.ejs","hash":"bd9b962a8064d1364beda58721ec11919375d9b7","modified":1508138754736},{"_id":"themes/pure/layout/_common/header.ejs","hash":"9a6a87d510594c136e2f339a6dcc7d299ac36334","modified":1508138754737},{"_id":"themes/pure/layout/_common/plugin.ejs","hash":"b886c542a494ac986cd71512845d6dac9d6e8165","modified":1508138754737},{"_id":"themes/pure/layout/_common/script.ejs","hash":"eb91f079f527769822b883c6b7bf5fb1c7410046","modified":1508138754737},{"_id":"themes/pure/layout/_common/social.ejs","hash":"70b7d1b237ac2f914a8185794ebd7891b259827d","modified":1508138754737},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"420dd18d8ea730065d20fee2bf7a7a9879a847cb","modified":1508138754738},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"3885bbe5b3f1fa4fc0eb39f0f2f68a4f225fef08","modified":1508138754738},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"9adda178e9f026e9369fd08f21bdaf1870d23548","modified":1508138754738},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1508138754738},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"a84af1262065d42f442d0da7bd3d8dd4caafd09c","modified":1508138754739},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"38b3d256f6793669e21ae7eeaccc11a4772fc687","modified":1508138754739},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1508138754739},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"fe31bcb9278475c1b8c157ca8b9510ff70d4cd45","modified":1508138754739},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1508138754740},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"71115e18dd08df590e990fb5a4a2daf1aa5cfab6","modified":1508138754740},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"0bdd0d056a54fc8099b6cc4756acdf0b90754e3e","modified":1508138754740},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"7bff50db2d42f0028e0ef722e6819e66dce79798","modified":1508138754740},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1508138754743},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1508138754743},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1508138754743},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"d5462cebb2c6d6bedd4079348deda818c177a8ac","modified":1508138754746},{"_id":"themes/pure/layout/_script/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1508138754746},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1508138754747},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"bd5dbd41017286379c6549405b450227ee4645bc","modified":1508138754747},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"234e6a9d8b129dc19e916cb9f927a27b04758180","modified":1508138754747},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"b1874ec758a14e67cf5ad4b1d4c181e4bcea664a","modified":1508138754748},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1508138754748},{"_id":"themes/pure/layout/_search/index.ejs","hash":"dd97cab1a986793d840da1d290adecedf92528c2","modified":1508138754748},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"11c9f839458ac414d09780e065a7b39643cd2810","modified":1508138754748},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1508138754748},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1508138754749},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"9d8ade7163bf6c7059e67b3320a33d64fcc5afde","modified":1508138754749},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1508138754749},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"33857f6d6195bdf3a908be63d2692ecd321dc25e","modified":1508138754749},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1508138754750},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1508138754750},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1508138754765},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1508138754766},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1508138754766},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1508138754766},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1508138754766},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1508138754767},{"_id":"themes/pure/source/js/application.js","hash":"68f8075dfc6656e1554c225d6da02373e90efd8c","modified":1508138754768},{"_id":"themes/pure/source/js/application.js.map","hash":"fcd293b96808e26adbe00c2d81828e67f0a4ec14","modified":1508138754768},{"_id":"themes/pure/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1508138754769},{"_id":"themes/pure/source/css/style.css","hash":"270ac59d55a81a0f4f029b0a1d69980099e068ea","modified":1508138754765},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1508138754770},{"_id":"themes/pure/source/js/plugin.js","hash":"b5b81aa434cc5e2abd04bab3e5a26fa17606b38d","modified":1508138754771},{"_id":"themes/pure/.git/refs/heads/master","hash":"7f0aa50112684db52d99dcfd7334001c0cfea7bd","modified":1508138754726},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"b80d594b38a9765f07fb9989652804fb276dd7be","modified":1508138754741},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"a4f8b53225265b0370824eda6b44d4427c98006d","modified":1508138754741},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1508138754741},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"8e8ce2bc209ff1621b9a9e5017d158d4f8152aff","modified":1508138754741},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1508138754742},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"f7706816c755b2e514ab6dfc0d92ce54c6a91f1c","modified":1508138754741},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"6988f8b38cd26d827bef3bde430f89a549fe06f3","modified":1508138754742},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"4921e638683799889dff2e47cb9a8464041397bb","modified":1508138754742},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"76a7339c1f398621b4601bbf80e2fa11eee52f0e","modified":1508138754742},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1508138754742},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"cb8c93f50510de93e4e2fecbbd9058a34e8ca09b","modified":1508138754743},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1508138754744},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1508138754744},{"_id":"themes/pure/layout/_script/_analytics/script.ejs","hash":"c5aa37346d973437d0a693f8dd345a0b87edfe6f","modified":1508138754744},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"dee9c2adc0df37c7e1edb617ba92983eee3f3c8e","modified":1508138754745},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"b30ced7d02e63c64227139aa4b99286400d7bcea","modified":1508138754745},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"09e66c8bfd1cc0507a0da619f56101423b9e653a","modified":1508138754745},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"c951b2fac4e143c0a2fb4fd3369307f23cfe2687","modified":1508138754745},{"_id":"themes/pure/layout/_script/_comment/script.ejs","hash":"ee1cf9c35e51d21a170a7ac5f43e63c2bf777448","modified":1508138754746},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"92d897be24e8c520c5a3f8903c542892e2b30a9a","modified":1508138754746},{"_id":"themes/pure/source/images/donate/alipay.jpg","hash":"8a5b2c72ddb7396adb709771a35ef50b8cf5485e","modified":1508138754767},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1508138754767},{"_id":"themes/pure/source/images/donate/weipay.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1508138754767},{"_id":"themes/pure/source/images/donate/weipayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1508138754768},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1508138754768},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1508138754768},{"_id":"themes/pure/source/js/plugin.js.map","hash":"b701e72ced18c1f7c83ee19c2c54a8699927ff88","modified":1508138754772},{"_id":"themes/pure/.git/objects/pack/pack-874b0b315d48465f0518b330a0ece1bface750a5.idx","hash":"81cfb4d1c4471665cea16d420d48f2f60f41a19b","modified":1508138754695},{"_id":"themes/pure/.git/logs/refs/heads/master","hash":"d7bdb1537e6027971480217a58205660947acbab","modified":1508138754727},{"_id":"themes/pure/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1508138754725},{"_id":"themes/pure/.git/logs/refs/remotes/origin/HEAD","hash":"d7bdb1537e6027971480217a58205660947acbab","modified":1508138754725},{"_id":"themes/pure/screenshot/pure.psd","hash":"95dcd03e820d49a3d8dada7474244927c33a11f1","modified":1508138754764},{"_id":"themes/pure/.git/objects/pack/pack-874b0b315d48465f0518b330a0ece1bface750a5.pack","hash":"28c97d7904053ec8286bbce7f26a8f2d62946412","modified":1508138754694},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1508139257306},{"_id":"public/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1508139257306},{"_id":"public/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1508139257306},{"_id":"public/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1508139257306},{"_id":"public/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1508139257306},{"_id":"public/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1508139257306},{"_id":"public/js/application.js.map","hash":"fcd293b96808e26adbe00c2d81828e67f0a4ec14","modified":1508139257306},{"_id":"public/images/donate/alipay.jpg","hash":"8a5b2c72ddb7396adb709771a35ef50b8cf5485e","modified":1508139257306},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1508139257306},{"_id":"public/images/donate/weipay.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1508139257306},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1508139257306},{"_id":"public/images/donate/weipayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1508139257307},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1508139257307},{"_id":"public/js/application.js","hash":"68f8075dfc6656e1554c225d6da02373e90efd8c","modified":1508139257321},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1508139257321},{"_id":"public/fonts/README.html","hash":"43b6265aeccff3f9d495e2b44d07b249a2197bd7","modified":1508139257321},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1508139257321},{"_id":"public/css/style.css","hash":"270ac59d55a81a0f4f029b0a1d69980099e068ea","modified":1508139257321},{"_id":"public/js/plugin.js","hash":"b5b81aa434cc5e2abd04bab3e5a26fa17606b38d","modified":1508139257321},{"_id":"public/js/plugin.js.map","hash":"b701e72ced18c1f7c83ee19c2c54a8699927ff88","modified":1508139257321},{"_id":"source/404/index.md","hash":"d18cc3c0de0f8333c78239bbeecba816f08e0692","modified":1508138754733},{"_id":"source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1508138754734},{"_id":"source/_data/links.yml","hash":"ad74cb301eb3d7ab6f12c087f592bd445557a810","modified":1508140159003},{"_id":"source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1508138754734},{"_id":"source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1508138754734},{"_id":"source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1508138754735},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1508138754735},{"_id":"source/.DS_Store","hash":"95b53c4be661401f48e98e311b0d9a1d26562134","modified":1508139799582},{"_id":"themes/pure/.DS_Store","hash":"edbfeae2d87c3433ace3e0d45ae532e29694c25a","modified":1508139728317},{"_id":"source/about/.DS_Store","hash":"45673a8ec47535550c1655fb6f129816c4bf94f9","modified":1508139583209},{"_id":"source/tags/.DS_Store","hash":"6272d3ed0b5edac5cc653699e5c6653001800311","modified":1508139717261},{"_id":"source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1508139689748},{"_id":"themes/pure/_source/.DS_Store","hash":"ba2c1ff49d724787c09753270dbecb1c97f5d217","modified":1508139775697},{"_id":"public/atom.xml","hash":"f4a7d240f24ca651d4660e85d95bd1f0c325e37b","modified":1508140947066},{"_id":"public/baidusitemap.xml","hash":"63b020fb0cc98034f7b9d757c20a938965a16762","modified":1508140947067},{"_id":"public/content.json","hash":"367bd0a14f93d7cac2e6fde5ababb61b08e14148","modified":1508140947471},{"_id":"public/sitemap.xml","hash":"eec0d2202b34720d2ae8270b3443503c8e1dbe15","modified":1508140947496},{"_id":"public/tags/index.html","hash":"0711b65cf6c12183eef9025a37d3a070066734fa","modified":1508140947568},{"_id":"public/books/index.html","hash":"db2227a5e9ae0cb5b8c3387fbb787ff079317eb3","modified":1508140947605},{"_id":"public/categories/index.html","hash":"8cac807cdd7cbf25b557caa49ecf1c3f1f9424b9","modified":1508140947605},{"_id":"public/links/index.html","hash":"0363d40eba44d6bd936a0209c40ca4921851cfa2","modified":1508140947607},{"_id":"public/repository/index.html","hash":"541be635dc71e409ffbf9e723cc942538ae7c796","modified":1508140947607},{"_id":"public/archives/page/2/index.html","hash":"1a776689428c714b49f2666955ce4dded0da3527","modified":1508140947613},{"_id":"public/archives/page/3/index.html","hash":"9f6a07d9a1c739828861635db28fd54cca1161f2","modified":1508140947613},{"_id":"public/archives/2017/index.html","hash":"091c4922dfd4accdd38e374fd2a637759bb0a4c7","modified":1508140947613},{"_id":"public/archives/2017/page/2/index.html","hash":"088b0f5af8861c2988a4e131d1890ee244b08df8","modified":1508140947613},{"_id":"public/archives/2017/page/3/index.html","hash":"7f5912fcef5d8daec56869f2bea1ee9b40e08946","modified":1508140947613},{"_id":"public/archives/2017/05/index.html","hash":"f2ec80193cb6ec85b73846ce1f31f531fa7b3291","modified":1508140947613},{"_id":"public/archives/2017/05/page/2/index.html","hash":"7b0cc7a3e19ed30aa82044d044684edf08042c3e","modified":1508140947613},{"_id":"public/archives/2017/06/index.html","hash":"f815c044fc75120ce608e37c551c876f147145dc","modified":1508140947613},{"_id":"public/archives/2017/06/page/2/index.html","hash":"e1c54585b9038e991f0dbce1e92025d8e5298179","modified":1508140947613}],"Category":[],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"Jimmy的技术乐园":{"link":"http://aimpeter.xyz/","avatar":"https://ws4.sinaimg.cn/large/006tNc79gy1fhkma5ei3pj30ak0akt8w.jpg","desc":"个人blog"}}}],"Page":[{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"\n<h1><center>关于我</center></h1>\n\n<center>我是*Jimmy*</center>\n\n<center>目前就读于南京邮电大学</center>\n\n<center>是一名大三学生</center>\n\n<center>热爱前端后端各种技术</center>\n\n<center>喜欢折腾</center>\n\n<center>最近潜心学习PHP的Laravel框架</center>\n\n<center>QQ\b:370555337</center>\n\n<center>E-mail:aimpeter@163.com</center>\n\n<center>个人网站:</center>\n\n<center>(1)[abc社区](http://119.23.33.174)</center>\n\n<center>(2)[小游戏网站](http://aimpeter.xyz)</center>\n\n<center>(3)[个人博客](http://jimmy9876.top)</center>\n\n<!-- <center><span color=\"red\">**如果我的文章节省了你的时间，欢迎赏根🍭**</span></center>\n\n<center>![](https://ws4.sinaimg.cn/large/006tKfTcgy1ffxir8dmk2j30yi1auq7v.jpg)</center> -->\n","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n\n<h1><center>关于我</center></h1>\n\n<center>我是*Jimmy*</center>\n\n<center>目前就读于南京邮电大学</center>\n\n<center>是一名大三学生</center>\n\n<center>热爱前端后端各种技术</center>\n\n<center>喜欢折腾</center>\n\n<center>最近潜心学习PHP的Laravel框架</center>\n\n<center>QQ\b:370555337</center>\n\n<center>E-mail:aimpeter@163.com</center>\n\n<center>个人网站:</center>\n\n<center>(1)[abc社区](http://119.23.33.174)</center>\n\n<center>(2)[小游戏网站](http://aimpeter.xyz)</center>\n\n<center>(3)[个人博客](http://jimmy9876.top)</center>\n\n<!-- <center><span color=\"red\">**如果我的文章节省了你的时间，欢迎赏根🍭**</span></center>\n\n<center>![](https://ws4.sinaimg.cn/large/006tKfTcgy1ffxir8dmk2j30yi1auq7v.jpg)</center> -->\n","date":"2017-10-16T07:42:32.740Z","updated":"2017-10-16T07:42:32.729Z","path":"about/index.html","_id":"cj8tuk2910028q0fahcavmijn","content":"<h1><center>关于我</center></h1>\n\n<center>我是<em>Jimmy</em></center>\n\n<center>目前就读于南京邮电大学</center>\n\n<center>是一名大三学生</center>\n\n<center>热爱前端后端各种技术</center>\n\n<center>喜欢折腾</center>\n\n<center>最近潜心学习PHP的Laravel框架</center>\n\n<center>QQ\b:370555337</center>\n\n<center>E-mail:aimpeter@163.com</center>\n\n<center>个人网站:</center>\n\n<center>(1)<a href=\"http://119.23.33.174\" target=\"_blank\" rel=\"external\">abc社区</a></center>\n\n<center>(2)<a href=\"http://aimpeter.xyz\" target=\"_blank\" rel=\"external\">小游戏网站</a></center>\n\n<center>(3)<a href=\"http://jimmy9876.top\">个人博客</a></center>\n\n<!-- <center><span color=\"red\">**如果我的文章节省了你的时间，欢迎赏根🍭**</span></center>\n\n<center>![](https://ws4.sinaimg.cn/large/006tKfTcgy1ffxir8dmk2j30yi1auq7v.jpg)</center> -->\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"Jimmy的技术乐园":{"link":"http://aimpeter.xyz/","avatar":"https://ws4.sinaimg.cn/large/006tNc79gy1fhkma5ei3pj30ak0akt8w.jpg","desc":"个人blog"}}}},"excerpt":"","more":"<h1><center>关于我</center></h1>\n\n<center>我是<em>Jimmy</em></center>\n\n<center>目前就读于南京邮电大学</center>\n\n<center>是一名大三学生</center>\n\n<center>热爱前端后端各种技术</center>\n\n<center>喜欢折腾</center>\n\n<center>最近潜心学习PHP的Laravel框架</center>\n\n<center>QQ\b:370555337</center>\n\n<center>E-mail:aimpeter@163.com</center>\n\n<center>个人网站:</center>\n\n<center>(1)<a href=\"http://119.23.33.174\" target=\"_blank\" rel=\"external\">abc社区</a></center>\n\n<center>(2)<a href=\"http://aimpeter.xyz\" target=\"_blank\" rel=\"external\">小游戏网站</a></center>\n\n<center>(3)<a href=\"http://jimmy9876.top\">个人博客</a></center>\n\n<!-- <center><span color=\"red\">**如果我的文章节省了你的时间，欢迎赏根🍭**</span></center>\n\n<center>![](https://ws4.sinaimg.cn/large/006tKfTcgy1ffxir8dmk2j30yi1auq7v.jpg)</center> -->\n"},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2017-10-16T07:41:29.748Z","updated":"2017-10-16T07:41:29.748Z","path":"tags/index.html","_id":"cj8tvdom40002brfamu0sav1g","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"Jimmy的技术乐园":{"link":"http://aimpeter.xyz/","avatar":"https://ws4.sinaimg.cn/large/006tNc79gy1fhkma5ei3pj30ak0akt8w.jpg","desc":"个人blog"}}}},"excerpt":"","more":""},{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://blog.cofess.com\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://blog.cofess.com\" homePageName=\"回到我的主页\"></script>\n","date":"2017-10-16T07:42:44.681Z","updated":"2017-10-16T07:25:54.733Z","path":"/404.html","layout":"page","_id":"cj8tvh62a0004brfaqpptzced","content":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://blog.cofess.com\" homepagename=\"回到我的主页\"></script>\n","site":{"data":{}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://blog.cofess.com\" homepagename=\"回到我的主页\"></script>\n"},{"title":"书单","layout":"books","comments":0,"sidebar":"none","_content":"","source":"books/index.md","raw":"---\ntitle: 书单\nlayout: books\ncomments: false\nsidebar: none\n---","date":"2017-10-16T07:43:14.550Z","updated":"2017-10-16T07:25:54.734Z","path":"books/index.html","_id":"cj8tvht4d0005brfa7x2itssr","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2017-10-16T07:43:14.559Z","updated":"2017-10-16T07:25:54.734Z","path":"categories/index.html","_id":"cj8tvht4d0006brfat5w3pn6p","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---","date":"2017-10-16T07:43:14.568Z","updated":"2017-10-16T07:25:54.735Z","path":"links/index.html","_id":"cj8tvht4e0007brfatb6n8g6k","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2017-10-16T07:43:17.929Z","updated":"2017-10-16T07:25:54.735Z","path":"repository/index.html","_id":"cj8tvht4e0008brfaa6mxffbr","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""}],"Post":[{"title":"CSS中margin和padding的区别","copyright":true,"date":"2017-06-03T08:56:57.000Z","_content":"\n> padding margin都是边距的含义，关键问题得明白是什么相对什么的边距．padding是控件的内容相对控件的边缘的边距．margin是控件边缘相对父空间的边距．\n\n\n\n<!--more-->\n\n在CSS中margin是指从自身边框到另一个容器边框之间的距离，就是容器外距离。在CSS中padding是指自身边框到自身内部另一个容器边框之间的距离，就是容器内距离。\n\n \n\n**下面是 padding和margin常用的用法**\n\n \n\n**一、padding**\n\n \n\n**1、语法结构**\n\n（1）padding-left:10px; 左内边距\n\n（2）padding-right:10px; 右内边距\n\n（3）padding-top:10px; 上内边距\n\n（4）padding-bottom:10px; 下内边距\n\n（5）padding：10px; 四边统一内边距\n\n（6）padding:10px 20px; 上下、左右内边距\n\n（7）padding:10px 20px 30px; 上、左右、下内边距\n\n（8）padding:10px 20px 30px 40px; 上、右、下、左内边距\n\n \n\n**2、可能取的值**\n\n（1）length  规定具体单位记的内边距长度\n\n（2）%       基于父元素的宽度的内边距的长度\n\n（3）auto    浏览器计算内边距\n\n（4）inherit 规定应该从父元素继承内边距\n\n \n\n**3、浏览器兼容问题**\n\n（1）所有浏览器都支持padding属性\n\n（2）任何版本IE都不支持属性值“inherit”\n\n \n\n \n\n**二、margin**\n\n \n\n**1、语法结构**\n\n（1）margin-left:10px; 左外边距\n\n（2）margin-right:10px; 右外边距\n\n（3）margin-top:10px; 上外边距\n\n（4）margin-bottom:10px; 下外边距\n\n（5）margin:10px; 四边统一外边距\n\n（6）margin:10px 20px; 上下、左右外边距\n\n（7）margin:10px 20px 30px; 上、左右、下外边距\n\n（8）margin:10px 20px 30px 40px; 上、右、下、左外边距\n\n \n\n**2、可能取的值**\n\n（1）length  规定具体单位记的外边距长度\n\n（2）%       基于父元素的宽度的外边距的长度\n\n（3）auto    浏览器计算外边距\n\n（4）inherit 规定应该从父元素继承外边距\n\n \n\n**3、浏览器兼容问题**\n\n（1）所有浏览器都支持margin属性\n\n（2）任何版本IE都不支持属性值“inherit”\n\n \n\n \n\n**三、margin和padding的区别用图表示为**\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fg84bkuy2tj30d1097gmd.jpg)\n\n","source":"_posts/CSS中margin和padding的区别.md","raw":"---\ntitle: CSS中margin和padding的区别\ncopyright: true\ndate: 2017-06-03 16:56:57\ntags: css\n---\n\n> padding margin都是边距的含义，关键问题得明白是什么相对什么的边距．padding是控件的内容相对控件的边缘的边距．margin是控件边缘相对父空间的边距．\n\n\n\n<!--more-->\n\n在CSS中margin是指从自身边框到另一个容器边框之间的距离，就是容器外距离。在CSS中padding是指自身边框到自身内部另一个容器边框之间的距离，就是容器内距离。\n\n \n\n**下面是 padding和margin常用的用法**\n\n \n\n**一、padding**\n\n \n\n**1、语法结构**\n\n（1）padding-left:10px; 左内边距\n\n（2）padding-right:10px; 右内边距\n\n（3）padding-top:10px; 上内边距\n\n（4）padding-bottom:10px; 下内边距\n\n（5）padding：10px; 四边统一内边距\n\n（6）padding:10px 20px; 上下、左右内边距\n\n（7）padding:10px 20px 30px; 上、左右、下内边距\n\n（8）padding:10px 20px 30px 40px; 上、右、下、左内边距\n\n \n\n**2、可能取的值**\n\n（1）length  规定具体单位记的内边距长度\n\n（2）%       基于父元素的宽度的内边距的长度\n\n（3）auto    浏览器计算内边距\n\n（4）inherit 规定应该从父元素继承内边距\n\n \n\n**3、浏览器兼容问题**\n\n（1）所有浏览器都支持padding属性\n\n（2）任何版本IE都不支持属性值“inherit”\n\n \n\n \n\n**二、margin**\n\n \n\n**1、语法结构**\n\n（1）margin-left:10px; 左外边距\n\n（2）margin-right:10px; 右外边距\n\n（3）margin-top:10px; 上外边距\n\n（4）margin-bottom:10px; 下外边距\n\n（5）margin:10px; 四边统一外边距\n\n（6）margin:10px 20px; 上下、左右外边距\n\n（7）margin:10px 20px 30px; 上、左右、下外边距\n\n（8）margin:10px 20px 30px 40px; 上、右、下、左外边距\n\n \n\n**2、可能取的值**\n\n（1）length  规定具体单位记的外边距长度\n\n（2）%       基于父元素的宽度的外边距的长度\n\n（3）auto    浏览器计算外边距\n\n（4）inherit 规定应该从父元素继承外边距\n\n \n\n**3、浏览器兼容问题**\n\n（1）所有浏览器都支持margin属性\n\n（2）任何版本IE都不支持属性值“inherit”\n\n \n\n \n\n**三、margin和padding的区别用图表示为**\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fg84bkuy2tj30d1097gmd.jpg)\n\n","slug":"CSS中margin和padding的区别","published":1,"updated":"2017-10-16T07:16:33.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk27v0001q0fa91ynnb60","content":"<blockquote>\n<p>padding margin都是边距的含义，关键问题得明白是什么相对什么的边距．padding是控件的内容相对控件的边缘的边距．margin是控件边缘相对父空间的边距．</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>在CSS中margin是指从自身边框到另一个容器边框之间的距离，就是容器外距离。在CSS中padding是指自身边框到自身内部另一个容器边框之间的距离，就是容器内距离。</p>\n<p><strong>下面是 padding和margin常用的用法</strong></p>\n<p><strong>一、padding</strong></p>\n<p><strong>1、语法结构</strong></p>\n<p>（1）padding-left:10px; 左内边距</p>\n<p>（2）padding-right:10px; 右内边距</p>\n<p>（3）padding-top:10px; 上内边距</p>\n<p>（4）padding-bottom:10px; 下内边距</p>\n<p>（5）padding：10px; 四边统一内边距</p>\n<p>（6）padding:10px 20px; 上下、左右内边距</p>\n<p>（7）padding:10px 20px 30px; 上、左右、下内边距</p>\n<p>（8）padding:10px 20px 30px 40px; 上、右、下、左内边距</p>\n<p><strong>2、可能取的值</strong></p>\n<p>（1）length  规定具体单位记的内边距长度</p>\n<p>（2）%       基于父元素的宽度的内边距的长度</p>\n<p>（3）auto    浏览器计算内边距</p>\n<p>（4）inherit 规定应该从父元素继承内边距</p>\n<p><strong>3、浏览器兼容问题</strong></p>\n<p>（1）所有浏览器都支持padding属性</p>\n<p>（2）任何版本IE都不支持属性值“inherit”</p>\n<p><strong>二、margin</strong></p>\n<p><strong>1、语法结构</strong></p>\n<p>（1）margin-left:10px; 左外边距</p>\n<p>（2）margin-right:10px; 右外边距</p>\n<p>（3）margin-top:10px; 上外边距</p>\n<p>（4）margin-bottom:10px; 下外边距</p>\n<p>（5）margin:10px; 四边统一外边距</p>\n<p>（6）margin:10px 20px; 上下、左右外边距</p>\n<p>（7）margin:10px 20px 30px; 上、左右、下外边距</p>\n<p>（8）margin:10px 20px 30px 40px; 上、右、下、左外边距</p>\n<p><strong>2、可能取的值</strong></p>\n<p>（1）length  规定具体单位记的外边距长度</p>\n<p>（2）%       基于父元素的宽度的外边距的长度</p>\n<p>（3）auto    浏览器计算外边距</p>\n<p>（4）inherit 规定应该从父元素继承外边距</p>\n<p><strong>3、浏览器兼容问题</strong></p>\n<p>（1）所有浏览器都支持margin属性</p>\n<p>（2）任何版本IE都不支持属性值“inherit”</p>\n<p><strong>三、margin和padding的区别用图表示为</strong></p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fg84bkuy2tj30d1097gmd.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>padding margin都是边距的含义，关键问题得明白是什么相对什么的边距．padding是控件的内容相对控件的边缘的边距．margin是控件边缘相对父空间的边距．</p>\n</blockquote>","more":"<p>在CSS中margin是指从自身边框到另一个容器边框之间的距离，就是容器外距离。在CSS中padding是指自身边框到自身内部另一个容器边框之间的距离，就是容器内距离。</p>\n<p><strong>下面是 padding和margin常用的用法</strong></p>\n<p><strong>一、padding</strong></p>\n<p><strong>1、语法结构</strong></p>\n<p>（1）padding-left:10px; 左内边距</p>\n<p>（2）padding-right:10px; 右内边距</p>\n<p>（3）padding-top:10px; 上内边距</p>\n<p>（4）padding-bottom:10px; 下内边距</p>\n<p>（5）padding：10px; 四边统一内边距</p>\n<p>（6）padding:10px 20px; 上下、左右内边距</p>\n<p>（7）padding:10px 20px 30px; 上、左右、下内边距</p>\n<p>（8）padding:10px 20px 30px 40px; 上、右、下、左内边距</p>\n<p><strong>2、可能取的值</strong></p>\n<p>（1）length  规定具体单位记的内边距长度</p>\n<p>（2）%       基于父元素的宽度的内边距的长度</p>\n<p>（3）auto    浏览器计算内边距</p>\n<p>（4）inherit 规定应该从父元素继承内边距</p>\n<p><strong>3、浏览器兼容问题</strong></p>\n<p>（1）所有浏览器都支持padding属性</p>\n<p>（2）任何版本IE都不支持属性值“inherit”</p>\n<p><strong>二、margin</strong></p>\n<p><strong>1、语法结构</strong></p>\n<p>（1）margin-left:10px; 左外边距</p>\n<p>（2）margin-right:10px; 右外边距</p>\n<p>（3）margin-top:10px; 上外边距</p>\n<p>（4）margin-bottom:10px; 下外边距</p>\n<p>（5）margin:10px; 四边统一外边距</p>\n<p>（6）margin:10px 20px; 上下、左右外边距</p>\n<p>（7）margin:10px 20px 30px; 上、左右、下外边距</p>\n<p>（8）margin:10px 20px 30px 40px; 上、右、下、左外边距</p>\n<p><strong>2、可能取的值</strong></p>\n<p>（1）length  规定具体单位记的外边距长度</p>\n<p>（2）%       基于父元素的宽度的外边距的长度</p>\n<p>（3）auto    浏览器计算外边距</p>\n<p>（4）inherit 规定应该从父元素继承外边距</p>\n<p><strong>3、浏览器兼容问题</strong></p>\n<p>（1）所有浏览器都支持margin属性</p>\n<p>（2）任何版本IE都不支持属性值“inherit”</p>\n<p><strong>三、margin和padding的区别用图表示为</strong></p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fg84bkuy2tj30d1097gmd.jpg\" alt=\"\"></p>"},{"title":"C++中的struct和class的区别","copyright":true,"date":"2017-06-06T10:58:57.000Z","_content":"\n> C++中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。\n\nstruct能包含成员函数吗？ 能！\nstruct能继承吗？ 能！！\nstruct能实现多态吗？ 能！！！\n\n<!--more--> \n\n既然这些它都能实现，那它和class还能有什么区别？\n\n最本质的一个区别就是默认的访问控制，体现在两个方面：\n\n \n\n## 1）默认的继承访问权限。struct是public的，class是private的。\n\n你可以写如下的代码：\n\n```c++\nstruct A\n{\nchar a;\n}；\nstruct B : A\n{\nchar b;\n}；\n```\n\n这个时候B是public继承A的。\n\n如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。\n\n \n\n所以我们在平时写类继承的时候，通常会这样写：\nstruct B : public A\n\n就是为了指明是public继承，而不是用默认的private继承。\n\n \n\n当然，到底默认是public继承还是private继承，取决于子类而不是基类。\n\n我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：\n\n```c++\nstruct A{}；class B : A{}; //private继承\n\nstruct C : B{}； //public继承\n```\n\n \n\n## 2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\n\n \n\n注意我上面的用词，我依旧强调struct是一种数据结构的实现体，虽然它是可以像class一样的用。我依旧将struct里的变量叫数据，class内的变量叫成员，虽然它们并无区别。\n\n其实，到底是用struct还是class，完全看个人的喜好，你可以将你程序里所有的class全部替换成struct，它依旧可以很正常的运行。但我给出的最好建议，还是：当你觉得你要做的更像是一种数据结构的话，那么用struct，如果你要做的更像是一种对象的话，那么用class。\n\n \n\n当然，我在这里还要强调一点的就是，对于访问控制，应该在程序里明确的指出，而不是依靠默认，这是一个良好的习惯，也让你的代码更具可读性。\n\n \n\n说到这里，很多了解的人或许都认为这个话题可以结束了，因为他们知道struct和class的“唯一”区别就是访问控制。很多文献上也确实只提到这一个区别。\n\n \n\n但我上面却没有用“唯一”，而是说的“最本质”，那是因为，它们确实还有另一个区别，虽然那个区别我们平时可能很少涉及。那就是：“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。这一点在Stanley B.Lippman写的Inside the C++ Object Model有过说明。\n\n \n\n问题讨论到这里，基本上应该可以结束了。但有人曾说过，他还发现过其他的“区别”，那么，让我们来看看，这到底是不是又一个区别。还是上面所说的，C++中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：\n\n ```c++\nstruct A //定义一个struct\n\n{\n\nchar c1;\n\nint n2;\n\ndouble db3;\n\n};\n\nA a={'p',7,3.1415926}; //定义时直接赋值\n\n ```\n\n\n\n也就是说struct可以在定义的时候用{}赋初值。那么问题来了，class行不行呢？将上面的struct改成class，试试看。报错！噢~于是那人跳出来说，他又找到了一个区别。我们仔细看看，这真的又是一个区别吗？\n\n \n\n你试着向上面的struct中加入一个构造函数（或虚函数），你会发现什么？\n对，struct也不能用{}赋初值了。\n\n的确，以{}的方式来赋初值，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={'p',7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。\n\n \n\n事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。\n\n \n\n那么，看到这里，我们发现即使是struct想用{}来赋初值，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。\n\n \n\n那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？\n\n其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初值了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！\n\n \n\n做个总结，从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。\n\n\n\n来自：[http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html](http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html)","source":"_posts/C-中的struct和class的区别.md","raw":"---\ntitle: C++中的struct和class的区别\ncopyright: true\ndate: 2017-06-06 18:58:57\ntags: C++\n---\n\n> C++中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。\n\nstruct能包含成员函数吗？ 能！\nstruct能继承吗？ 能！！\nstruct能实现多态吗？ 能！！！\n\n<!--more--> \n\n既然这些它都能实现，那它和class还能有什么区别？\n\n最本质的一个区别就是默认的访问控制，体现在两个方面：\n\n \n\n## 1）默认的继承访问权限。struct是public的，class是private的。\n\n你可以写如下的代码：\n\n```c++\nstruct A\n{\nchar a;\n}；\nstruct B : A\n{\nchar b;\n}；\n```\n\n这个时候B是public继承A的。\n\n如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。\n\n \n\n所以我们在平时写类继承的时候，通常会这样写：\nstruct B : public A\n\n就是为了指明是public继承，而不是用默认的private继承。\n\n \n\n当然，到底默认是public继承还是private继承，取决于子类而不是基类。\n\n我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：\n\n```c++\nstruct A{}；class B : A{}; //private继承\n\nstruct C : B{}； //public继承\n```\n\n \n\n## 2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\n\n \n\n注意我上面的用词，我依旧强调struct是一种数据结构的实现体，虽然它是可以像class一样的用。我依旧将struct里的变量叫数据，class内的变量叫成员，虽然它们并无区别。\n\n其实，到底是用struct还是class，完全看个人的喜好，你可以将你程序里所有的class全部替换成struct，它依旧可以很正常的运行。但我给出的最好建议，还是：当你觉得你要做的更像是一种数据结构的话，那么用struct，如果你要做的更像是一种对象的话，那么用class。\n\n \n\n当然，我在这里还要强调一点的就是，对于访问控制，应该在程序里明确的指出，而不是依靠默认，这是一个良好的习惯，也让你的代码更具可读性。\n\n \n\n说到这里，很多了解的人或许都认为这个话题可以结束了，因为他们知道struct和class的“唯一”区别就是访问控制。很多文献上也确实只提到这一个区别。\n\n \n\n但我上面却没有用“唯一”，而是说的“最本质”，那是因为，它们确实还有另一个区别，虽然那个区别我们平时可能很少涉及。那就是：“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。这一点在Stanley B.Lippman写的Inside the C++ Object Model有过说明。\n\n \n\n问题讨论到这里，基本上应该可以结束了。但有人曾说过，他还发现过其他的“区别”，那么，让我们来看看，这到底是不是又一个区别。还是上面所说的，C++中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：\n\n ```c++\nstruct A //定义一个struct\n\n{\n\nchar c1;\n\nint n2;\n\ndouble db3;\n\n};\n\nA a={'p',7,3.1415926}; //定义时直接赋值\n\n ```\n\n\n\n也就是说struct可以在定义的时候用{}赋初值。那么问题来了，class行不行呢？将上面的struct改成class，试试看。报错！噢~于是那人跳出来说，他又找到了一个区别。我们仔细看看，这真的又是一个区别吗？\n\n \n\n你试着向上面的struct中加入一个构造函数（或虚函数），你会发现什么？\n对，struct也不能用{}赋初值了。\n\n的确，以{}的方式来赋初值，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={'p',7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。\n\n \n\n事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。\n\n \n\n那么，看到这里，我们发现即使是struct想用{}来赋初值，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。\n\n \n\n那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？\n\n其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初值了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！\n\n \n\n做个总结，从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。\n\n\n\n来自：[http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html](http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html)","slug":"C-中的struct和class的区别","published":1,"updated":"2017-10-16T07:16:33.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk27y0002q0fag29bck2c","content":"<blockquote>\n<p>C++中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。</p>\n</blockquote>\n<p>struct能包含成员函数吗？ 能！<br>struct能继承吗？ 能！！<br>struct能实现多态吗？ 能！！！</p>\n<a id=\"more\"></a> \n<p>既然这些它都能实现，那它和class还能有什么区别？</p>\n<p>最本质的一个区别就是默认的访问控制，体现在两个方面：</p>\n<h2 id=\"1）默认的继承访问权限。struct是public的，class是private的。\"><a href=\"#1）默认的继承访问权限。struct是public的，class是private的。\" class=\"headerlink\" title=\"1）默认的继承访问权限。struct是public的，class是private的。\"></a>1）默认的继承访问权限。struct是public的，class是private的。</h2><p>你可以写如下的代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span></span></div><div class=\"line\"><span class=\"class\">&#123;</span></div><div class=\"line\"><span class=\"keyword\">char</span> a;</div><div class=\"line\">&#125;；</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">B</span> :</span> A</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">char</span> b;</div><div class=\"line\">&#125;；</div></pre></td></tr></table></figure>\n<p>这个时候B是public继承A的。</p>\n<p>如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。</p>\n<p>所以我们在平时写类继承的时候，通常会这样写：<br>struct B : public A</p>\n<p>就是为了指明是public继承，而不是用默认的private继承。</p>\n<p>当然，到底默认是public继承还是private继承，取决于子类而不是基类。</p>\n<p>我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span>&#123;</span>&#125;；<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> :</span> A&#123;&#125;; <span class=\"comment\">//private继承</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">C</span> :</span> B&#123;&#125;； <span class=\"comment\">//public继承</span></div></pre></td></tr></table></figure>\n<h2 id=\"2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\"><a href=\"#2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\" class=\"headerlink\" title=\"2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\"></a>2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。</h2><p>注意我上面的用词，我依旧强调struct是一种数据结构的实现体，虽然它是可以像class一样的用。我依旧将struct里的变量叫数据，class内的变量叫成员，虽然它们并无区别。</p>\n<p>其实，到底是用struct还是class，完全看个人的喜好，你可以将你程序里所有的class全部替换成struct，它依旧可以很正常的运行。但我给出的最好建议，还是：当你觉得你要做的更像是一种数据结构的话，那么用struct，如果你要做的更像是一种对象的话，那么用class。</p>\n<p>当然，我在这里还要强调一点的就是，对于访问控制，应该在程序里明确的指出，而不是依靠默认，这是一个良好的习惯，也让你的代码更具可读性。</p>\n<p>说到这里，很多了解的人或许都认为这个话题可以结束了，因为他们知道struct和class的“唯一”区别就是访问控制。很多文献上也确实只提到这一个区别。</p>\n<p>但我上面却没有用“唯一”，而是说的“最本质”，那是因为，它们确实还有另一个区别，虽然那个区别我们平时可能很少涉及。那就是：“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。这一点在Stanley B.Lippman写的Inside the C++ Object Model有过说明。</p>\n<p>问题讨论到这里，基本上应该可以结束了。但有人曾说过，他还发现过其他的“区别”，那么，让我们来看看，这到底是不是又一个区别。还是上面所说的，C++中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span> //定义一个<span class=\"title\">struct</span></span></div><div class=\"line\"><span class=\"class\"></span></div><div class=\"line\"><span class=\"class\">&#123;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">char</span> c1;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> n2;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">double</span> db3;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">A a=&#123;<span class=\"string\">'p'</span>,<span class=\"number\">7</span>,<span class=\"number\">3.1415926</span>&#125;; <span class=\"comment\">//定义时直接赋值</span></div></pre></td></tr></table></figure>\n<p>也就是说struct可以在定义的时候用{}赋初值。那么问题来了，class行不行呢？将上面的struct改成class，试试看。报错！噢~于是那人跳出来说，他又找到了一个区别。我们仔细看看，这真的又是一个区别吗？</p>\n<p>你试着向上面的struct中加入一个构造函数（或虚函数），你会发现什么？<br>对，struct也不能用{}赋初值了。</p>\n<p>的确，以{}的方式来赋初值，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={‘p’,7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。</p>\n<p>事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。</p>\n<p>那么，看到这里，我们发现即使是struct想用{}来赋初值，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。</p>\n<p>那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？</p>\n<p>其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初值了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！</p>\n<p>做个总结，从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。</p>\n<p>来自：<a href=\"http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html\" target=\"_blank\" rel=\"external\">http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>C++中的struct对C中的struct进行了扩充，它已经不再只是一个包含不同数据类型的数据结构了，它已经获取了太多的功能。</p>\n</blockquote>\n<p>struct能包含成员函数吗？ 能！<br>struct能继承吗？ 能！！<br>struct能实现多态吗？ 能！！！</p>","more":"<p>既然这些它都能实现，那它和class还能有什么区别？</p>\n<p>最本质的一个区别就是默认的访问控制，体现在两个方面：</p>\n<h2 id=\"1）默认的继承访问权限。struct是public的，class是private的。\"><a href=\"#1）默认的继承访问权限。struct是public的，class是private的。\" class=\"headerlink\" title=\"1）默认的继承访问权限。struct是public的，class是private的。\"></a>1）默认的继承访问权限。struct是public的，class是private的。</h2><p>你可以写如下的代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span></span></div><div class=\"line\"><span class=\"class\">&#123;</span></div><div class=\"line\"><span class=\"keyword\">char</span> a;</div><div class=\"line\">&#125;；</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">B</span> :</span> A</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">char</span> b;</div><div class=\"line\">&#125;；</div></pre></td></tr></table></figure>\n<p>这个时候B是public继承A的。</p>\n<p>如果都将上面的struct改成class，那么B是private继承A的。这就是默认的继承访问权限。</p>\n<p>所以我们在平时写类继承的时候，通常会这样写：<br>struct B : public A</p>\n<p>就是为了指明是public继承，而不是用默认的private继承。</p>\n<p>当然，到底默认是public继承还是private继承，取决于子类而不是基类。</p>\n<p>我的意思是，struct可以继承class，同样class也可以继承struct，那么默认的继承访问权限是看子类到底是用的struct还是class。如下：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span>&#123;</span>&#125;；<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> :</span> A&#123;&#125;; <span class=\"comment\">//private继承</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">C</span> :</span> B&#123;&#125;； <span class=\"comment\">//public继承</span></div></pre></td></tr></table></figure>\n<h2 id=\"2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\"><a href=\"#2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\" class=\"headerlink\" title=\"2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。\"></a>2）struct作为数据结构的实现体，它默认的数据访问控制是public的，而class作为对象的实现体，它默认的成员变量访问控制是private的。</h2><p>注意我上面的用词，我依旧强调struct是一种数据结构的实现体，虽然它是可以像class一样的用。我依旧将struct里的变量叫数据，class内的变量叫成员，虽然它们并无区别。</p>\n<p>其实，到底是用struct还是class，完全看个人的喜好，你可以将你程序里所有的class全部替换成struct，它依旧可以很正常的运行。但我给出的最好建议，还是：当你觉得你要做的更像是一种数据结构的话，那么用struct，如果你要做的更像是一种对象的话，那么用class。</p>\n<p>当然，我在这里还要强调一点的就是，对于访问控制，应该在程序里明确的指出，而不是依靠默认，这是一个良好的习惯，也让你的代码更具可读性。</p>\n<p>说到这里，很多了解的人或许都认为这个话题可以结束了，因为他们知道struct和class的“唯一”区别就是访问控制。很多文献上也确实只提到这一个区别。</p>\n<p>但我上面却没有用“唯一”，而是说的“最本质”，那是因为，它们确实还有另一个区别，虽然那个区别我们平时可能很少涉及。那就是：“class”这个关键字还用于定义模板参数，就像“typename”。但关键字“struct”不用于定义模板参数。这一点在Stanley B.Lippman写的Inside the C++ Object Model有过说明。</p>\n<p>问题讨论到这里，基本上应该可以结束了。但有人曾说过，他还发现过其他的“区别”，那么，让我们来看看，这到底是不是又一个区别。还是上面所说的，C++中的struct是对C中的struct的扩充，既然是扩充，那么它就要兼容过去C中struct应有的所有特性。例如你可以这样写：</p>\n <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">A</span> //定义一个<span class=\"title\">struct</span></span></div><div class=\"line\"><span class=\"class\"></span></div><div class=\"line\"><span class=\"class\">&#123;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">char</span> c1;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> n2;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">double</span> db3;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">A a=&#123;<span class=\"string\">'p'</span>,<span class=\"number\">7</span>,<span class=\"number\">3.1415926</span>&#125;; <span class=\"comment\">//定义时直接赋值</span></div></pre></td></tr></table></figure>\n<p>也就是说struct可以在定义的时候用{}赋初值。那么问题来了，class行不行呢？将上面的struct改成class，试试看。报错！噢~于是那人跳出来说，他又找到了一个区别。我们仔细看看，这真的又是一个区别吗？</p>\n<p>你试着向上面的struct中加入一个构造函数（或虚函数），你会发现什么？<br>对，struct也不能用{}赋初值了。</p>\n<p>的确，以{}的方式来赋初值，只是用一个初始化列表来对数据进行按顺序的初始化，如上面如果写成A a={‘p’,7};则c1,n2被初始化，而db3没有。这样简单的copy操作，只能发生在简单的数据结构上，而不应该放在对象上。加入一个构造函数或是一个虚函数会使struct更体现出一种对象的特性，而使此{}操作不再有效。</p>\n<p>事实上，是因为加入这样的函数，使得类的内部结构发生了变化。而加入一个普通的成员函数呢？你会发现{}依旧可用。其实你可以将普通的函数理解成对数据结构的一种算法，这并不打破它数据结构的特性。</p>\n<p>那么，看到这里，我们发现即使是struct想用{}来赋初值，它也必须满足很多的约束条件，这些条件实际上就是让struct更体现出一种数据机构而不是类的特性。</p>\n<p>那为什么我们在上面仅仅将struct改成class，{}就不能用了呢？</p>\n<p>其实问题恰巧是我们之前所讲的——访问控制！你看看，我们忘记了什么？对，将struct改成class的时候，访问控制由public变为private了，那当然就不能用{}来赋初值了。加上一个public，你会发现，class也是能用{}的，和struct毫无区别！！！</p>\n<p>做个总结，从上面的区别，我们可以看出，struct更适合看成是一个数据结构的实现体，class更适合看成是一个对象的实现体。</p>\n<p>来自：<a href=\"http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html\" target=\"_blank\" rel=\"external\">http://hi.baidu.com/pengxiangbobin19890125/blog/item/b05586eee77300212df53411.html</a></p>"},{"title":"HTTP状态码","copyright":true,"date":"2017-06-04T12:39:47.000Z","_content":"\n\n\n> 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。\n\n<!--more-->\n\nHTTP状态码的英文为HTTP Status Code。\n\n下面是常见的HTTP状态码：\n\n- 200 - 请求成功\n- 301 - 资源（网页等）被永久转移到其它URL\n- 404 - 请求的资源（网页等）不存在\n- 500 - 内部服务器错误\n\n## HTTP状态码分类\n\nHTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：\n\n| 分类   | 分类描述                    |\n| ---- | ----------------------- |\n| 1**  | 信息，服务器收到请求，需要请求者继续执行操作  |\n| 2**  | 成功，操作被成功接收并处理           |\n| 3**  | 重定向，需要进一步的操作以完成请求       |\n| 4**  | 客户端错误，请求包含语法错误或无法完成请求   |\n| 5**  | 服务器错误，服务器在处理请求的过程中发生了错误 |\n\nHTTP状态码列表:\n\n| 状态码  | 状态码英文名称                         | 中文描述                                     |\n| ---- | ------------------------------- | ---------------------------------------- |\n| 100  | Continue                        | 继续。[客户端](http://www.dreamdu.com/webbuild/client_vs_server/)应继续其请求 |\n| 101  | Switching Protocols             | 切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议 |\n|      |                                 |                                          |\n| 200  | OK                              | 请求成功。一般用于GET与POST请求                      |\n| 201  | Created                         | 已创建。成功请求并创建了新的资源                         |\n| 202  | Accepted                        | 已接受。已经接受请求，但未处理完成                        |\n| 203  | Non-Authoritative Information   | 非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本     |\n| 204  | No Content                      | 无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档 |\n| 205  | Reset Content                   | 重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域 |\n| 206  | Partial Content                 | 部分内容。服务器成功处理了部分GET请求                     |\n|      |                                 |                                          |\n| 300  | Multiple Choices                | 多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择 |\n| 301  | Moved Permanently               | 永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替 |\n| 302  | Found                           | 临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI     |\n| 303  | See Other                       | 查看其它地址。与301类似。使用GET和POST请求查看             |\n| 304  | Not Modified                    | 未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源 |\n| 305  | Use Proxy                       | 使用代理。所请求的资源必须通过代理访问                      |\n| 306  | Unused                          | 已经被废弃的HTTP状态码                            |\n| 307  | Temporary Redirect              | 临时重定向。与302类似。使用GET请求重定向                  |\n|      |                                 |                                          |\n| 400  | Bad Request                     | 客户端请求的语法错误，服务器无法理解                       |\n| 401  | Unauthorized                    | 请求要求用户的身份认证                              |\n| 402  | Payment Required                | 保留，将来使用                                  |\n| 403  | Forbidden                       | 服务器理解请求客户端的请求，但是拒绝执行此请求                  |\n| 404  | Not Found                       | 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您所请求的资源无法找到\"的个性页面 |\n| 405  | Method Not Allowed              | 客户端请求中的方法被禁止                             |\n| 406  | Not Acceptable                  | 服务器无法根据客户端请求的内容特性完成请求                    |\n| 407  | Proxy Authentication Required   | 请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权        |\n| 408  | Request Time-out                | 服务器等待客户端发送的请求时间过长，超时                     |\n| 409  | Conflict                        | 服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突     |\n| 410  | Gone                            | 客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置 |\n| 411  | Length Required                 | 服务器无法处理客户端发送的不带Content-Length的请求信息       |\n| 412  | Precondition Failed             | 客户端请求信息的先决条件错误                           |\n| 413  | Request Entity Too Large        | 由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息 |\n| 414  | Request-URI Too Large           | 请求的URI过长（URI通常为网址），服务器无法处理               |\n| 415  | Unsupported Media Type          | 服务器无法处理请求附带的媒体格式                         |\n| 416  | Requested range not satisfiable | 客户端请求的范围无效                               |\n| 417  | Expectation Failed              | 服务器无法满足Expect的请求头信息                      |\n|      |                                 |                                          |\n| 500  | Internal Server Error           | 服务器内部错误，无法完成请求                           |\n| 501  | Not Implemented                 | 服务器不支持请求的功能，无法完成请求                       |\n| 502  | Bad Gateway                     | 充当网关或代理的服务器，从远端服务器接收到了一个无效的请求            |\n| 503  | Service Unavailable             | 由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中 |\n| 504  | Gateway Time-out                | 充当网关或代理的服务器，未及时从远端服务器获取请求                |\n| 505  | HTTP Version not supported      | 服务器不支持请求的HTTP协议的版本，无法完成处理                |","source":"_posts/HTTP状态码.md","raw":"---\ntitle: HTTP状态码\ncopyright: true\ndate: 2017-06-04 20:39:47\ntags: HTTP\n---\n\n\n\n> 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。\n\n<!--more-->\n\nHTTP状态码的英文为HTTP Status Code。\n\n下面是常见的HTTP状态码：\n\n- 200 - 请求成功\n- 301 - 资源（网页等）被永久转移到其它URL\n- 404 - 请求的资源（网页等）不存在\n- 500 - 内部服务器错误\n\n## HTTP状态码分类\n\nHTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：\n\n| 分类   | 分类描述                    |\n| ---- | ----------------------- |\n| 1**  | 信息，服务器收到请求，需要请求者继续执行操作  |\n| 2**  | 成功，操作被成功接收并处理           |\n| 3**  | 重定向，需要进一步的操作以完成请求       |\n| 4**  | 客户端错误，请求包含语法错误或无法完成请求   |\n| 5**  | 服务器错误，服务器在处理请求的过程中发生了错误 |\n\nHTTP状态码列表:\n\n| 状态码  | 状态码英文名称                         | 中文描述                                     |\n| ---- | ------------------------------- | ---------------------------------------- |\n| 100  | Continue                        | 继续。[客户端](http://www.dreamdu.com/webbuild/client_vs_server/)应继续其请求 |\n| 101  | Switching Protocols             | 切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议 |\n|      |                                 |                                          |\n| 200  | OK                              | 请求成功。一般用于GET与POST请求                      |\n| 201  | Created                         | 已创建。成功请求并创建了新的资源                         |\n| 202  | Accepted                        | 已接受。已经接受请求，但未处理完成                        |\n| 203  | Non-Authoritative Information   | 非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本     |\n| 204  | No Content                      | 无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档 |\n| 205  | Reset Content                   | 重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域 |\n| 206  | Partial Content                 | 部分内容。服务器成功处理了部分GET请求                     |\n|      |                                 |                                          |\n| 300  | Multiple Choices                | 多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择 |\n| 301  | Moved Permanently               | 永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替 |\n| 302  | Found                           | 临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI     |\n| 303  | See Other                       | 查看其它地址。与301类似。使用GET和POST请求查看             |\n| 304  | Not Modified                    | 未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源 |\n| 305  | Use Proxy                       | 使用代理。所请求的资源必须通过代理访问                      |\n| 306  | Unused                          | 已经被废弃的HTTP状态码                            |\n| 307  | Temporary Redirect              | 临时重定向。与302类似。使用GET请求重定向                  |\n|      |                                 |                                          |\n| 400  | Bad Request                     | 客户端请求的语法错误，服务器无法理解                       |\n| 401  | Unauthorized                    | 请求要求用户的身份认证                              |\n| 402  | Payment Required                | 保留，将来使用                                  |\n| 403  | Forbidden                       | 服务器理解请求客户端的请求，但是拒绝执行此请求                  |\n| 404  | Not Found                       | 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\"您所请求的资源无法找到\"的个性页面 |\n| 405  | Method Not Allowed              | 客户端请求中的方法被禁止                             |\n| 406  | Not Acceptable                  | 服务器无法根据客户端请求的内容特性完成请求                    |\n| 407  | Proxy Authentication Required   | 请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权        |\n| 408  | Request Time-out                | 服务器等待客户端发送的请求时间过长，超时                     |\n| 409  | Conflict                        | 服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突     |\n| 410  | Gone                            | 客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置 |\n| 411  | Length Required                 | 服务器无法处理客户端发送的不带Content-Length的请求信息       |\n| 412  | Precondition Failed             | 客户端请求信息的先决条件错误                           |\n| 413  | Request Entity Too Large        | 由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息 |\n| 414  | Request-URI Too Large           | 请求的URI过长（URI通常为网址），服务器无法处理               |\n| 415  | Unsupported Media Type          | 服务器无法处理请求附带的媒体格式                         |\n| 416  | Requested range not satisfiable | 客户端请求的范围无效                               |\n| 417  | Expectation Failed              | 服务器无法满足Expect的请求头信息                      |\n|      |                                 |                                          |\n| 500  | Internal Server Error           | 服务器内部错误，无法完成请求                           |\n| 501  | Not Implemented                 | 服务器不支持请求的功能，无法完成请求                       |\n| 502  | Bad Gateway                     | 充当网关或代理的服务器，从远端服务器接收到了一个无效的请求            |\n| 503  | Service Unavailable             | 由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中 |\n| 504  | Gateway Time-out                | 充当网关或代理的服务器，未及时从远端服务器获取请求                |\n| 505  | HTTP Version not supported      | 服务器不支持请求的HTTP协议的版本，无法完成处理                |","slug":"HTTP状态码","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk2820004q0fabo606zuv","content":"<blockquote>\n<p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>HTTP状态码的英文为HTTP Status Code。</p>\n<p>下面是常见的HTTP状态码：</p>\n<ul>\n<li>200 - 请求成功</li>\n<li>301 - 资源（网页等）被永久转移到其它URL</li>\n<li>404 - 请求的资源（网页等）不存在</li>\n<li>500 - 内部服务器错误</li>\n</ul>\n<h2 id=\"HTTP状态码分类\"><a href=\"#HTTP状态码分类\" class=\"headerlink\" title=\"HTTP状态码分类\"></a>HTTP状态码分类</h2><p>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>分类描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1**</td>\n<td>信息，服务器收到请求，需要请求者继续执行操作</td>\n</tr>\n<tr>\n<td>2**</td>\n<td>成功，操作被成功接收并处理</td>\n</tr>\n<tr>\n<td>3**</td>\n<td>重定向，需要进一步的操作以完成请求</td>\n</tr>\n<tr>\n<td>4**</td>\n<td>客户端错误，请求包含语法错误或无法完成请求</td>\n</tr>\n<tr>\n<td>5**</td>\n<td>服务器错误，服务器在处理请求的过程中发生了错误</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP状态码列表:</p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码英文名称</th>\n<th>中文描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100</td>\n<td>Continue</td>\n<td>继续。<a href=\"http://www.dreamdu.com/webbuild/client_vs_server/\" target=\"_blank\" rel=\"external\">客户端</a>应继续其请求</td>\n</tr>\n<tr>\n<td>101</td>\n<td>Switching Protocols</td>\n<td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>200</td>\n<td>OK</td>\n<td>请求成功。一般用于GET与POST请求</td>\n</tr>\n<tr>\n<td>201</td>\n<td>Created</td>\n<td>已创建。成功请求并创建了新的资源</td>\n</tr>\n<tr>\n<td>202</td>\n<td>Accepted</td>\n<td>已接受。已经接受请求，但未处理完成</td>\n</tr>\n<tr>\n<td>203</td>\n<td>Non-Authoritative Information</td>\n<td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td>\n</tr>\n<tr>\n<td>204</td>\n<td>No Content</td>\n<td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td>\n</tr>\n<tr>\n<td>205</td>\n<td>Reset Content</td>\n<td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td>\n</tr>\n<tr>\n<td>206</td>\n<td>Partial Content</td>\n<td>部分内容。服务器成功处理了部分GET请求</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>300</td>\n<td>Multiple Choices</td>\n<td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td>\n</tr>\n<tr>\n<td>301</td>\n<td>Moved Permanently</td>\n<td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td>\n</tr>\n<tr>\n<td>302</td>\n<td>Found</td>\n<td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td>\n</tr>\n<tr>\n<td>303</td>\n<td>See Other</td>\n<td>查看其它地址。与301类似。使用GET和POST请求查看</td>\n</tr>\n<tr>\n<td>304</td>\n<td>Not Modified</td>\n<td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td>\n</tr>\n<tr>\n<td>305</td>\n<td>Use Proxy</td>\n<td>使用代理。所请求的资源必须通过代理访问</td>\n</tr>\n<tr>\n<td>306</td>\n<td>Unused</td>\n<td>已经被废弃的HTTP状态码</td>\n</tr>\n<tr>\n<td>307</td>\n<td>Temporary Redirect</td>\n<td>临时重定向。与302类似。使用GET请求重定向</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>400</td>\n<td>Bad Request</td>\n<td>客户端请求的语法错误，服务器无法理解</td>\n</tr>\n<tr>\n<td>401</td>\n<td>Unauthorized</td>\n<td>请求要求用户的身份认证</td>\n</tr>\n<tr>\n<td>402</td>\n<td>Payment Required</td>\n<td>保留，将来使用</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden</td>\n<td>服务器理解请求客户端的请求，但是拒绝执行此请求</td>\n</tr>\n<tr>\n<td>404</td>\n<td>Not Found</td>\n<td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td>\n</tr>\n<tr>\n<td>405</td>\n<td>Method Not Allowed</td>\n<td>客户端请求中的方法被禁止</td>\n</tr>\n<tr>\n<td>406</td>\n<td>Not Acceptable</td>\n<td>服务器无法根据客户端请求的内容特性完成请求</td>\n</tr>\n<tr>\n<td>407</td>\n<td>Proxy Authentication Required</td>\n<td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td>\n</tr>\n<tr>\n<td>408</td>\n<td>Request Time-out</td>\n<td>服务器等待客户端发送的请求时间过长，超时</td>\n</tr>\n<tr>\n<td>409</td>\n<td>Conflict</td>\n<td>服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突</td>\n</tr>\n<tr>\n<td>410</td>\n<td>Gone</td>\n<td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td>\n</tr>\n<tr>\n<td>411</td>\n<td>Length Required</td>\n<td>服务器无法处理客户端发送的不带Content-Length的请求信息</td>\n</tr>\n<tr>\n<td>412</td>\n<td>Precondition Failed</td>\n<td>客户端请求信息的先决条件错误</td>\n</tr>\n<tr>\n<td>413</td>\n<td>Request Entity Too Large</td>\n<td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td>\n</tr>\n<tr>\n<td>414</td>\n<td>Request-URI Too Large</td>\n<td>请求的URI过长（URI通常为网址），服务器无法处理</td>\n</tr>\n<tr>\n<td>415</td>\n<td>Unsupported Media Type</td>\n<td>服务器无法处理请求附带的媒体格式</td>\n</tr>\n<tr>\n<td>416</td>\n<td>Requested range not satisfiable</td>\n<td>客户端请求的范围无效</td>\n</tr>\n<tr>\n<td>417</td>\n<td>Expectation Failed</td>\n<td>服务器无法满足Expect的请求头信息</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>500</td>\n<td>Internal Server Error</td>\n<td>服务器内部错误，无法完成请求</td>\n</tr>\n<tr>\n<td>501</td>\n<td>Not Implemented</td>\n<td>服务器不支持请求的功能，无法完成请求</td>\n</tr>\n<tr>\n<td>502</td>\n<td>Bad Gateway</td>\n<td>充当网关或代理的服务器，从远端服务器接收到了一个无效的请求</td>\n</tr>\n<tr>\n<td>503</td>\n<td>Service Unavailable</td>\n<td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td>\n</tr>\n<tr>\n<td>504</td>\n<td>Gateway Time-out</td>\n<td>充当网关或代理的服务器，未及时从远端服务器获取请求</td>\n</tr>\n<tr>\n<td>505</td>\n<td>HTTP Version not supported</td>\n<td>服务器不支持请求的HTTP协议的版本，无法完成处理</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。</p>\n</blockquote>","more":"<p>HTTP状态码的英文为HTTP Status Code。</p>\n<p>下面是常见的HTTP状态码：</p>\n<ul>\n<li>200 - 请求成功</li>\n<li>301 - 资源（网页等）被永久转移到其它URL</li>\n<li>404 - 请求的资源（网页等）不存在</li>\n<li>500 - 内部服务器错误</li>\n</ul>\n<h2 id=\"HTTP状态码分类\"><a href=\"#HTTP状态码分类\" class=\"headerlink\" title=\"HTTP状态码分类\"></a>HTTP状态码分类</h2><p>HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：</p>\n<table>\n<thead>\n<tr>\n<th>分类</th>\n<th>分类描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1**</td>\n<td>信息，服务器收到请求，需要请求者继续执行操作</td>\n</tr>\n<tr>\n<td>2**</td>\n<td>成功，操作被成功接收并处理</td>\n</tr>\n<tr>\n<td>3**</td>\n<td>重定向，需要进一步的操作以完成请求</td>\n</tr>\n<tr>\n<td>4**</td>\n<td>客户端错误，请求包含语法错误或无法完成请求</td>\n</tr>\n<tr>\n<td>5**</td>\n<td>服务器错误，服务器在处理请求的过程中发生了错误</td>\n</tr>\n</tbody>\n</table>\n<p>HTTP状态码列表:</p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>状态码英文名称</th>\n<th>中文描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100</td>\n<td>Continue</td>\n<td>继续。<a href=\"http://www.dreamdu.com/webbuild/client_vs_server/\" target=\"_blank\" rel=\"external\">客户端</a>应继续其请求</td>\n</tr>\n<tr>\n<td>101</td>\n<td>Switching Protocols</td>\n<td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>200</td>\n<td>OK</td>\n<td>请求成功。一般用于GET与POST请求</td>\n</tr>\n<tr>\n<td>201</td>\n<td>Created</td>\n<td>已创建。成功请求并创建了新的资源</td>\n</tr>\n<tr>\n<td>202</td>\n<td>Accepted</td>\n<td>已接受。已经接受请求，但未处理完成</td>\n</tr>\n<tr>\n<td>203</td>\n<td>Non-Authoritative Information</td>\n<td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td>\n</tr>\n<tr>\n<td>204</td>\n<td>No Content</td>\n<td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td>\n</tr>\n<tr>\n<td>205</td>\n<td>Reset Content</td>\n<td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td>\n</tr>\n<tr>\n<td>206</td>\n<td>Partial Content</td>\n<td>部分内容。服务器成功处理了部分GET请求</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>300</td>\n<td>Multiple Choices</td>\n<td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td>\n</tr>\n<tr>\n<td>301</td>\n<td>Moved Permanently</td>\n<td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td>\n</tr>\n<tr>\n<td>302</td>\n<td>Found</td>\n<td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td>\n</tr>\n<tr>\n<td>303</td>\n<td>See Other</td>\n<td>查看其它地址。与301类似。使用GET和POST请求查看</td>\n</tr>\n<tr>\n<td>304</td>\n<td>Not Modified</td>\n<td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td>\n</tr>\n<tr>\n<td>305</td>\n<td>Use Proxy</td>\n<td>使用代理。所请求的资源必须通过代理访问</td>\n</tr>\n<tr>\n<td>306</td>\n<td>Unused</td>\n<td>已经被废弃的HTTP状态码</td>\n</tr>\n<tr>\n<td>307</td>\n<td>Temporary Redirect</td>\n<td>临时重定向。与302类似。使用GET请求重定向</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>400</td>\n<td>Bad Request</td>\n<td>客户端请求的语法错误，服务器无法理解</td>\n</tr>\n<tr>\n<td>401</td>\n<td>Unauthorized</td>\n<td>请求要求用户的身份认证</td>\n</tr>\n<tr>\n<td>402</td>\n<td>Payment Required</td>\n<td>保留，将来使用</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden</td>\n<td>服务器理解请求客户端的请求，但是拒绝执行此请求</td>\n</tr>\n<tr>\n<td>404</td>\n<td>Not Found</td>\n<td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td>\n</tr>\n<tr>\n<td>405</td>\n<td>Method Not Allowed</td>\n<td>客户端请求中的方法被禁止</td>\n</tr>\n<tr>\n<td>406</td>\n<td>Not Acceptable</td>\n<td>服务器无法根据客户端请求的内容特性完成请求</td>\n</tr>\n<tr>\n<td>407</td>\n<td>Proxy Authentication Required</td>\n<td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td>\n</tr>\n<tr>\n<td>408</td>\n<td>Request Time-out</td>\n<td>服务器等待客户端发送的请求时间过长，超时</td>\n</tr>\n<tr>\n<td>409</td>\n<td>Conflict</td>\n<td>服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突</td>\n</tr>\n<tr>\n<td>410</td>\n<td>Gone</td>\n<td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td>\n</tr>\n<tr>\n<td>411</td>\n<td>Length Required</td>\n<td>服务器无法处理客户端发送的不带Content-Length的请求信息</td>\n</tr>\n<tr>\n<td>412</td>\n<td>Precondition Failed</td>\n<td>客户端请求信息的先决条件错误</td>\n</tr>\n<tr>\n<td>413</td>\n<td>Request Entity Too Large</td>\n<td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td>\n</tr>\n<tr>\n<td>414</td>\n<td>Request-URI Too Large</td>\n<td>请求的URI过长（URI通常为网址），服务器无法处理</td>\n</tr>\n<tr>\n<td>415</td>\n<td>Unsupported Media Type</td>\n<td>服务器无法处理请求附带的媒体格式</td>\n</tr>\n<tr>\n<td>416</td>\n<td>Requested range not satisfiable</td>\n<td>客户端请求的范围无效</td>\n</tr>\n<tr>\n<td>417</td>\n<td>Expectation Failed</td>\n<td>服务器无法满足Expect的请求头信息</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>500</td>\n<td>Internal Server Error</td>\n<td>服务器内部错误，无法完成请求</td>\n</tr>\n<tr>\n<td>501</td>\n<td>Not Implemented</td>\n<td>服务器不支持请求的功能，无法完成请求</td>\n</tr>\n<tr>\n<td>502</td>\n<td>Bad Gateway</td>\n<td>充当网关或代理的服务器，从远端服务器接收到了一个无效的请求</td>\n</tr>\n<tr>\n<td>503</td>\n<td>Service Unavailable</td>\n<td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td>\n</tr>\n<tr>\n<td>504</td>\n<td>Gateway Time-out</td>\n<td>充当网关或代理的服务器，未及时从远端服务器获取请求</td>\n</tr>\n<tr>\n<td>505</td>\n<td>HTTP Version not supported</td>\n<td>服务器不支持请求的HTTP协议的版本，无法完成处理</td>\n</tr>\n</tbody>\n</table>"},{"title":"Emmet:WEB前端代码快速编写神器","copyright":true,"date":"2017-06-07T05:30:09.000Z","_content":"\nEmmet的前身是大名鼎鼎的Zen coding，如果你从事Web[前端开发](http://lib.csdn.net/base/javascript)的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度，当然Sublime Text也支持改插件，**默认在Sublime Text3种自带了这个插件**。\n\n<!--more-->\n\n下载Sublime Text3：[http://download.csdn.net/detail/u011127019/9596257](http://download.csdn.net/detail/u011127019/9596257)\n\n#  一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\n\n## 1.初始化，比如输入“!”或“html:5”，然后按Tab键\n\n![img](http://img.blog.csdn.net/20160820203739582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n输入标签，然后Tab键\n\n`div`\n\n```Css\n<div></div>  \n```\n\n## 2.轻松添加类、id、文本和属性\n\n比如输入：`div#person.top`\n\n自动生成：\n\n```Css\n<div id=\"person\" class=\"top\"></div>  \n```\n\n比如输入：`h1{标题}`\n\n自动生成：\n\n`<h1>标题</h1>  `\n\n比如输入：`a[href=#]`\n\n`<a href=\"#\"></a>  `\n\n## 3.嵌套\n\n现在你只需要1行代码就可以实现标签的嵌套。 \n\n- \\>：子元素符号，表示嵌套的元素\n- +：同级标签符号\n- ^：可以使该符号前的标签提升一行\n\n效果如下图所示： \n\n![img](http://img.blog.csdn.net/20160820205826673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n## 4.分组\n\n你可以通过嵌套和括号来快速生成一些代码块，比如输入`(.foo>h1)+(.bar>h2)`，会自动生成如下代码： \n\n```Css\n<div class=\"foo\">  \n\n  <h1></h1>  \n\n</div>  \n\n<div class=\"bar\">  \n\n  <h2></h2>  \n\n</div>  \n\n```\n\n\n\n## 5.隐式标签\n\n声明一个带类的标签，只需输入div.item，就会生成`<div class=\"item\"></div>`。 \n在过去版本中，可以省略掉div，即输入.item即可生成`<div class=\"item\"></div>`。现在如果只输入.item，则Emmet会根据父标签进行判定。比如在`<ul>`中输入.item，就会生成`<li class=\"item\"></li>`。 \n下面是所有的隐式标签名称： \n\n- li：用于ul和ol中\n\n- tr：用于table、tbody、thead和tfoot中\n\n- td：用于tr中\n\n- option：用于select和optgroup中\n\n## 6.定义多个元素 \n\n要定义多个元素，可以使用*符号。比如，ul>li*3可以生成如下代码：\n\n```Css\n<ul>  \n\n  <li></li>  \n\n  <li></li>  \n\n  <li></li>  \n\n</ul>  \n\n```\n\n\n\n## 7.定义多个带属性的元素\n\n \n\n如果输入 ul>li.item$*3，将会生成如下代码： \n\n```css\n<ul>  \n\n  <li class=\"item1\"></li>  \n\n  <li class=\"item2\"></li>  \n\n  <li class=\"item3\"></li>  \n\n</ul>  \n```\n\n\n\n更多请参考：[http://www.iteye.com/news/27580](http://www.iteye.com/news/27580)\n\n文档：[http://docs.emmet.io/](http://docs.emmet.io/)（其中包含了一个Demo，你可以试验文中所提到的这些缩写） \n\nVia [smashingmagazine](http://coding.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/)\n\n更多技术干货—[Jimmy的技术乐园](http://jimmy9876.top)","source":"_posts/Emmet-WEB前端代码快速编写神器.md","raw":"---\ntitle: Emmet:WEB前端代码快速编写神器\ncopyright: true\ndate: 2017-06-07 13:30:09\ntags: Sublime插件\n---\n\nEmmet的前身是大名鼎鼎的Zen coding，如果你从事Web[前端开发](http://lib.csdn.net/base/javascript)的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度，当然Sublime Text也支持改插件，**默认在Sublime Text3种自带了这个插件**。\n\n<!--more-->\n\n下载Sublime Text3：[http://download.csdn.net/detail/u011127019/9596257](http://download.csdn.net/detail/u011127019/9596257)\n\n#  一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\n\n## 1.初始化，比如输入“!”或“html:5”，然后按Tab键\n\n![img](http://img.blog.csdn.net/20160820203739582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n输入标签，然后Tab键\n\n`div`\n\n```Css\n<div></div>  \n```\n\n## 2.轻松添加类、id、文本和属性\n\n比如输入：`div#person.top`\n\n自动生成：\n\n```Css\n<div id=\"person\" class=\"top\"></div>  \n```\n\n比如输入：`h1{标题}`\n\n自动生成：\n\n`<h1>标题</h1>  `\n\n比如输入：`a[href=#]`\n\n`<a href=\"#\"></a>  `\n\n## 3.嵌套\n\n现在你只需要1行代码就可以实现标签的嵌套。 \n\n- \\>：子元素符号，表示嵌套的元素\n- +：同级标签符号\n- ^：可以使该符号前的标签提升一行\n\n效果如下图所示： \n\n![img](http://img.blog.csdn.net/20160820205826673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n## 4.分组\n\n你可以通过嵌套和括号来快速生成一些代码块，比如输入`(.foo>h1)+(.bar>h2)`，会自动生成如下代码： \n\n```Css\n<div class=\"foo\">  \n\n  <h1></h1>  \n\n</div>  \n\n<div class=\"bar\">  \n\n  <h2></h2>  \n\n</div>  \n\n```\n\n\n\n## 5.隐式标签\n\n声明一个带类的标签，只需输入div.item，就会生成`<div class=\"item\"></div>`。 \n在过去版本中，可以省略掉div，即输入.item即可生成`<div class=\"item\"></div>`。现在如果只输入.item，则Emmet会根据父标签进行判定。比如在`<ul>`中输入.item，就会生成`<li class=\"item\"></li>`。 \n下面是所有的隐式标签名称： \n\n- li：用于ul和ol中\n\n- tr：用于table、tbody、thead和tfoot中\n\n- td：用于tr中\n\n- option：用于select和optgroup中\n\n## 6.定义多个元素 \n\n要定义多个元素，可以使用*符号。比如，ul>li*3可以生成如下代码：\n\n```Css\n<ul>  \n\n  <li></li>  \n\n  <li></li>  \n\n  <li></li>  \n\n</ul>  \n\n```\n\n\n\n## 7.定义多个带属性的元素\n\n \n\n如果输入 ul>li.item$*3，将会生成如下代码： \n\n```css\n<ul>  \n\n  <li class=\"item1\"></li>  \n\n  <li class=\"item2\"></li>  \n\n  <li class=\"item3\"></li>  \n\n</ul>  \n```\n\n\n\n更多请参考：[http://www.iteye.com/news/27580](http://www.iteye.com/news/27580)\n\n文档：[http://docs.emmet.io/](http://docs.emmet.io/)（其中包含了一个Demo，你可以试验文中所提到的这些缩写） \n\nVia [smashingmagazine](http://coding.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/)\n\n更多技术干货—[Jimmy的技术乐园](http://jimmy9876.top)","slug":"Emmet-WEB前端代码快速编写神器","published":1,"updated":"2017-10-16T07:16:33.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk2820005q0fatmueor3m","content":"<p>Emmet的前身是大名鼎鼎的Zen coding，如果你从事Web<a href=\"http://lib.csdn.net/base/javascript\" target=\"_blank\" rel=\"external\">前端开发</a>的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度，当然Sublime Text也支持改插件，<strong>默认在Sublime Text3种自带了这个插件</strong>。</p>\n<a id=\"more\"></a>\n<p>下载Sublime Text3：<a href=\"http://download.csdn.net/detail/u011127019/9596257\" target=\"_blank\" rel=\"external\">http://download.csdn.net/detail/u011127019/9596257</a></p>\n<h1 id=\"一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\"><a href=\"#一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\" class=\"headerlink\" title=\"一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\"></a>一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）</h1><h2 id=\"1-初始化，比如输入“-”或“html-5”，然后按Tab键\"><a href=\"#1-初始化，比如输入“-”或“html-5”，然后按Tab键\" class=\"headerlink\" title=\"1.初始化，比如输入“!”或“html:5”，然后按Tab键\"></a>1.初始化，比如输入“!”或“html:5”，然后按Tab键</h2><p><img src=\"http://img.blog.csdn.net/20160820203739582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n<p>输入标签，然后Tab键</p>\n<p><code>div</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"2-轻松添加类、id、文本和属性\"><a href=\"#2-轻松添加类、id、文本和属性\" class=\"headerlink\" title=\"2.轻松添加类、id、文本和属性\"></a>2.轻松添加类、id、文本和属性</h2><p>比如输入：<code>div#person.top</code></p>\n<p>自动生成：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=\"person\" class=\"top\"&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>比如输入：<code>h1{标题}</code></p>\n<p>自动生成：</p>\n<p><code>&lt;h1&gt;标题&lt;/h1&gt;</code></p>\n<p>比如输入：<code>a[href=#]</code></p>\n<p><code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code></p>\n<h2 id=\"3-嵌套\"><a href=\"#3-嵌套\" class=\"headerlink\" title=\"3.嵌套\"></a>3.嵌套</h2><p>现在你只需要1行代码就可以实现标签的嵌套。 </p>\n<ul>\n<li>>：子元素符号，表示嵌套的元素</li>\n<li>+：同级标签符号</li>\n<li>^：可以使该符号前的标签提升一行</li>\n</ul>\n<p>效果如下图所示： </p>\n<p><img src=\"http://img.blog.csdn.net/20160820205826673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n<h2 id=\"4-分组\"><a href=\"#4-分组\" class=\"headerlink\" title=\"4.分组\"></a>4.分组</h2><p>你可以通过嵌套和括号来快速生成一些代码块，比如输入<code>(.foo&gt;h1)+(.bar&gt;h2)</code>，会自动生成如下代码： </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"foo\"&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;h1&gt;&lt;/h1&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/div&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;div class=\"bar\"&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;h2&gt;&lt;/h2&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"5-隐式标签\"><a href=\"#5-隐式标签\" class=\"headerlink\" title=\"5.隐式标签\"></a>5.隐式标签</h2><p>声明一个带类的标签，只需输入div.item，就会生成<code>&lt;div class=&quot;item&quot;&gt;&lt;/div&gt;</code>。<br>在过去版本中，可以省略掉div，即输入.item即可生成<code>&lt;div class=&quot;item&quot;&gt;&lt;/div&gt;</code>。现在如果只输入.item，则Emmet会根据父标签进行判定。比如在<code>&lt;ul&gt;</code>中输入.item，就会生成<code>&lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</code>。<br>下面是所有的隐式标签名称： </p>\n<ul>\n<li><p>li：用于ul和ol中</p>\n</li>\n<li><p>tr：用于table、tbody、thead和tfoot中</p>\n</li>\n<li><p>td：用于tr中</p>\n</li>\n<li><p>option：用于select和optgroup中</p>\n</li>\n</ul>\n<h2 id=\"6-定义多个元素\"><a href=\"#6-定义多个元素\" class=\"headerlink\" title=\"6.定义多个元素\"></a>6.定义多个元素</h2><p>要定义多个元素，可以使用<em>符号。比如，ul&gt;li</em>3可以生成如下代码：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">ul</span>&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"7-定义多个带属性的元素\"><a href=\"#7-定义多个带属性的元素\" class=\"headerlink\" title=\"7.定义多个带属性的元素\"></a>7.定义多个带属性的元素</h2><p>如果输入 ul&gt;li.item$*3，将会生成如下代码： </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">ul</span>&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item1\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item2\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item3\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<p>更多请参考：<a href=\"http://www.iteye.com/news/27580\" target=\"_blank\" rel=\"external\">http://www.iteye.com/news/27580</a></p>\n<p>文档：<a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"external\">http://docs.emmet.io/</a>（其中包含了一个Demo，你可以试验文中所提到的这些缩写） </p>\n<p>Via <a href=\"http://coding.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/\" target=\"_blank\" rel=\"external\">smashingmagazine</a></p>\n<p>更多技术干货—<a href=\"http://jimmy9876.top\">Jimmy的技术乐园</a></p>\n","site":{"data":{}},"excerpt":"<p>Emmet的前身是大名鼎鼎的Zen coding，如果你从事Web<a href=\"http://lib.csdn.net/base/javascript\" target=\"_blank\" rel=\"external\">前端开发</a>的话，对该插件一定不会陌生。它使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度，当然Sublime Text也支持改插件，<strong>默认在Sublime Text3种自带了这个插件</strong>。</p>","more":"<p>下载Sublime Text3：<a href=\"http://download.csdn.net/detail/u011127019/9596257\" target=\"_blank\" rel=\"external\">http://download.csdn.net/detail/u011127019/9596257</a></p>\n<h1 id=\"一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\"><a href=\"#一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\" class=\"headerlink\" title=\"一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）\"></a>一、快速格式化Html代码，输入内容然后按Tab键（注意在输入内容的结尾处）</h1><h2 id=\"1-初始化，比如输入“-”或“html-5”，然后按Tab键\"><a href=\"#1-初始化，比如输入“-”或“html-5”，然后按Tab键\" class=\"headerlink\" title=\"1.初始化，比如输入“!”或“html:5”，然后按Tab键\"></a>1.初始化，比如输入“!”或“html:5”，然后按Tab键</h2><p><img src=\"http://img.blog.csdn.net/20160820203739582?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n<p>输入标签，然后Tab键</p>\n<p><code>div</code></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"2-轻松添加类、id、文本和属性\"><a href=\"#2-轻松添加类、id、文本和属性\" class=\"headerlink\" title=\"2.轻松添加类、id、文本和属性\"></a>2.轻松添加类、id、文本和属性</h2><p>比如输入：<code>div#person.top</code></p>\n<p>自动生成：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=\"person\" class=\"top\"&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>比如输入：<code>h1{标题}</code></p>\n<p>自动生成：</p>\n<p><code>&lt;h1&gt;标题&lt;/h1&gt;</code></p>\n<p>比如输入：<code>a[href=#]</code></p>\n<p><code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code></p>\n<h2 id=\"3-嵌套\"><a href=\"#3-嵌套\" class=\"headerlink\" title=\"3.嵌套\"></a>3.嵌套</h2><p>现在你只需要1行代码就可以实现标签的嵌套。 </p>\n<ul>\n<li>>：子元素符号，表示嵌套的元素</li>\n<li>+：同级标签符号</li>\n<li>^：可以使该符号前的标签提升一行</li>\n</ul>\n<p>效果如下图所示： </p>\n<p><img src=\"http://img.blog.csdn.net/20160820205826673?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"img\"></p>\n<h2 id=\"4-分组\"><a href=\"#4-分组\" class=\"headerlink\" title=\"4.分组\"></a>4.分组</h2><p>你可以通过嵌套和括号来快速生成一些代码块，比如输入<code>(.foo&gt;h1)+(.bar&gt;h2)</code>，会自动生成如下代码： </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=\"foo\"&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;h1&gt;&lt;/h1&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/div&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;div class=\"bar\"&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;h2&gt;&lt;/h2&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"5-隐式标签\"><a href=\"#5-隐式标签\" class=\"headerlink\" title=\"5.隐式标签\"></a>5.隐式标签</h2><p>声明一个带类的标签，只需输入div.item，就会生成<code>&lt;div class=&quot;item&quot;&gt;&lt;/div&gt;</code>。<br>在过去版本中，可以省略掉div，即输入.item即可生成<code>&lt;div class=&quot;item&quot;&gt;&lt;/div&gt;</code>。现在如果只输入.item，则Emmet会根据父标签进行判定。比如在<code>&lt;ul&gt;</code>中输入.item，就会生成<code>&lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</code>。<br>下面是所有的隐式标签名称： </p>\n<ul>\n<li><p>li：用于ul和ol中</p>\n</li>\n<li><p>tr：用于table、tbody、thead和tfoot中</p>\n</li>\n<li><p>td：用于tr中</p>\n</li>\n<li><p>option：用于select和optgroup中</p>\n</li>\n</ul>\n<h2 id=\"6-定义多个元素\"><a href=\"#6-定义多个元素\" class=\"headerlink\" title=\"6.定义多个元素\"></a>6.定义多个元素</h2><p>要定义多个元素，可以使用<em>符号。比如，ul&gt;li</em>3可以生成如下代码：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">ul</span>&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"7-定义多个带属性的元素\"><a href=\"#7-定义多个带属性的元素\" class=\"headerlink\" title=\"7.定义多个带属性的元素\"></a>7.定义多个带属性的元素</h2><p>如果输入 ul&gt;li.item$*3，将会生成如下代码： </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">ul</span>&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item1\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item2\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">  &lt;li class=\"item3\"&gt;&lt;/li&gt;  </div><div class=\"line\"></div><div class=\"line\">&lt;/ul&gt;</div></pre></td></tr></table></figure>\n<p>更多请参考：<a href=\"http://www.iteye.com/news/27580\" target=\"_blank\" rel=\"external\">http://www.iteye.com/news/27580</a></p>\n<p>文档：<a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"external\">http://docs.emmet.io/</a>（其中包含了一个Demo，你可以试验文中所提到的这些缩写） </p>\n<p>Via <a href=\"http://coding.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/\" target=\"_blank\" rel=\"external\">smashingmagazine</a></p>\n<p>更多技术干货—<a href=\"http://jimmy9876.top\">Jimmy的技术乐园</a></p>"},{"title":"Hexo+Next主题个性化配置-1","copyright":true,"date":"2017-05-30T02:53:55.000Z","_content":"\n> 折腾了next这么久，就写一篇博客来记录一下，以作备忘，同时也给后来人一些借鉴\n\n\n\n<!--more-->\n\n\n# NexT主题安装使用\n\n## 本地环境\n\n自行安装 `git` 和 `Node.js` 不会的可百度，安装方法一堆。\n\n## 安装Hexo\n\n`Git` 和 `Node.js` 都安装好后,首先创建一个用于存放博客文件的文件夹，如 `blog`，然后进入 `blog` 文件夹，下面开始安装并使用 `Hexo`。\n右键选择 `Git Bash Here`，弹出 `Git Bash` 窗口；执行命令：\n\n```\n$ npm install -g hexo-cli\n$ hexo init\n\n```\n\n安装完成后，指定文件夹的目录如下：\n\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n\n```\n\n其中 `_config.yml` 文件用于存放网站的配置信息，你可以在此配置大部分的参数； `scaffolds` 是存放模板的文件夹，当新建文章时，Hexo 会根据 `scaffold` 来建立文件； `source` 是资源文件夹，用于存放用户资源， `themes`是主题文件夹，存放博客主题， `Hexo` 会根据主题来生成静态页面。\n\n在 `Git Bash` 终端执行命令：\n\n```\n$ hexo g\n$ hexo s\n\n```\n\nHexo将 `source` 文件夹中的Markdown 和 HTML 文件会被解析并放到 `public` 文件夹中， `public` 文件夹用于存放静态博客文件，相当于网站根目录。\n至此博客雏形基本完成，在浏览器中访问 `http://localhost:4000/` ，就可以访问本地博客了。\n\n## 使用NexT主题\n\n在 `Git Bash` 终端执行以下命令：\n\n```\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n```\n\n打开站点配置文件 `_config.yml`，找到 `theme` 字段，并将其值更改为 `next` 。\n\n```\ntheme: next\n\n```\n\nNexT主题是我用过的唯一的一款Hexo主题，界面简约，功能齐全且多样，响应式设计，电脑，手机访问效果很好。\n\n在 `Git Bash` 终端执行命令 `hexo s` ，在浏览器中访问 `http://localhost:4000/` ，可以看到默认的NexT-Muse主题。\n\n我喜欢双栏的故使用 `NexT.Pisces` 主题，修改主题配置文件  `_config.yml`的 `Schemes` 字段的值为：\n\n```\nscheme: Pisces\n\n```\n\n# Next主题宽度调节\n\n现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度。\n打开 `\\themes\\next\\source\\css\\_common\\components\\post\\post-expand.styl` 文件，找到\n\n```\n@media (max-width: 767px)\n\n```\n\n改为\n\n```\n@media (max-width: 1080px)\n\n```\n\n打开 `\\themes\\next\\source\\css\\ _variables\\base.styl` 文件，找到\n\n```\n$main-desktop                   = 960px\n$main-desktop-large             = 1200px\n$content-desktop                = 700px\n\n```\n\n修改 `$main-desktop` 和 `$content-desktop` 的数值：\n\n```\n$main-desktop                   = 1080px\n$main-desktop-large             = 1200px\n$content-desktop                = 810px\n\n```\n\n`Next.Mist` 主题的文章宽度至此改完了。如果你用的是 `Next.Pisces`，还需要继续修改。\n打开 `\\themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl` 文件，将第 `4` 行的 `width改为1080px` ，修改后如下：\n\n```\n.header {\n  position: relative;\n  margin: 0 auto;\n  width: 1080px;\n\n```\n\n记录一下我常用的细节改动，参考了许多博友的设置，并不是我的原创。参考网站，会在文章最底部列出，以示谢意。\n\n# 修改文章内链接文本样式\n\n将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。\n修改文件 `themes\\next\\source\\css\\_common\\components\\post\\post.styl` ，添加如下css样式，：\n\n```\n// 文章内链接文本样式\n.post-body p a{\n  color: #0593d3;\n  border-bottom: none;\n  border-bottom: 1px solid #0593d3;\n  &:hover {\n    color: #fc6423;\n    border-bottom: none;\n    border-bottom: 1px solid #fc6423;\n  }\n}\n\n```\n\n选择 `.post-body` 是为了不影响标题，选择 `p` 是为了不影响首页“阅读全文”的显示样式。\n\n# 文章底部的那个带#号的标签\n\n文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?\n修改模板 `layout/_macro/post.swig`，搜索 `rel=\"tag\">#`，将 # 换成 `<i class=\"fa fa-tag\"></i>`\n\n# 首页展示文章动画效果和图片放大镜效果关闭哪改？\n\n文章动画效果关闭：主题配置里 `Motion:` 改为 `false`\n\n关闭图片放大镜效果: 主题配置里 `fancybox:` 改为 `false`\n\n# hexo背景动态效果和心心\n\n博客背景动态效果图和点击小红心效果的相关设置。\n把 `js` 文件 `love.js` 和 `particle.js` 放在 `\\themes\\next\\source\\js\\src` 文件目录下\n更新 `\\themes\\next\\layout\\_layout.swig` 文件，在末尾（在前面引用会出现找不到的bug）添加以下 `js` 引入代码：\n\n```\n<!-- 背景动画 -->\n<script type=\"text/javascript\" src=\"/js/src/particle.js\"></script>\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/love.js\"></script>\n\n```\n\n想设置动画线条颜色可改为：\n\n```\n<script type=\"text/javascript\" color=\"255,0,0\" opacity=\"0.3\" count=\"99\" src=\"particle.js\"></script>\n\n```\n\n就能显示红色。或者用：\n\n```\n<script type=\"text/javascript\" src=\"/js/src/particles.js\" count=\"50\" zindex=\"-2\" opacity=\"1\" color=\"0,104,183\"></script>\n\n```\n\n两个JS下载为：\n\n```\nhttp://7u2ss1.com1.z0.glb.clouddn.com/love.js\nhttp://7u2ss1.com1.z0.glb.clouddn.com/particle.js\n\n```\n\n# hexo NexT主题首页title的优化\n\n更改 `index.swig` 文件，文件路径是 `your-hexo-site\\themes\\next\\layout` ，将下面代码\n\n```\n{% block title %} {{ config.title }} {% endblock %}\n\n```\n\n改成\n\n```\n{% block title %} {{ config.title }} - {{ theme.description }} {% endblock %}\n\n```\n\n这时候你的首页标题会更符合网站名称 - 网站描述这习惯。\n进阶，做了 `seo` 优化，把关键词也显示在 `Title` 标题里，可改成\n\n```\n{% block title %} {{ theme.keywords }} - {{ config.title }} - {{ theme.description }} {% endblock %}\n\n```\n\n**注意：**别堆砌关键字，整个标题一般不超过 `80` 个字符，可以通过chinaz的seo综合查询检查。\n\n# 每篇文章末尾统一添加“本文结束”标记\n\n## 新建 `passage-end-tag.swig` 文件\n\n在路径 `\\themes\\next\\layout\\_macro` 中添加 `passage-end-tag.swig` 文件，其内容为：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">------本文结束<i class=\"fa fa-paw\"></i>感谢阅读------</div>\n    {% endif %}\n</div>\n\n```\n\n## 修改 post.swig 文件\n\n在 `\\themes\\next\\layout\\_macro\\post.swig` 中， `post-body` 之后， `post-footer` 之前添加如下代码（post-footer之前两个DIV）：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n\n```\n\n## 在主题配置文件中添加字段\n\n在**主题配置文件** `_config.yml` 中添加以下字段开启此功能：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n\n```\n\n完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。\n\n# 增加HIGH一下功能\n\n在 `themes\\next\\layout\\_macro` 目录下增加 `high.swig` 文件，我已改为歌曲循环和多次点击不重复！\n地址为:\n\n```\nhttp://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig\n\n```\n\n打开这个地址，复制全部内容，在你本地新建`high.swig` 文件。\n打开\\themes\\next\\layout\\_macro\\sidebar.swig文件，打开，在\n\n```\n<a href=\"{{ url_for(theme.rss) }}\" target=\"_blank\" rel=\"alternate\">\n    <i class=\"fa fa-rss\"></i>\n    RSS\n</a>\n\n```\n\n后边加入：\n\n```\n{% include 'high.swig' %}\n\n```\n\n如：\n\n```\n{% if theme.rss %}\n          <div class=\"feed-link motion-element\">\n            <a href=\"{{ url_for(theme.rss) }}\" rel=\"alternate\">\n              <i class=\"fa fa-rss\"></i>\n              RSS\n            </a>\n              {% include 'high.swig' %}\n          </div>\n        {% endif %}\n\n```\n\n接着在主题配置文件 `_config.yml` ，加入：\n\n```\nhighqilai: \n  enabled: true\n\n```\n\n然后打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n.feed-link a{display: inline-block;}\n\n```\n\n保存，`hexo clean` ， `hexo g` , `hexo s` 查看效果！\n主页 `High` 起来，摇动。改动方法！\n`themes\\next\\layout\\_layout.swig`\n前添加：\n\n```\n<link href=\"http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n```\n\n地址改为你自己的CSS。失效了不怪！\n*如果只是想当播放器听歌的话改 high.swig 文件内容为：*\n\n```\n<a title=\"收藏到书签，偶尔High一下^_^\" rel=\"alternate\" class=\"mw-harlem_shake_slow wobble shake\" href='javascript:(\n    /*\n     * Copyright (C) 2015 Rocko (rocko.xyz) <rocko.zxp@gmail.com>\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    function go() {\n    \n      var songs = [\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3\", \n          \"http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3\",\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3\",\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3\",        \n          \"......\"\n      ];\n \n      function S() {\n          var e = document.getElementById(\"audio_element_id\");\n          if(e != null){\n              var index = parseInt(e.getAttribute(\"curSongIndex\"));\n              if(index > songs.length - 2) {\n                  index = 0;\n              } else {\n                  index++;\n              }\n              e.setAttribute(\"curSongIndex\", index);\n          }\n          e.src = i;\n          e.play()\n      }\n      function initAudioEle() {\n          var e = document.getElementById(\"audio_element_id\");\n          if(e === null){\n            e = document.createElement(\"audio\");\n            e.setAttribute(\"curSongIndex\", 0);\n            e.id = \"audio_element_id\";\n            e.loop = false;\n            e.bgcolor = 0;\n            e.innerHTML = \" <p>If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.</p> <p>\";\n            document.body.appendChild(e);\n            e.addEventListener(\"ended\", function() {\n              go();\n            }, true);\n          }        \n      }\n    \n      initAudioEle();\n      var curSongIndex = parseInt(document.getElementById(\"audio_element_id\").getAttribute(\"curSongIndex\"));\n      var i = songs[curSongIndex];\n      S();\n    })()'>\n    <i class=\"fa fa-music\"></i> 听音乐</a>\n\n```\n\n# 作者头像变成圆形\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n.site-author-image {\n  border-radius: 100%;\n  padding: 2px;\n  border: 2px dashed #fff;\n  animation: cycle 2s 0.5s forwards;\n  transition: border-radius 2s;\n}\n\n```\n\n博主名字号大小,也在 `custom.styl` 文件:\n\n```\n.site-author-name {\n  font-size: 16px;\n}\n\n```\n\n# 动态title改动\n\n先看代码如下：\n\n```\n<!--崩溃欺骗-->\nvar OriginTitile = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/TEP.ico\");\n         document.title = '╭(°A°`)╮ 页面崩溃';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/favicon.ico\");\n         document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitile;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitile;\n         }, 2000);\n     }\n });\n\n```\n\n做为JS引用时，可以直接将上面代码保存为XXX.js，然后引用。在 `\\themes\\next\\layout\\_layout.swig` 最下边引用加入：\n\n```\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/duoshuoshuo.js\"></script>\n\n```\n\n# hexo站点添加sitemap网站地图\n\n## 安装hexo的sitemap网站地图生成插件\n\n进入 `hexo` 根目录，打开 `git`\n\n```\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n\n```\n\n## 在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！\n\n```\n# hexo sitemap网站地图\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n\n```\n\n### 配置成功后\n\nhexo编译时会在hexo站点根目录生成sitemap.xml和baidusitemap.xml\n其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。\n其次，在robots.txt中添加下面的一段代码：\n\n```\nSitemap: http://你的域名/sitemap.xml\nSitemap: http://你的域名/baidusitemap.xml\n\n```\n\n请自行改成自己的网站。\n\n\n# 给 Github 添加 README\n\n默认情况下， `Github` 中每一个项目，我们希望有一份 `README.md` 的文件来作为项目的说明，但是我们在项目根目录下的 `blog\\source` 目录下创建一份 `README.md` 文件，写好说明介绍，部署的时候，这个 `README.md` 会被 `hexo` 解析掉，而不会被解析到 `Github` 中去的。\n正确的解决方法其实很简单：\n把 `README.md` 文件的后缀名改成 `MDOWN` 然后扔到 `blog/source` 文件夹下即可，这样 `hexo` 不会解析， `Github` 也会将其作为MD文件解析。\n\n# 代码块自定义样式``内的\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n// 代码块自定义样式``内的\ncode {\n    color: #fc6423;\n    background: #fbf7f8;\n    margin: 2px;\n}\n// 大代码块的自定义样式\n.highlight, pre {\n    margin: 5px 0;\n    padding: 5px;\n    border-radius: 3px;\n}\n.highlight, code, pre {\n    border: 1px solid #d6d6d6;\n}\n\n```\n\n# 博客部署的message\n\n`\\node_modules\\hexo-deployer-git\\lib\\deployer.js` 文件末尾找到这一句：\n\n```\nSite updated: {{ now('YYYY-MM-DD HH:mm:ss') }}.\n\n```\n\n改得个性化一点：\n\n```\n这个勤奋的家伙又更新了: {{ now(\\'YYYY-MM-DD HH:mm:ss\\') }}.\n\n```\n\n# 博文置顶\n\n## 修改 `hexo-generator-index` 插件\n\n替换文件：`node_modules/hexo-generator-index/lib/generator.js`为：\n\n```\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.top && b.top) { // 两篇文章top都有定义\n            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排\n            else return b.top - a.top; // 否则按照top值降序排\n        }\n        else if(a.top && !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.top && b.top) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n\n```\n\n## 设置文章置顶\n\n在文章 `Front-matter` 中添加 `top` 值，数值越大文章越靠前，如：\n\n```\n---\ntitle: Hexo\ndate: \ntags: \ncategories: \ntop: 10\n---\n\n```\n\n# NexT主题自定义无序列表样式\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入：\n\n```\nul {\nlist-style-type: circle;  // 空心圆，实心圆为 disc\n}\n```\n[原文链接](http://jimmy9876.top)\n\n部分内容来自以下博客：\n[务虚笔记](http://www.wuxubj.cn/)\n[小桥流水人家](http://ehlxr.me/)\n[Jing’s Blog](http://www.iamlj.com/)\n[Doublemine](https://notes.wanghao.work/)\n[岁月如歌](http://lovenight.github.io/)\n[胡闹的日子](http://hunao.info/)\n[Never_yu’s Blog ](https://neveryu.github.io/)\n","source":"_posts/Hexo-Next主题个性化配置-1.md","raw":"---\ntitle: Hexo+Next主题个性化配置-1\ncopyright: true\ndate: 2017-05-30 10:53:55\ntags: hexo\n---\n\n> 折腾了next这么久，就写一篇博客来记录一下，以作备忘，同时也给后来人一些借鉴\n\n\n\n<!--more-->\n\n\n# NexT主题安装使用\n\n## 本地环境\n\n自行安装 `git` 和 `Node.js` 不会的可百度，安装方法一堆。\n\n## 安装Hexo\n\n`Git` 和 `Node.js` 都安装好后,首先创建一个用于存放博客文件的文件夹，如 `blog`，然后进入 `blog` 文件夹，下面开始安装并使用 `Hexo`。\n右键选择 `Git Bash Here`，弹出 `Git Bash` 窗口；执行命令：\n\n```\n$ npm install -g hexo-cli\n$ hexo init\n\n```\n\n安装完成后，指定文件夹的目录如下：\n\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n\n```\n\n其中 `_config.yml` 文件用于存放网站的配置信息，你可以在此配置大部分的参数； `scaffolds` 是存放模板的文件夹，当新建文章时，Hexo 会根据 `scaffold` 来建立文件； `source` 是资源文件夹，用于存放用户资源， `themes`是主题文件夹，存放博客主题， `Hexo` 会根据主题来生成静态页面。\n\n在 `Git Bash` 终端执行命令：\n\n```\n$ hexo g\n$ hexo s\n\n```\n\nHexo将 `source` 文件夹中的Markdown 和 HTML 文件会被解析并放到 `public` 文件夹中， `public` 文件夹用于存放静态博客文件，相当于网站根目录。\n至此博客雏形基本完成，在浏览器中访问 `http://localhost:4000/` ，就可以访问本地博客了。\n\n## 使用NexT主题\n\n在 `Git Bash` 终端执行以下命令：\n\n```\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n\n```\n\n打开站点配置文件 `_config.yml`，找到 `theme` 字段，并将其值更改为 `next` 。\n\n```\ntheme: next\n\n```\n\nNexT主题是我用过的唯一的一款Hexo主题，界面简约，功能齐全且多样，响应式设计，电脑，手机访问效果很好。\n\n在 `Git Bash` 终端执行命令 `hexo s` ，在浏览器中访问 `http://localhost:4000/` ，可以看到默认的NexT-Muse主题。\n\n我喜欢双栏的故使用 `NexT.Pisces` 主题，修改主题配置文件  `_config.yml`的 `Schemes` 字段的值为：\n\n```\nscheme: Pisces\n\n```\n\n# Next主题宽度调节\n\n现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度。\n打开 `\\themes\\next\\source\\css\\_common\\components\\post\\post-expand.styl` 文件，找到\n\n```\n@media (max-width: 767px)\n\n```\n\n改为\n\n```\n@media (max-width: 1080px)\n\n```\n\n打开 `\\themes\\next\\source\\css\\ _variables\\base.styl` 文件，找到\n\n```\n$main-desktop                   = 960px\n$main-desktop-large             = 1200px\n$content-desktop                = 700px\n\n```\n\n修改 `$main-desktop` 和 `$content-desktop` 的数值：\n\n```\n$main-desktop                   = 1080px\n$main-desktop-large             = 1200px\n$content-desktop                = 810px\n\n```\n\n`Next.Mist` 主题的文章宽度至此改完了。如果你用的是 `Next.Pisces`，还需要继续修改。\n打开 `\\themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl` 文件，将第 `4` 行的 `width改为1080px` ，修改后如下：\n\n```\n.header {\n  position: relative;\n  margin: 0 auto;\n  width: 1080px;\n\n```\n\n记录一下我常用的细节改动，参考了许多博友的设置，并不是我的原创。参考网站，会在文章最底部列出，以示谢意。\n\n# 修改文章内链接文本样式\n\n将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。\n修改文件 `themes\\next\\source\\css\\_common\\components\\post\\post.styl` ，添加如下css样式，：\n\n```\n// 文章内链接文本样式\n.post-body p a{\n  color: #0593d3;\n  border-bottom: none;\n  border-bottom: 1px solid #0593d3;\n  &:hover {\n    color: #fc6423;\n    border-bottom: none;\n    border-bottom: 1px solid #fc6423;\n  }\n}\n\n```\n\n选择 `.post-body` 是为了不影响标题，选择 `p` 是为了不影响首页“阅读全文”的显示样式。\n\n# 文章底部的那个带#号的标签\n\n文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?\n修改模板 `layout/_macro/post.swig`，搜索 `rel=\"tag\">#`，将 # 换成 `<i class=\"fa fa-tag\"></i>`\n\n# 首页展示文章动画效果和图片放大镜效果关闭哪改？\n\n文章动画效果关闭：主题配置里 `Motion:` 改为 `false`\n\n关闭图片放大镜效果: 主题配置里 `fancybox:` 改为 `false`\n\n# hexo背景动态效果和心心\n\n博客背景动态效果图和点击小红心效果的相关设置。\n把 `js` 文件 `love.js` 和 `particle.js` 放在 `\\themes\\next\\source\\js\\src` 文件目录下\n更新 `\\themes\\next\\layout\\_layout.swig` 文件，在末尾（在前面引用会出现找不到的bug）添加以下 `js` 引入代码：\n\n```\n<!-- 背景动画 -->\n<script type=\"text/javascript\" src=\"/js/src/particle.js\"></script>\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/love.js\"></script>\n\n```\n\n想设置动画线条颜色可改为：\n\n```\n<script type=\"text/javascript\" color=\"255,0,0\" opacity=\"0.3\" count=\"99\" src=\"particle.js\"></script>\n\n```\n\n就能显示红色。或者用：\n\n```\n<script type=\"text/javascript\" src=\"/js/src/particles.js\" count=\"50\" zindex=\"-2\" opacity=\"1\" color=\"0,104,183\"></script>\n\n```\n\n两个JS下载为：\n\n```\nhttp://7u2ss1.com1.z0.glb.clouddn.com/love.js\nhttp://7u2ss1.com1.z0.glb.clouddn.com/particle.js\n\n```\n\n# hexo NexT主题首页title的优化\n\n更改 `index.swig` 文件，文件路径是 `your-hexo-site\\themes\\next\\layout` ，将下面代码\n\n```\n{% block title %} {{ config.title }} {% endblock %}\n\n```\n\n改成\n\n```\n{% block title %} {{ config.title }} - {{ theme.description }} {% endblock %}\n\n```\n\n这时候你的首页标题会更符合网站名称 - 网站描述这习惯。\n进阶，做了 `seo` 优化，把关键词也显示在 `Title` 标题里，可改成\n\n```\n{% block title %} {{ theme.keywords }} - {{ config.title }} - {{ theme.description }} {% endblock %}\n\n```\n\n**注意：**别堆砌关键字，整个标题一般不超过 `80` 个字符，可以通过chinaz的seo综合查询检查。\n\n# 每篇文章末尾统一添加“本文结束”标记\n\n## 新建 `passage-end-tag.swig` 文件\n\n在路径 `\\themes\\next\\layout\\_macro` 中添加 `passage-end-tag.swig` 文件，其内容为：\n\n```\n<div>\n    {% if not is_index %}\n        <div style=\"text-align:center;color: #ccc;font-size:14px;\">------本文结束<i class=\"fa fa-paw\"></i>感谢阅读------</div>\n    {% endif %}\n</div>\n\n```\n\n## 修改 post.swig 文件\n\n在 `\\themes\\next\\layout\\_macro\\post.swig` 中， `post-body` 之后， `post-footer` 之前添加如下代码（post-footer之前两个DIV）：\n\n```\n<div>\n  {% if not is_index %}\n    {% include 'passage-end-tag.swig' %}\n  {% endif %}\n</div>\n\n```\n\n## 在主题配置文件中添加字段\n\n在**主题配置文件** `_config.yml` 中添加以下字段开启此功能：\n\n```\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n\n```\n\n完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。\n\n# 增加HIGH一下功能\n\n在 `themes\\next\\layout\\_macro` 目录下增加 `high.swig` 文件，我已改为歌曲循环和多次点击不重复！\n地址为:\n\n```\nhttp://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig\n\n```\n\n打开这个地址，复制全部内容，在你本地新建`high.swig` 文件。\n打开\\themes\\next\\layout\\_macro\\sidebar.swig文件，打开，在\n\n```\n<a href=\"{{ url_for(theme.rss) }}\" target=\"_blank\" rel=\"alternate\">\n    <i class=\"fa fa-rss\"></i>\n    RSS\n</a>\n\n```\n\n后边加入：\n\n```\n{% include 'high.swig' %}\n\n```\n\n如：\n\n```\n{% if theme.rss %}\n          <div class=\"feed-link motion-element\">\n            <a href=\"{{ url_for(theme.rss) }}\" rel=\"alternate\">\n              <i class=\"fa fa-rss\"></i>\n              RSS\n            </a>\n              {% include 'high.swig' %}\n          </div>\n        {% endif %}\n\n```\n\n接着在主题配置文件 `_config.yml` ，加入：\n\n```\nhighqilai: \n  enabled: true\n\n```\n\n然后打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n.feed-link a{display: inline-block;}\n\n```\n\n保存，`hexo clean` ， `hexo g` , `hexo s` 查看效果！\n主页 `High` 起来，摇动。改动方法！\n`themes\\next\\layout\\_layout.swig`\n前添加：\n\n```\n<link href=\"http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n```\n\n地址改为你自己的CSS。失效了不怪！\n*如果只是想当播放器听歌的话改 high.swig 文件内容为：*\n\n```\n<a title=\"收藏到书签，偶尔High一下^_^\" rel=\"alternate\" class=\"mw-harlem_shake_slow wobble shake\" href='javascript:(\n    /*\n     * Copyright (C) 2015 Rocko (rocko.xyz) <rocko.zxp@gmail.com>\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    function go() {\n    \n      var songs = [\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3\", \n          \"http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3\",\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3\",\n          \"http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3\",        \n          \"......\"\n      ];\n \n      function S() {\n          var e = document.getElementById(\"audio_element_id\");\n          if(e != null){\n              var index = parseInt(e.getAttribute(\"curSongIndex\"));\n              if(index > songs.length - 2) {\n                  index = 0;\n              } else {\n                  index++;\n              }\n              e.setAttribute(\"curSongIndex\", index);\n          }\n          e.src = i;\n          e.play()\n      }\n      function initAudioEle() {\n          var e = document.getElementById(\"audio_element_id\");\n          if(e === null){\n            e = document.createElement(\"audio\");\n            e.setAttribute(\"curSongIndex\", 0);\n            e.id = \"audio_element_id\";\n            e.loop = false;\n            e.bgcolor = 0;\n            e.innerHTML = \" <p>If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.</p> <p>\";\n            document.body.appendChild(e);\n            e.addEventListener(\"ended\", function() {\n              go();\n            }, true);\n          }        \n      }\n    \n      initAudioEle();\n      var curSongIndex = parseInt(document.getElementById(\"audio_element_id\").getAttribute(\"curSongIndex\"));\n      var i = songs[curSongIndex];\n      S();\n    })()'>\n    <i class=\"fa fa-music\"></i> 听音乐</a>\n\n```\n\n# 作者头像变成圆形\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n.site-author-image {\n  border-radius: 100%;\n  padding: 2px;\n  border: 2px dashed #fff;\n  animation: cycle 2s 0.5s forwards;\n  transition: border-radius 2s;\n}\n\n```\n\n博主名字号大小,也在 `custom.styl` 文件:\n\n```\n.site-author-name {\n  font-size: 16px;\n}\n\n```\n\n# 动态title改动\n\n先看代码如下：\n\n```\n<!--崩溃欺骗-->\nvar OriginTitile = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/TEP.ico\");\n         document.title = '╭(°A°`)╮ 页面崩溃';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/favicon.ico\");\n         document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitile;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitile;\n         }, 2000);\n     }\n });\n\n```\n\n做为JS引用时，可以直接将上面代码保存为XXX.js，然后引用。在 `\\themes\\next\\layout\\_layout.swig` 最下边引用加入：\n\n```\n<!--崩溃欺骗-->\n<script type=\"text/javascript\" src=\"/js/src/duoshuoshuo.js\"></script>\n\n```\n\n# hexo站点添加sitemap网站地图\n\n## 安装hexo的sitemap网站地图生成插件\n\n进入 `hexo` 根目录，打开 `git`\n\n```\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n\n```\n\n## 在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！\n\n```\n# hexo sitemap网站地图\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n\n```\n\n### 配置成功后\n\nhexo编译时会在hexo站点根目录生成sitemap.xml和baidusitemap.xml\n其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。\n其次，在robots.txt中添加下面的一段代码：\n\n```\nSitemap: http://你的域名/sitemap.xml\nSitemap: http://你的域名/baidusitemap.xml\n\n```\n\n请自行改成自己的网站。\n\n\n# 给 Github 添加 README\n\n默认情况下， `Github` 中每一个项目，我们希望有一份 `README.md` 的文件来作为项目的说明，但是我们在项目根目录下的 `blog\\source` 目录下创建一份 `README.md` 文件，写好说明介绍，部署的时候，这个 `README.md` 会被 `hexo` 解析掉，而不会被解析到 `Github` 中去的。\n正确的解决方法其实很简单：\n把 `README.md` 文件的后缀名改成 `MDOWN` 然后扔到 `blog/source` 文件夹下即可，这样 `hexo` 不会解析， `Github` 也会将其作为MD文件解析。\n\n# 代码块自定义样式``内的\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入\n\n```\n// 代码块自定义样式``内的\ncode {\n    color: #fc6423;\n    background: #fbf7f8;\n    margin: 2px;\n}\n// 大代码块的自定义样式\n.highlight, pre {\n    margin: 5px 0;\n    padding: 5px;\n    border-radius: 3px;\n}\n.highlight, code, pre {\n    border: 1px solid #d6d6d6;\n}\n\n```\n\n# 博客部署的message\n\n`\\node_modules\\hexo-deployer-git\\lib\\deployer.js` 文件末尾找到这一句：\n\n```\nSite updated: {{ now('YYYY-MM-DD HH:mm:ss') }}.\n\n```\n\n改得个性化一点：\n\n```\n这个勤奋的家伙又更新了: {{ now(\\'YYYY-MM-DD HH:mm:ss\\') }}.\n\n```\n\n# 博文置顶\n\n## 修改 `hexo-generator-index` 插件\n\n替换文件：`node_modules/hexo-generator-index/lib/generator.js`为：\n\n```\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.top && b.top) { // 两篇文章top都有定义\n            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排\n            else return b.top - a.top; // 否则按照top值降序排\n        }\n        else if(a.top && !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.top && b.top) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n\n```\n\n## 设置文章置顶\n\n在文章 `Front-matter` 中添加 `top` 值，数值越大文章越靠前，如：\n\n```\n---\ntitle: Hexo\ndate: \ntags: \ncategories: \ntop: 10\n---\n\n```\n\n# NexT主题自定义无序列表样式\n\n打开自定义CSS： `\\themes\\next\\source\\css\\_custom\\custom.styl` 加入：\n\n```\nul {\nlist-style-type: circle;  // 空心圆，实心圆为 disc\n}\n```\n[原文链接](http://jimmy9876.top)\n\n部分内容来自以下博客：\n[务虚笔记](http://www.wuxubj.cn/)\n[小桥流水人家](http://ehlxr.me/)\n[Jing’s Blog](http://www.iamlj.com/)\n[Doublemine](https://notes.wanghao.work/)\n[岁月如歌](http://lovenight.github.io/)\n[胡闹的日子](http://hunao.info/)\n[Never_yu’s Blog ](https://neveryu.github.io/)\n","slug":"Hexo-Next主题个性化配置-1","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk2830006q0fany1xp4w0","content":"<blockquote>\n<p>折腾了next这么久，就写一篇博客来记录一下，以作备忘，同时也给后来人一些借鉴</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"NexT主题安装使用\"><a href=\"#NexT主题安装使用\" class=\"headerlink\" title=\"NexT主题安装使用\"></a>NexT主题安装使用</h1><h2 id=\"本地环境\"><a href=\"#本地环境\" class=\"headerlink\" title=\"本地环境\"></a>本地环境</h2><p>自行安装 <code>git</code> 和 <code>Node.js</code> 不会的可百度，安装方法一堆。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p><code>Git</code> 和 <code>Node.js</code> 都安装好后,首先创建一个用于存放博客文件的文件夹，如 <code>blog</code>，然后进入 <code>blog</code> 文件夹，下面开始安装并使用 <code>Hexo</code>。<br>右键选择 <code>Git Bash Here</code>，弹出 <code>Git Bash</code> 窗口；执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>安装完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<p>其中 <code>_config.yml</code> 文件用于存放网站的配置信息，你可以在此配置大部分的参数； <code>scaffolds</code> 是存放模板的文件夹，当新建文章时，Hexo 会根据 <code>scaffold</code> 来建立文件； <code>source</code> 是资源文件夹，用于存放用户资源， <code>themes</code>是主题文件夹，存放博客主题， <code>Hexo</code> 会根据主题来生成静态页面。</p>\n<p>在 <code>Git Bash</code> 终端执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>Hexo将 <code>source</code> 文件夹中的Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹中， <code>public</code> 文件夹用于存放静态博客文件，相当于网站根目录。<br>至此博客雏形基本完成，在浏览器中访问 <code>http://localhost:4000/</code> ，就可以访问本地博客了。</p>\n<h2 id=\"使用NexT主题\"><a href=\"#使用NexT主题\" class=\"headerlink\" title=\"使用NexT主题\"></a>使用NexT主题</h2><p>在 <code>Git Bash</code> 终端执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>打开站点配置文件 <code>_config.yml</code>，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code> 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n<p>NexT主题是我用过的唯一的一款Hexo主题，界面简约，功能齐全且多样，响应式设计，电脑，手机访问效果很好。</p>\n<p>在 <code>Git Bash</code> 终端执行命令 <code>hexo s</code> ，在浏览器中访问 <code>http://localhost:4000/</code> ，可以看到默认的NexT-Muse主题。</p>\n<p>我喜欢双栏的故使用 <code>NexT.Pisces</code> 主题，修改主题配置文件  <code>_config.yml</code>的 <code>Schemes</code> 字段的值为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scheme: Pisces</div></pre></td></tr></table></figure>\n<h1 id=\"Next主题宽度调节\"><a href=\"#Next主题宽度调节\" class=\"headerlink\" title=\"Next主题宽度调节\"></a>Next主题宽度调节</h1><p>现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度。<br>打开 <code>\\themes\\next\\source\\css\\_common\\components\\post\\post-expand.styl</code> 文件，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media (max-width: 767px)</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media (max-width: 1080px)</div></pre></td></tr></table></figure>\n<p>打开 <code>\\themes\\next\\source\\css\\ _variables\\base.styl</code> 文件，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$main-desktop                   = 960px</div><div class=\"line\">$main-desktop-large             = 1200px</div><div class=\"line\">$content-desktop                = 700px</div></pre></td></tr></table></figure>\n<p>修改 <code>$main-desktop</code> 和 <code>$content-desktop</code> 的数值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$main-desktop                   = 1080px</div><div class=\"line\">$main-desktop-large             = 1200px</div><div class=\"line\">$content-desktop                = 810px</div></pre></td></tr></table></figure>\n<p><code>Next.Mist</code> 主题的文章宽度至此改完了。如果你用的是 <code>Next.Pisces</code>，还需要继续修改。<br>打开 <code>\\themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl</code> 文件，将第 <code>4</code> 行的 <code>width改为1080px</code> ，修改后如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.header &#123;</div><div class=\"line\">  position: relative;</div><div class=\"line\">  margin: 0 auto;</div><div class=\"line\">  width: 1080px;</div></pre></td></tr></table></figure>\n<p>记录一下我常用的细节改动，参考了许多博友的设置，并不是我的原创。参考网站，会在文章最底部列出，以示谢意。</p>\n<h1 id=\"修改文章内链接文本样式\"><a href=\"#修改文章内链接文本样式\" class=\"headerlink\" title=\"修改文章内链接文本样式\"></a>修改文章内链接文本样式</h1><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>修改文件 <code>themes\\next\\source\\css\\_common\\components\\post\\post.styl</code> ，添加如下css样式，：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 文章内链接文本样式</div><div class=\"line\">.post-body p a&#123;</div><div class=\"line\">  color: #0593d3;</div><div class=\"line\">  border-bottom: none;</div><div class=\"line\">  border-bottom: 1px solid #0593d3;</div><div class=\"line\">  &amp;:hover &#123;</div><div class=\"line\">    color: #fc6423;</div><div class=\"line\">    border-bottom: none;</div><div class=\"line\">    border-bottom: 1px solid #fc6423;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>选择 <code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式。</p>\n<h1 id=\"文章底部的那个带-号的标签\"><a href=\"#文章底部的那个带-号的标签\" class=\"headerlink\" title=\"文章底部的那个带#号的标签\"></a>文章底部的那个带#号的标签</h1><p>文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?<br>修改模板 <code>layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>\n<h1 id=\"首页展示文章动画效果和图片放大镜效果关闭哪改？\"><a href=\"#首页展示文章动画效果和图片放大镜效果关闭哪改？\" class=\"headerlink\" title=\"首页展示文章动画效果和图片放大镜效果关闭哪改？\"></a>首页展示文章动画效果和图片放大镜效果关闭哪改？</h1><p>文章动画效果关闭：主题配置里 <code>Motion:</code> 改为 <code>false</code></p>\n<p>关闭图片放大镜效果: 主题配置里 <code>fancybox:</code> 改为 <code>false</code></p>\n<h1 id=\"hexo背景动态效果和心心\"><a href=\"#hexo背景动态效果和心心\" class=\"headerlink\" title=\"hexo背景动态效果和心心\"></a>hexo背景动态效果和心心</h1><p>博客背景动态效果图和点击小红心效果的相关设置。<br>把 <code>js</code> 文件 <code>love.js</code> 和 <code>particle.js</code> 放在 <code>\\themes\\next\\source\\js\\src</code> 文件目录下<br>更新 <code>\\themes\\next\\layout\\_layout.swig</code> 文件，在末尾（在前面引用会出现找不到的bug）添加以下 <code>js</code> 引入代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 背景动画 --&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;!-- 页面点击小红心 --&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>想设置动画线条颜色可改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; color=&quot;255,0,0&quot; opacity=&quot;0.3&quot; count=&quot;99&quot; src=&quot;particle.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>就能显示红色。或者用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particles.js&quot; count=&quot;50&quot; zindex=&quot;-2&quot; opacity=&quot;1&quot; color=&quot;0,104,183&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>两个JS下载为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</div><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/particle.js</div></pre></td></tr></table></figure>\n<h1 id=\"hexo-NexT主题首页title的优化\"><a href=\"#hexo-NexT主题首页title的优化\" class=\"headerlink\" title=\"hexo NexT主题首页title的优化\"></a>hexo NexT主题首页title的优化</h1><p>更改 <code>index.swig</code> 文件，文件路径是 <code>your-hexo-site\\themes\\next\\layout</code> ，将下面代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p>这时候你的首页标题会更符合网站名称 - 网站描述这习惯。<br>进阶，做了 <code>seo</code> 优化，把关键词也显示在 <code>Title</code> 标题里，可改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p><strong>注意：</strong>别堆砌关键字，整个标题一般不超过 <code>80</code> 个字符，可以通过chinaz的seo综合查询检查。</p>\n<h1 id=\"每篇文章末尾统一添加“本文结束”标记\"><a href=\"#每篇文章末尾统一添加“本文结束”标记\" class=\"headerlink\" title=\"每篇文章末尾统一添加“本文结束”标记\"></a>每篇文章末尾统一添加“本文结束”标记</h1><h2 id=\"新建-passage-end-tag-swig-文件\"><a href=\"#新建-passage-end-tag-swig-文件\" class=\"headerlink\" title=\"新建 passage-end-tag.swig 文件\"></a>新建 <code>passage-end-tag.swig</code> 文件</h2><p>在路径 <code>\\themes\\next\\layout\\_macro</code> 中添加 <code>passage-end-tag.swig</code> 文件，其内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">    &#123;% if not is_index %&#125;</div><div class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢阅读------&lt;/div&gt;</div><div class=\"line\">    &#123;% endif %&#125;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"修改-post-swig-文件\"><a href=\"#修改-post-swig-文件\" class=\"headerlink\" title=\"修改 post.swig 文件\"></a>修改 post.swig 文件</h2><p>在 <code>\\themes\\next\\layout\\_macro\\post.swig</code> 中， <code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码（post-footer之前两个DIV）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">  &#123;% if not is_index %&#125;</div><div class=\"line\">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"在主题配置文件中添加字段\"><a href=\"#在主题配置文件中添加字段\" class=\"headerlink\" title=\"在主题配置文件中添加字段\"></a>在主题配置文件中添加字段</h2><p>在<strong>主题配置文件</strong> <code>_config.yml</code> 中添加以下字段开启此功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 文章末尾添加“本文结束”标记</div><div class=\"line\">passage_end_tag:</div><div class=\"line\">  enabled: true</div></pre></td></tr></table></figure>\n<p>完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。</p>\n<h1 id=\"增加HIGH一下功能\"><a href=\"#增加HIGH一下功能\" class=\"headerlink\" title=\"增加HIGH一下功能\"></a>增加HIGH一下功能</h1><p>在 <code>themes\\next\\layout\\_macro</code> 目录下增加 <code>high.swig</code> 文件，我已改为歌曲循环和多次点击不重复！<br>地址为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig</div></pre></td></tr></table></figure>\n<p>打开这个地址，复制全部内容，在你本地新建<code>high.swig</code> 文件。<br>打开\\themes\\next\\layout_macro\\sidebar.swig文件，打开，在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; target=&quot;_blank&quot; rel=&quot;alternate&quot;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;</div><div class=\"line\">    RSS</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>后边加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% include &apos;high.swig&apos; %&#125;</div></pre></td></tr></table></figure>\n<p>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.rss %&#125;</div><div class=\"line\">          &lt;div class=&quot;feed-link motion-element&quot;&gt;</div><div class=\"line\">            &lt;a href=&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; rel=&quot;alternate&quot;&gt;</div><div class=\"line\">              &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;</div><div class=\"line\">              RSS</div><div class=\"line\">            &lt;/a&gt;</div><div class=\"line\">              &#123;% include &apos;high.swig&apos; %&#125;</div><div class=\"line\">          &lt;/div&gt;</div><div class=\"line\">        &#123;% endif %&#125;</div></pre></td></tr></table></figure>\n<p>接着在主题配置文件 <code>_config.yml</code> ，加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">highqilai: </div><div class=\"line\">  enabled: true</div></pre></td></tr></table></figure>\n<p>然后打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.feed-link a&#123;display: inline-block;&#125;</div></pre></td></tr></table></figure>\n<p>保存，<code>hexo clean</code> ， <code>hexo g</code> , <code>hexo s</code> 查看效果！<br>主页 <code>High</code> 起来，摇动。改动方法！<br><code>themes\\next\\layout\\_layout.swig</code><br>前添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link href=&quot;http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>地址改为你自己的CSS。失效了不怪！<br><em>如果只是想当播放器听歌的话改 high.swig 文件内容为：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a title=&quot;收藏到书签，偶尔High一下^_^&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&apos;javascript:(</div><div class=\"line\">    /*</div><div class=\"line\">     * Copyright (C) 2015 Rocko (rocko.xyz) &lt;rocko.zxp@gmail.com&gt;</div><div class=\"line\">     *</div><div class=\"line\">     * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</div><div class=\"line\">     * you may not use this file except in compliance with the License.</div><div class=\"line\">     * You may obtain a copy of the License at</div><div class=\"line\">     *</div><div class=\"line\">     *      http://www.apache.org/licenses/LICENSE-2.0</div><div class=\"line\">     *</div><div class=\"line\">     * Unless required by applicable law or agreed to in writing, software</div><div class=\"line\">     * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</div><div class=\"line\">     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class=\"line\">     * See the License for the specific language governing permissions and</div><div class=\"line\">     * limitations under the License.</div><div class=\"line\">     */</div><div class=\"line\">    function go() &#123;</div><div class=\"line\">    </div><div class=\"line\">      var songs = [</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3&quot;, </div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3&quot;,</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3&quot;,</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3&quot;,        </div><div class=\"line\">          &quot;......&quot;</div><div class=\"line\">      ];</div><div class=\"line\"> </div><div class=\"line\">      function S() &#123;</div><div class=\"line\">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class=\"line\">          if(e != null)&#123;</div><div class=\"line\">              var index = parseInt(e.getAttribute(&quot;curSongIndex&quot;));</div><div class=\"line\">              if(index &gt; songs.length - 2) &#123;</div><div class=\"line\">                  index = 0;</div><div class=\"line\">              &#125; else &#123;</div><div class=\"line\">                  index++;</div><div class=\"line\">              &#125;</div><div class=\"line\">              e.setAttribute(&quot;curSongIndex&quot;, index);</div><div class=\"line\">          &#125;</div><div class=\"line\">          e.src = i;</div><div class=\"line\">          e.play()</div><div class=\"line\">      &#125;</div><div class=\"line\">      function initAudioEle() &#123;</div><div class=\"line\">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class=\"line\">          if(e === null)&#123;</div><div class=\"line\">            e = document.createElement(&quot;audio&quot;);</div><div class=\"line\">            e.setAttribute(&quot;curSongIndex&quot;, 0);</div><div class=\"line\">            e.id = &quot;audio_element_id&quot;;</div><div class=\"line\">            e.loop = false;</div><div class=\"line\">            e.bgcolor = 0;</div><div class=\"line\">            e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;;</div><div class=\"line\">            document.body.appendChild(e);</div><div class=\"line\">            e.addEventListener(&quot;ended&quot;, function() &#123;</div><div class=\"line\">              go();</div><div class=\"line\">            &#125;, true);</div><div class=\"line\">          &#125;        </div><div class=\"line\">      &#125;</div><div class=\"line\">    </div><div class=\"line\">      initAudioEle();</div><div class=\"line\">      var curSongIndex = parseInt(document.getElementById(&quot;audio_element_id&quot;).getAttribute(&quot;curSongIndex&quot;));</div><div class=\"line\">      var i = songs[curSongIndex];</div><div class=\"line\">      S();</div><div class=\"line\">    &#125;)()&apos;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-music&quot;&gt;&lt;/i&gt; 听音乐&lt;/a&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"作者头像变成圆形\"><a href=\"#作者头像变成圆形\" class=\"headerlink\" title=\"作者头像变成圆形\"></a>作者头像变成圆形</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">.site-author-image &#123;</div><div class=\"line\">  border-radius: 100%;</div><div class=\"line\">  padding: 2px;</div><div class=\"line\">  border: 2px dashed #fff;</div><div class=\"line\">  animation: cycle 2s 0.5s forwards;</div><div class=\"line\">  transition: border-radius 2s;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>博主名字号大小,也在 <code>custom.styl</code> 文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.site-author-name &#123;</div><div class=\"line\">  font-size: 16px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"动态title改动\"><a href=\"#动态title改动\" class=\"headerlink\" title=\"动态title改动\"></a>动态title改动</h1><p>先看代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--崩溃欺骗--&gt;</div><div class=\"line\">var OriginTitile = document.title;</div><div class=\"line\"> var titleTime;</div><div class=\"line\"> document.addEventListener(&apos;visibilitychange&apos;, function () &#123;</div><div class=\"line\">     if (document.hidden) &#123;</div><div class=\"line\">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/img/TEP.ico&quot;);</div><div class=\"line\">         document.title = &apos;╭(°A°`)╮ 页面崩溃&apos;;</div><div class=\"line\">         clearTimeout(titleTime);</div><div class=\"line\">     &#125;</div><div class=\"line\">     else &#123;</div><div class=\"line\">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/favicon.ico&quot;);</div><div class=\"line\">         document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&apos; + OriginTitile;</div><div class=\"line\">         titleTime = setTimeout(function () &#123;</div><div class=\"line\">             document.title = OriginTitile;</div><div class=\"line\">         &#125;, 2000);</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure>\n<p>做为JS引用时，可以直接将上面代码保存为XXX.js，然后引用。在 <code>\\themes\\next\\layout\\_layout.swig</code> 最下边引用加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--崩溃欺骗--&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/duoshuoshuo.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"hexo站点添加sitemap网站地图\"><a href=\"#hexo站点添加sitemap网站地图\" class=\"headerlink\" title=\"hexo站点添加sitemap网站地图\"></a>hexo站点添加sitemap网站地图</h1><h2 id=\"安装hexo的sitemap网站地图生成插件\"><a href=\"#安装hexo的sitemap网站地图生成插件\" class=\"headerlink\" title=\"安装hexo的sitemap网站地图生成插件\"></a>安装hexo的sitemap网站地图生成插件</h2><p>进入 <code>hexo</code> 根目录，打开 <code>git</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-generator-sitemap --save</div><div class=\"line\">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>\n<h2 id=\"在你的hexo站点的-config-yml添加下面的代码，注意缩进格式！\"><a href=\"#在你的hexo站点的-config-yml添加下面的代码，注意缩进格式！\" class=\"headerlink\" title=\"在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！\"></a>在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># hexo sitemap网站地图</div><div class=\"line\">sitemap:</div><div class=\"line\">  path: sitemap.xml</div><div class=\"line\">baidusitemap:</div><div class=\"line\">  path: baidusitemap.xml</div></pre></td></tr></table></figure>\n<h3 id=\"配置成功后\"><a href=\"#配置成功后\" class=\"headerlink\" title=\"配置成功后\"></a>配置成功后</h3><p>hexo编译时会在hexo站点根目录生成sitemap.xml和baidusitemap.xml<br>其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。<br>其次，在robots.txt中添加下面的一段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sitemap: http://你的域名/sitemap.xml</div><div class=\"line\">Sitemap: http://你的域名/baidusitemap.xml</div></pre></td></tr></table></figure>\n<p>请自行改成自己的网站。</p>\n<h1 id=\"给-Github-添加-README\"><a href=\"#给-Github-添加-README\" class=\"headerlink\" title=\"给 Github 添加 README\"></a>给 Github 添加 README</h1><p>默认情况下， <code>Github</code> 中每一个项目，我们希望有一份 <code>README.md</code> 的文件来作为项目的说明，但是我们在项目根目录下的 <code>blog\\source</code> 目录下创建一份 <code>README.md</code> 文件，写好说明介绍，部署的时候，这个 <code>README.md</code> 会被 <code>hexo</code> 解析掉，而不会被解析到 <code>Github</code> 中去的。<br>正确的解决方法其实很简单：<br>把 <code>README.md</code> 文件的后缀名改成 <code>MDOWN</code> 然后扔到 <code>blog/source</code> 文件夹下即可，这样 <code>hexo</code> 不会解析， <code>Github</code> 也会将其作为MD文件解析。</p>\n<h1 id=\"代码块自定义样式-内的\"><a href=\"#代码块自定义样式-内的\" class=\"headerlink\" title=\"代码块自定义样式``内的\"></a>代码块自定义样式``内的</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代码块自定义样式``内的</div><div class=\"line\">code &#123;</div><div class=\"line\">    color: #fc6423;</div><div class=\"line\">    background: #fbf7f8;</div><div class=\"line\">    margin: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">// 大代码块的自定义样式</div><div class=\"line\">.highlight, pre &#123;</div><div class=\"line\">    margin: 5px 0;</div><div class=\"line\">    padding: 5px;</div><div class=\"line\">    border-radius: 3px;</div><div class=\"line\">&#125;</div><div class=\"line\">.highlight, code, pre &#123;</div><div class=\"line\">    border: 1px solid #d6d6d6;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"博客部署的message\"><a href=\"#博客部署的message\" class=\"headerlink\" title=\"博客部署的message\"></a>博客部署的message</h1><p><code>\\node_modules\\hexo-deployer-git\\lib\\deployer.js</code> 文件末尾找到这一句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>\n<p>改得个性化一点：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">这个勤奋的家伙又更新了: &#123;&#123; now(\\&apos;YYYY-MM-DD HH:mm:ss\\&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>\n<h1 id=\"博文置顶\"><a href=\"#博文置顶\" class=\"headerlink\" title=\"博文置顶\"></a>博文置顶</h1><h2 id=\"修改-hexo-generator-index-插件\"><a href=\"#修改-hexo-generator-index-插件\" class=\"headerlink\" title=\"修改 hexo-generator-index 插件\"></a>修改 <code>hexo-generator-index</code> 插件</h2><p>替换文件：<code>node_modules/hexo-generator-index/lib/generator.js</code>为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;use strict&apos;;</div><div class=\"line\">var pagination = require(&apos;hexo-pagination&apos;);</div><div class=\"line\">module.exports = function(locals)&#123;</div><div class=\"line\">  var config = this.config;</div><div class=\"line\">  var posts = locals.posts;</div><div class=\"line\">    posts.data = posts.data.sort(function(a, b) &#123;</div><div class=\"line\">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</div><div class=\"line\">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</div><div class=\"line\">            else return b.top - a.top; // 否则按照top值降序排</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</div><div class=\"line\">            return -1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(!a.top &amp;&amp; b.top) &#123;</div><div class=\"line\">            return 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else return b.date - a.date; // 都没定义按照文章日期降序排</div><div class=\"line\">    &#125;);</div><div class=\"line\">  var paginationDir = config.pagination_dir || &apos;page&apos;;</div><div class=\"line\">  return pagination(&apos;&apos;, posts, &#123;</div><div class=\"line\">    perPage: config.index_generator.per_page,</div><div class=\"line\">    layout: [&apos;index&apos;, &apos;archive&apos;],</div><div class=\"line\">    format: paginationDir + &apos;/%d/&apos;,</div><div class=\"line\">    data: &#123;</div><div class=\"line\">      __index: true</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"设置文章置顶\"><a href=\"#设置文章置顶\" class=\"headerlink\" title=\"设置文章置顶\"></a>设置文章置顶</h2><p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: Hexo</div><div class=\"line\">date: </div><div class=\"line\">tags: </div><div class=\"line\">categories: </div><div class=\"line\">top: 10</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h1 id=\"NexT主题自定义无序列表样式\"><a href=\"#NexT主题自定义无序列表样式\" class=\"headerlink\" title=\"NexT主题自定义无序列表样式\"></a>NexT主题自定义无序列表样式</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ul &#123;</div><div class=\"line\">list-style-type: circle;  // 空心圆，实心圆为 disc</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://jimmy9876.top\">原文链接</a></p>\n<p>部分内容来自以下博客：<br><a href=\"http://www.wuxubj.cn/\" target=\"_blank\" rel=\"external\">务虚笔记</a><br><a href=\"http://ehlxr.me/\" target=\"_blank\" rel=\"external\">小桥流水人家</a><br><a href=\"http://www.iamlj.com/\" target=\"_blank\" rel=\"external\">Jing’s Blog</a><br><a href=\"https://notes.wanghao.work/\" target=\"_blank\" rel=\"external\">Doublemine</a><br><a href=\"http://lovenight.github.io/\" target=\"_blank\" rel=\"external\">岁月如歌</a><br><a href=\"http://hunao.info/\" target=\"_blank\" rel=\"external\">胡闹的日子</a><br><a href=\"https://neveryu.github.io/\" target=\"_blank\" rel=\"external\">Never_yu’s Blog </a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>折腾了next这么久，就写一篇博客来记录一下，以作备忘，同时也给后来人一些借鉴</p>\n</blockquote>","more":"<h1 id=\"NexT主题安装使用\"><a href=\"#NexT主题安装使用\" class=\"headerlink\" title=\"NexT主题安装使用\"></a>NexT主题安装使用</h1><h2 id=\"本地环境\"><a href=\"#本地环境\" class=\"headerlink\" title=\"本地环境\"></a>本地环境</h2><p>自行安装 <code>git</code> 和 <code>Node.js</code> 不会的可百度，安装方法一堆。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p><code>Git</code> 和 <code>Node.js</code> 都安装好后,首先创建一个用于存放博客文件的文件夹，如 <code>blog</code>，然后进入 <code>blog</code> 文件夹，下面开始安装并使用 <code>Hexo</code>。<br>右键选择 <code>Git Bash Here</code>，弹出 <code>Git Bash</code> 窗口；执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<p>安装完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<p>其中 <code>_config.yml</code> 文件用于存放网站的配置信息，你可以在此配置大部分的参数； <code>scaffolds</code> 是存放模板的文件夹，当新建文章时，Hexo 会根据 <code>scaffold</code> 来建立文件； <code>source</code> 是资源文件夹，用于存放用户资源， <code>themes</code>是主题文件夹，存放博客主题， <code>Hexo</code> 会根据主题来生成静态页面。</p>\n<p>在 <code>Git Bash</code> 终端执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>Hexo将 <code>source</code> 文件夹中的Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹中， <code>public</code> 文件夹用于存放静态博客文件，相当于网站根目录。<br>至此博客雏形基本完成，在浏览器中访问 <code>http://localhost:4000/</code> ，就可以访问本地博客了。</p>\n<h2 id=\"使用NexT主题\"><a href=\"#使用NexT主题\" class=\"headerlink\" title=\"使用NexT主题\"></a>使用NexT主题</h2><p>在 <code>Git Bash</code> 终端执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>\n<p>打开站点配置文件 <code>_config.yml</code>，找到 <code>theme</code> 字段，并将其值更改为 <code>next</code> 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n<p>NexT主题是我用过的唯一的一款Hexo主题，界面简约，功能齐全且多样，响应式设计，电脑，手机访问效果很好。</p>\n<p>在 <code>Git Bash</code> 终端执行命令 <code>hexo s</code> ，在浏览器中访问 <code>http://localhost:4000/</code> ，可以看到默认的NexT-Muse主题。</p>\n<p>我喜欢双栏的故使用 <code>NexT.Pisces</code> 主题，修改主题配置文件  <code>_config.yml</code>的 <code>Schemes</code> 字段的值为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scheme: Pisces</div></pre></td></tr></table></figure>\n<h1 id=\"Next主题宽度调节\"><a href=\"#Next主题宽度调节\" class=\"headerlink\" title=\"Next主题宽度调节\"></a>Next主题宽度调节</h1><p>现在一般都用宽屏显示器，博客页面两侧留白太多，调整一下宽度。<br>打开 <code>\\themes\\next\\source\\css\\_common\\components\\post\\post-expand.styl</code> 文件，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media (max-width: 767px)</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media (max-width: 1080px)</div></pre></td></tr></table></figure>\n<p>打开 <code>\\themes\\next\\source\\css\\ _variables\\base.styl</code> 文件，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$main-desktop                   = 960px</div><div class=\"line\">$main-desktop-large             = 1200px</div><div class=\"line\">$content-desktop                = 700px</div></pre></td></tr></table></figure>\n<p>修改 <code>$main-desktop</code> 和 <code>$content-desktop</code> 的数值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$main-desktop                   = 1080px</div><div class=\"line\">$main-desktop-large             = 1200px</div><div class=\"line\">$content-desktop                = 810px</div></pre></td></tr></table></figure>\n<p><code>Next.Mist</code> 主题的文章宽度至此改完了。如果你用的是 <code>Next.Pisces</code>，还需要继续修改。<br>打开 <code>\\themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl</code> 文件，将第 <code>4</code> 行的 <code>width改为1080px</code> ，修改后如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.header &#123;</div><div class=\"line\">  position: relative;</div><div class=\"line\">  margin: 0 auto;</div><div class=\"line\">  width: 1080px;</div></pre></td></tr></table></figure>\n<p>记录一下我常用的细节改动，参考了许多博友的设置，并不是我的原创。参考网站，会在文章最底部列出，以示谢意。</p>\n<h1 id=\"修改文章内链接文本样式\"><a href=\"#修改文章内链接文本样式\" class=\"headerlink\" title=\"修改文章内链接文本样式\"></a>修改文章内链接文本样式</h1><p>将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。<br>修改文件 <code>themes\\next\\source\\css\\_common\\components\\post\\post.styl</code> ，添加如下css样式，：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 文章内链接文本样式</div><div class=\"line\">.post-body p a&#123;</div><div class=\"line\">  color: #0593d3;</div><div class=\"line\">  border-bottom: none;</div><div class=\"line\">  border-bottom: 1px solid #0593d3;</div><div class=\"line\">  &amp;:hover &#123;</div><div class=\"line\">    color: #fc6423;</div><div class=\"line\">    border-bottom: none;</div><div class=\"line\">    border-bottom: 1px solid #fc6423;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>选择 <code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式。</p>\n<h1 id=\"文章底部的那个带-号的标签\"><a href=\"#文章底部的那个带-号的标签\" class=\"headerlink\" title=\"文章底部的那个带#号的标签\"></a>文章底部的那个带#号的标签</h1><p>文章底部的那个带#号的标签，比如#NexT，可以把#换成图标吗，怎么设置?<br>修改模板 <code>layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>\n<h1 id=\"首页展示文章动画效果和图片放大镜效果关闭哪改？\"><a href=\"#首页展示文章动画效果和图片放大镜效果关闭哪改？\" class=\"headerlink\" title=\"首页展示文章动画效果和图片放大镜效果关闭哪改？\"></a>首页展示文章动画效果和图片放大镜效果关闭哪改？</h1><p>文章动画效果关闭：主题配置里 <code>Motion:</code> 改为 <code>false</code></p>\n<p>关闭图片放大镜效果: 主题配置里 <code>fancybox:</code> 改为 <code>false</code></p>\n<h1 id=\"hexo背景动态效果和心心\"><a href=\"#hexo背景动态效果和心心\" class=\"headerlink\" title=\"hexo背景动态效果和心心\"></a>hexo背景动态效果和心心</h1><p>博客背景动态效果图和点击小红心效果的相关设置。<br>把 <code>js</code> 文件 <code>love.js</code> 和 <code>particle.js</code> 放在 <code>\\themes\\next\\source\\js\\src</code> 文件目录下<br>更新 <code>\\themes\\next\\layout\\_layout.swig</code> 文件，在末尾（在前面引用会出现找不到的bug）添加以下 <code>js</code> 引入代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 背景动画 --&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;!-- 页面点击小红心 --&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>想设置动画线条颜色可改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; color=&quot;255,0,0&quot; opacity=&quot;0.3&quot; count=&quot;99&quot; src=&quot;particle.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>就能显示红色。或者用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particles.js&quot; count=&quot;50&quot; zindex=&quot;-2&quot; opacity=&quot;1&quot; color=&quot;0,104,183&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>两个JS下载为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/love.js</div><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/particle.js</div></pre></td></tr></table></figure>\n<h1 id=\"hexo-NexT主题首页title的优化\"><a href=\"#hexo-NexT主题首页title的优化\" class=\"headerlink\" title=\"hexo NexT主题首页title的优化\"></a>hexo NexT主题首页title的优化</h1><p>更改 <code>index.swig</code> 文件，文件路径是 <code>your-hexo-site\\themes\\next\\layout</code> ，将下面代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p>这时候你的首页标题会更符合网站名称 - 网站描述这习惯。<br>进阶，做了 <code>seo</code> 优化，把关键词也显示在 <code>Title</code> 标题里，可改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>\n<p><strong>注意：</strong>别堆砌关键字，整个标题一般不超过 <code>80</code> 个字符，可以通过chinaz的seo综合查询检查。</p>\n<h1 id=\"每篇文章末尾统一添加“本文结束”标记\"><a href=\"#每篇文章末尾统一添加“本文结束”标记\" class=\"headerlink\" title=\"每篇文章末尾统一添加“本文结束”标记\"></a>每篇文章末尾统一添加“本文结束”标记</h1><h2 id=\"新建-passage-end-tag-swig-文件\"><a href=\"#新建-passage-end-tag-swig-文件\" class=\"headerlink\" title=\"新建 passage-end-tag.swig 文件\"></a>新建 <code>passage-end-tag.swig</code> 文件</h2><p>在路径 <code>\\themes\\next\\layout\\_macro</code> 中添加 <code>passage-end-tag.swig</code> 文件，其内容为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">    &#123;% if not is_index %&#125;</div><div class=\"line\">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢阅读------&lt;/div&gt;</div><div class=\"line\">    &#123;% endif %&#125;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"修改-post-swig-文件\"><a href=\"#修改-post-swig-文件\" class=\"headerlink\" title=\"修改 post.swig 文件\"></a>修改 post.swig 文件</h2><p>在 <code>\\themes\\next\\layout\\_macro\\post.swig</code> 中， <code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码（post-footer之前两个DIV）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">  &#123;% if not is_index %&#125;</div><div class=\"line\">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class=\"line\">  &#123;% endif %&#125;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"在主题配置文件中添加字段\"><a href=\"#在主题配置文件中添加字段\" class=\"headerlink\" title=\"在主题配置文件中添加字段\"></a>在主题配置文件中添加字段</h2><p>在<strong>主题配置文件</strong> <code>_config.yml</code> 中添加以下字段开启此功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 文章末尾添加“本文结束”标记</div><div class=\"line\">passage_end_tag:</div><div class=\"line\">  enabled: true</div></pre></td></tr></table></figure>\n<p>完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。</p>\n<h1 id=\"增加HIGH一下功能\"><a href=\"#增加HIGH一下功能\" class=\"headerlink\" title=\"增加HIGH一下功能\"></a>增加HIGH一下功能</h1><p>在 <code>themes\\next\\layout\\_macro</code> 目录下增加 <code>high.swig</code> 文件，我已改为歌曲循环和多次点击不重复！<br>地址为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://7u2ss1.com1.z0.glb.clouddn.com/high-xunhuan.swig</div></pre></td></tr></table></figure>\n<p>打开这个地址，复制全部内容，在你本地新建<code>high.swig</code> 文件。<br>打开\\themes\\next\\layout_macro\\sidebar.swig文件，打开，在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; target=&quot;_blank&quot; rel=&quot;alternate&quot;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;</div><div class=\"line\">    RSS</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>后边加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% include &apos;high.swig&apos; %&#125;</div></pre></td></tr></table></figure>\n<p>如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% if theme.rss %&#125;</div><div class=\"line\">          &lt;div class=&quot;feed-link motion-element&quot;&gt;</div><div class=\"line\">            &lt;a href=&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; rel=&quot;alternate&quot;&gt;</div><div class=\"line\">              &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;</div><div class=\"line\">              RSS</div><div class=\"line\">            &lt;/a&gt;</div><div class=\"line\">              &#123;% include &apos;high.swig&apos; %&#125;</div><div class=\"line\">          &lt;/div&gt;</div><div class=\"line\">        &#123;% endif %&#125;</div></pre></td></tr></table></figure>\n<p>接着在主题配置文件 <code>_config.yml</code> ，加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">highqilai: </div><div class=\"line\">  enabled: true</div></pre></td></tr></table></figure>\n<p>然后打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.feed-link a&#123;display: inline-block;&#125;</div></pre></td></tr></table></figure>\n<p>保存，<code>hexo clean</code> ， <code>hexo g</code> , <code>hexo s</code> 查看效果！<br>主页 <code>High</code> 起来，摇动。改动方法！<br><code>themes\\next\\layout\\_layout.swig</code><br>前添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link href=&quot;http://7u2ss1.com1.z0.glb.clouddn.com/harlem-shake-style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>地址改为你自己的CSS。失效了不怪！<br><em>如果只是想当播放器听歌的话改 high.swig 文件内容为：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a title=&quot;收藏到书签，偶尔High一下^_^&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&apos;javascript:(</div><div class=\"line\">    /*</div><div class=\"line\">     * Copyright (C) 2015 Rocko (rocko.xyz) &lt;rocko.zxp@gmail.com&gt;</div><div class=\"line\">     *</div><div class=\"line\">     * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</div><div class=\"line\">     * you may not use this file except in compliance with the License.</div><div class=\"line\">     * You may obtain a copy of the License at</div><div class=\"line\">     *</div><div class=\"line\">     *      http://www.apache.org/licenses/LICENSE-2.0</div><div class=\"line\">     *</div><div class=\"line\">     * Unless required by applicable law or agreed to in writing, software</div><div class=\"line\">     * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</div><div class=\"line\">     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class=\"line\">     * See the License for the specific language governing permissions and</div><div class=\"line\">     * limitations under the License.</div><div class=\"line\">     */</div><div class=\"line\">    function go() &#123;</div><div class=\"line\">    </div><div class=\"line\">      var songs = [</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/%E9%AB%98%E6%A2%A8%E5%BA%B7%E6%B2%BB%20-%20%E5%AD%A4%E7%8B%AC.mp3&quot;, </div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/one%20by%20one.mp3&quot;,</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20Only%20Time.mp3&quot;,</div><div class=\"line\">          &quot;http://7u2ss1.com1.z0.glb.clouddn.com/Enya%20-%20May%20It%20Be.mp3&quot;,        </div><div class=\"line\">          &quot;......&quot;</div><div class=\"line\">      ];</div><div class=\"line\"> </div><div class=\"line\">      function S() &#123;</div><div class=\"line\">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class=\"line\">          if(e != null)&#123;</div><div class=\"line\">              var index = parseInt(e.getAttribute(&quot;curSongIndex&quot;));</div><div class=\"line\">              if(index &gt; songs.length - 2) &#123;</div><div class=\"line\">                  index = 0;</div><div class=\"line\">              &#125; else &#123;</div><div class=\"line\">                  index++;</div><div class=\"line\">              &#125;</div><div class=\"line\">              e.setAttribute(&quot;curSongIndex&quot;, index);</div><div class=\"line\">          &#125;</div><div class=\"line\">          e.src = i;</div><div class=\"line\">          e.play()</div><div class=\"line\">      &#125;</div><div class=\"line\">      function initAudioEle() &#123;</div><div class=\"line\">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class=\"line\">          if(e === null)&#123;</div><div class=\"line\">            e = document.createElement(&quot;audio&quot;);</div><div class=\"line\">            e.setAttribute(&quot;curSongIndex&quot;, 0);</div><div class=\"line\">            e.id = &quot;audio_element_id&quot;;</div><div class=\"line\">            e.loop = false;</div><div class=\"line\">            e.bgcolor = 0;</div><div class=\"line\">            e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;;</div><div class=\"line\">            document.body.appendChild(e);</div><div class=\"line\">            e.addEventListener(&quot;ended&quot;, function() &#123;</div><div class=\"line\">              go();</div><div class=\"line\">            &#125;, true);</div><div class=\"line\">          &#125;        </div><div class=\"line\">      &#125;</div><div class=\"line\">    </div><div class=\"line\">      initAudioEle();</div><div class=\"line\">      var curSongIndex = parseInt(document.getElementById(&quot;audio_element_id&quot;).getAttribute(&quot;curSongIndex&quot;));</div><div class=\"line\">      var i = songs[curSongIndex];</div><div class=\"line\">      S();</div><div class=\"line\">    &#125;)()&apos;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-music&quot;&gt;&lt;/i&gt; 听音乐&lt;/a&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"作者头像变成圆形\"><a href=\"#作者头像变成圆形\" class=\"headerlink\" title=\"作者头像变成圆形\"></a>作者头像变成圆形</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">.site-author-image &#123;</div><div class=\"line\">  border-radius: 100%;</div><div class=\"line\">  padding: 2px;</div><div class=\"line\">  border: 2px dashed #fff;</div><div class=\"line\">  animation: cycle 2s 0.5s forwards;</div><div class=\"line\">  transition: border-radius 2s;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>博主名字号大小,也在 <code>custom.styl</code> 文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.site-author-name &#123;</div><div class=\"line\">  font-size: 16px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"动态title改动\"><a href=\"#动态title改动\" class=\"headerlink\" title=\"动态title改动\"></a>动态title改动</h1><p>先看代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--崩溃欺骗--&gt;</div><div class=\"line\">var OriginTitile = document.title;</div><div class=\"line\"> var titleTime;</div><div class=\"line\"> document.addEventListener(&apos;visibilitychange&apos;, function () &#123;</div><div class=\"line\">     if (document.hidden) &#123;</div><div class=\"line\">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/img/TEP.ico&quot;);</div><div class=\"line\">         document.title = &apos;╭(°A°`)╮ 页面崩溃&apos;;</div><div class=\"line\">         clearTimeout(titleTime);</div><div class=\"line\">     &#125;</div><div class=\"line\">     else &#123;</div><div class=\"line\">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/favicon.ico&quot;);</div><div class=\"line\">         document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&apos; + OriginTitile;</div><div class=\"line\">         titleTime = setTimeout(function () &#123;</div><div class=\"line\">             document.title = OriginTitile;</div><div class=\"line\">         &#125;, 2000);</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure>\n<p>做为JS引用时，可以直接将上面代码保存为XXX.js，然后引用。在 <code>\\themes\\next\\layout\\_layout.swig</code> 最下边引用加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--崩溃欺骗--&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/duoshuoshuo.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"hexo站点添加sitemap网站地图\"><a href=\"#hexo站点添加sitemap网站地图\" class=\"headerlink\" title=\"hexo站点添加sitemap网站地图\"></a>hexo站点添加sitemap网站地图</h1><h2 id=\"安装hexo的sitemap网站地图生成插件\"><a href=\"#安装hexo的sitemap网站地图生成插件\" class=\"headerlink\" title=\"安装hexo的sitemap网站地图生成插件\"></a>安装hexo的sitemap网站地图生成插件</h2><p>进入 <code>hexo</code> 根目录，打开 <code>git</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-generator-sitemap --save</div><div class=\"line\">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>\n<h2 id=\"在你的hexo站点的-config-yml添加下面的代码，注意缩进格式！\"><a href=\"#在你的hexo站点的-config-yml添加下面的代码，注意缩进格式！\" class=\"headerlink\" title=\"在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！\"></a>在你的hexo站点的_config.yml添加下面的代码，注意缩进格式！</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># hexo sitemap网站地图</div><div class=\"line\">sitemap:</div><div class=\"line\">  path: sitemap.xml</div><div class=\"line\">baidusitemap:</div><div class=\"line\">  path: baidusitemap.xml</div></pre></td></tr></table></figure>\n<h3 id=\"配置成功后\"><a href=\"#配置成功后\" class=\"headerlink\" title=\"配置成功后\"></a>配置成功后</h3><p>hexo编译时会在hexo站点根目录生成sitemap.xml和baidusitemap.xml<br>其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。<br>其次，在robots.txt中添加下面的一段代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sitemap: http://你的域名/sitemap.xml</div><div class=\"line\">Sitemap: http://你的域名/baidusitemap.xml</div></pre></td></tr></table></figure>\n<p>请自行改成自己的网站。</p>\n<h1 id=\"给-Github-添加-README\"><a href=\"#给-Github-添加-README\" class=\"headerlink\" title=\"给 Github 添加 README\"></a>给 Github 添加 README</h1><p>默认情况下， <code>Github</code> 中每一个项目，我们希望有一份 <code>README.md</code> 的文件来作为项目的说明，但是我们在项目根目录下的 <code>blog\\source</code> 目录下创建一份 <code>README.md</code> 文件，写好说明介绍，部署的时候，这个 <code>README.md</code> 会被 <code>hexo</code> 解析掉，而不会被解析到 <code>Github</code> 中去的。<br>正确的解决方法其实很简单：<br>把 <code>README.md</code> 文件的后缀名改成 <code>MDOWN</code> 然后扔到 <code>blog/source</code> 文件夹下即可，这样 <code>hexo</code> 不会解析， <code>Github</code> 也会将其作为MD文件解析。</p>\n<h1 id=\"代码块自定义样式-内的\"><a href=\"#代码块自定义样式-内的\" class=\"headerlink\" title=\"代码块自定义样式``内的\"></a>代码块自定义样式``内的</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 代码块自定义样式``内的</div><div class=\"line\">code &#123;</div><div class=\"line\">    color: #fc6423;</div><div class=\"line\">    background: #fbf7f8;</div><div class=\"line\">    margin: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">// 大代码块的自定义样式</div><div class=\"line\">.highlight, pre &#123;</div><div class=\"line\">    margin: 5px 0;</div><div class=\"line\">    padding: 5px;</div><div class=\"line\">    border-radius: 3px;</div><div class=\"line\">&#125;</div><div class=\"line\">.highlight, code, pre &#123;</div><div class=\"line\">    border: 1px solid #d6d6d6;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"博客部署的message\"><a href=\"#博客部署的message\" class=\"headerlink\" title=\"博客部署的message\"></a>博客部署的message</h1><p><code>\\node_modules\\hexo-deployer-git\\lib\\deployer.js</code> 文件末尾找到这一句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>\n<p>改得个性化一点：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">这个勤奋的家伙又更新了: &#123;&#123; now(\\&apos;YYYY-MM-DD HH:mm:ss\\&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>\n<h1 id=\"博文置顶\"><a href=\"#博文置顶\" class=\"headerlink\" title=\"博文置顶\"></a>博文置顶</h1><h2 id=\"修改-hexo-generator-index-插件\"><a href=\"#修改-hexo-generator-index-插件\" class=\"headerlink\" title=\"修改 hexo-generator-index 插件\"></a>修改 <code>hexo-generator-index</code> 插件</h2><p>替换文件：<code>node_modules/hexo-generator-index/lib/generator.js</code>为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&apos;use strict&apos;;</div><div class=\"line\">var pagination = require(&apos;hexo-pagination&apos;);</div><div class=\"line\">module.exports = function(locals)&#123;</div><div class=\"line\">  var config = this.config;</div><div class=\"line\">  var posts = locals.posts;</div><div class=\"line\">    posts.data = posts.data.sort(function(a, b) &#123;</div><div class=\"line\">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</div><div class=\"line\">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</div><div class=\"line\">            else return b.top - a.top; // 否则按照top值降序排</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</div><div class=\"line\">            return -1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if(!a.top &amp;&amp; b.top) &#123;</div><div class=\"line\">            return 1;</div><div class=\"line\">        &#125;</div><div class=\"line\">        else return b.date - a.date; // 都没定义按照文章日期降序排</div><div class=\"line\">    &#125;);</div><div class=\"line\">  var paginationDir = config.pagination_dir || &apos;page&apos;;</div><div class=\"line\">  return pagination(&apos;&apos;, posts, &#123;</div><div class=\"line\">    perPage: config.index_generator.per_page,</div><div class=\"line\">    layout: [&apos;index&apos;, &apos;archive&apos;],</div><div class=\"line\">    format: paginationDir + &apos;/%d/&apos;,</div><div class=\"line\">    data: &#123;</div><div class=\"line\">      __index: true</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h2 id=\"设置文章置顶\"><a href=\"#设置文章置顶\" class=\"headerlink\" title=\"设置文章置顶\"></a>设置文章置顶</h2><p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: Hexo</div><div class=\"line\">date: </div><div class=\"line\">tags: </div><div class=\"line\">categories: </div><div class=\"line\">top: 10</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h1 id=\"NexT主题自定义无序列表样式\"><a href=\"#NexT主题自定义无序列表样式\" class=\"headerlink\" title=\"NexT主题自定义无序列表样式\"></a>NexT主题自定义无序列表样式</h1><p>打开自定义CSS： <code>\\themes\\next\\source\\css\\_custom\\custom.styl</code> 加入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ul &#123;</div><div class=\"line\">list-style-type: circle;  // 空心圆，实心圆为 disc</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://jimmy9876.top\">原文链接</a></p>\n<p>部分内容来自以下博客：<br><a href=\"http://www.wuxubj.cn/\" target=\"_blank\" rel=\"external\">务虚笔记</a><br><a href=\"http://ehlxr.me/\" target=\"_blank\" rel=\"external\">小桥流水人家</a><br><a href=\"http://www.iamlj.com/\" target=\"_blank\" rel=\"external\">Jing’s Blog</a><br><a href=\"https://notes.wanghao.work/\" target=\"_blank\" rel=\"external\">Doublemine</a><br><a href=\"http://lovenight.github.io/\" target=\"_blank\" rel=\"external\">岁月如歌</a><br><a href=\"http://hunao.info/\" target=\"_blank\" rel=\"external\">胡闹的日子</a><br><a href=\"https://neveryu.github.io/\" target=\"_blank\" rel=\"external\">Never_yu’s Blog </a></p>"},{"title":"Hexo教程","date":"2017-05-25T05:00:17.000Z","copyright":true,"_content":"\n### hexo 新建一篇文章给它添加分类和标签:\n\n```powershell\nhexo new \"Hexo教程\"\n```\n\n通过mou编辑器打开：添加tags和categories:\n\n```Shell\n---\ntitle: title #文章標題\ndate: 2016-06-01 23:47:44 #文章生成時間\ncategories: \"Hexo教程\" #文章分類目錄 可以省略\ntags: #文章標籤 可以省略\n     - 标签1\n     - 标签2\n description: #你對本頁的描述 可以省略\n---\n```\n\n","source":"_posts/Hexo教程.md","raw":"---\ntitle: Hexo教程\ndate: 2017-05-25 13:00:17\ncopyright: true\ntags:\n\thexo_blog\n---\n\n### hexo 新建一篇文章给它添加分类和标签:\n\n```powershell\nhexo new \"Hexo教程\"\n```\n\n通过mou编辑器打开：添加tags和categories:\n\n```Shell\n---\ntitle: title #文章標題\ndate: 2016-06-01 23:47:44 #文章生成時間\ncategories: \"Hexo教程\" #文章分類目錄 可以省略\ntags: #文章標籤 可以省略\n     - 标签1\n     - 标签2\n description: #你對本頁的描述 可以省略\n---\n```\n\n","slug":"Hexo教程","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk2840009q0fa5v63f4z0","content":"<h3 id=\"hexo-新建一篇文章给它添加分类和标签\"><a href=\"#hexo-新建一篇文章给它添加分类和标签\" class=\"headerlink\" title=\"hexo 新建一篇文章给它添加分类和标签:\"></a>hexo 新建一篇文章给它添加分类和标签:</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new <span class=\"string\">\"Hexo教程\"</span></div></pre></td></tr></table></figure>\n<p>通过mou编辑器打开：添加tags和categories:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: title #文章標題</div><div class=\"line\">date: 2016-06-01 23:47:44 #文章生成時間</div><div class=\"line\">categories: \"Hexo教程\" #文章分類目錄 可以省略</div><div class=\"line\">tags: #文章標籤 可以省略</div><div class=\"line\">     - 标签1</div><div class=\"line\">     - 标签2</div><div class=\"line\"> description: #你對本頁的描述 可以省略</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"hexo-新建一篇文章给它添加分类和标签\"><a href=\"#hexo-新建一篇文章给它添加分类和标签\" class=\"headerlink\" title=\"hexo 新建一篇文章给它添加分类和标签:\"></a>hexo 新建一篇文章给它添加分类和标签:</h3><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new <span class=\"string\">\"Hexo教程\"</span></div></pre></td></tr></table></figure>\n<p>通过mou编辑器打开：添加tags和categories:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: title #文章標題</div><div class=\"line\">date: 2016-06-01 23:47:44 #文章生成時間</div><div class=\"line\">categories: \"Hexo教程\" #文章分類目錄 可以省略</div><div class=\"line\">tags: #文章標籤 可以省略</div><div class=\"line\">     - 标签1</div><div class=\"line\">     - 标签2</div><div class=\"line\"> description: #你對本頁的描述 可以省略</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n"},{"title":"MPV播放器使用手册","copyright":true,"date":"2017-06-06T08:54:21.000Z","_content":"\n最近换了视频播放器，因为搜索到的内容大都对 mpv 一片好评，所以开始试用 mpv。\n\n> 他是个单文件播放器，是mplayer和mplayer2的活跃分支（可能也是最活跃？）\n\n<!--more-->\n\n# 默认快捷键\n\n> 跟大多数播放器类似的常用快捷键\n\n- SPACE 暂停/播放切换\n- UP 快进 60 秒\n- DOWN 回退 60 秒\n- LEFT 回退 5 秒\n- RIGHT 快进 5 秒\n\n> 其他常用快捷键 \n\n- j 循环选择字幕\n- J 反向循环选择字幕\n- \\# 循环切换音轨\n- f 切换全屏状态\n- T 切换视频窗口是否总在最前\n- s 视频截图，包含字幕\n- S 视频截图，不带字幕\n- Alt+s 自动逐帧视频截图，再按一次停止截图\n- . 进到下一帧\n- , 退到前一帧\n- 9 音量减 2\n- 0 音量加 2\n- [ 0.9091 倍慢速播放\n- ] 1.1 倍快速播放\n- { 0.5 倍慢速播放\n- } 2 倍快速播放\n- Backspace 重置为正常播放速度\n\n# 官方文档\n\n- [mpv keybindings](https://github.com/mpv-player/mpv/blob/master/etc/input.conf)\n- [mpv options](https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst)","source":"_posts/MPV播放器使用手册.md","raw":"---\ntitle: MPV播放器使用手册\ncopyright: true\ndate: 2017-06-06 16:54:21\ntags: mpv\n---\n\n最近换了视频播放器，因为搜索到的内容大都对 mpv 一片好评，所以开始试用 mpv。\n\n> 他是个单文件播放器，是mplayer和mplayer2的活跃分支（可能也是最活跃？）\n\n<!--more-->\n\n# 默认快捷键\n\n> 跟大多数播放器类似的常用快捷键\n\n- SPACE 暂停/播放切换\n- UP 快进 60 秒\n- DOWN 回退 60 秒\n- LEFT 回退 5 秒\n- RIGHT 快进 5 秒\n\n> 其他常用快捷键 \n\n- j 循环选择字幕\n- J 反向循环选择字幕\n- \\# 循环切换音轨\n- f 切换全屏状态\n- T 切换视频窗口是否总在最前\n- s 视频截图，包含字幕\n- S 视频截图，不带字幕\n- Alt+s 自动逐帧视频截图，再按一次停止截图\n- . 进到下一帧\n- , 退到前一帧\n- 9 音量减 2\n- 0 音量加 2\n- [ 0.9091 倍慢速播放\n- ] 1.1 倍快速播放\n- { 0.5 倍慢速播放\n- } 2 倍快速播放\n- Backspace 重置为正常播放速度\n\n# 官方文档\n\n- [mpv keybindings](https://github.com/mpv-player/mpv/blob/master/etc/input.conf)\n- [mpv options](https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst)","slug":"MPV播放器使用手册","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk286000aq0fasw7p2d22","content":"<p>最近换了视频播放器，因为搜索到的内容大都对 mpv 一片好评，所以开始试用 mpv。</p>\n<blockquote>\n<p>他是个单文件播放器，是mplayer和mplayer2的活跃分支（可能也是最活跃？）</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"默认快捷键\"><a href=\"#默认快捷键\" class=\"headerlink\" title=\"默认快捷键\"></a>默认快捷键</h1><blockquote>\n<p>跟大多数播放器类似的常用快捷键</p>\n</blockquote>\n<ul>\n<li>SPACE 暂停/播放切换</li>\n<li>UP 快进 60 秒</li>\n<li>DOWN 回退 60 秒</li>\n<li>LEFT 回退 5 秒</li>\n<li>RIGHT 快进 5 秒</li>\n</ul>\n<blockquote>\n<p>其他常用快捷键 </p>\n</blockquote>\n<ul>\n<li>j 循环选择字幕</li>\n<li>J 反向循环选择字幕</li>\n<li># 循环切换音轨</li>\n<li>f 切换全屏状态</li>\n<li>T 切换视频窗口是否总在最前</li>\n<li>s 视频截图，包含字幕</li>\n<li>S 视频截图，不带字幕</li>\n<li>Alt+s 自动逐帧视频截图，再按一次停止截图</li>\n<li>. 进到下一帧</li>\n<li>, 退到前一帧</li>\n<li>9 音量减 2</li>\n<li>0 音量加 2</li>\n<li>[ 0.9091 倍慢速播放</li>\n<li>] 1.1 倍快速播放</li>\n<li>{ 0.5 倍慢速播放</li>\n<li>} 2 倍快速播放</li>\n<li>Backspace 重置为正常播放速度</li>\n</ul>\n<h1 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h1><ul>\n<li><a href=\"https://github.com/mpv-player/mpv/blob/master/etc/input.conf\" target=\"_blank\" rel=\"external\">mpv keybindings</a></li>\n<li><a href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst\" target=\"_blank\" rel=\"external\">mpv options</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>最近换了视频播放器，因为搜索到的内容大都对 mpv 一片好评，所以开始试用 mpv。</p>\n<blockquote>\n<p>他是个单文件播放器，是mplayer和mplayer2的活跃分支（可能也是最活跃？）</p>\n</blockquote>","more":"<h1 id=\"默认快捷键\"><a href=\"#默认快捷键\" class=\"headerlink\" title=\"默认快捷键\"></a>默认快捷键</h1><blockquote>\n<p>跟大多数播放器类似的常用快捷键</p>\n</blockquote>\n<ul>\n<li>SPACE 暂停/播放切换</li>\n<li>UP 快进 60 秒</li>\n<li>DOWN 回退 60 秒</li>\n<li>LEFT 回退 5 秒</li>\n<li>RIGHT 快进 5 秒</li>\n</ul>\n<blockquote>\n<p>其他常用快捷键 </p>\n</blockquote>\n<ul>\n<li>j 循环选择字幕</li>\n<li>J 反向循环选择字幕</li>\n<li># 循环切换音轨</li>\n<li>f 切换全屏状态</li>\n<li>T 切换视频窗口是否总在最前</li>\n<li>s 视频截图，包含字幕</li>\n<li>S 视频截图，不带字幕</li>\n<li>Alt+s 自动逐帧视频截图，再按一次停止截图</li>\n<li>. 进到下一帧</li>\n<li>, 退到前一帧</li>\n<li>9 音量减 2</li>\n<li>0 音量加 2</li>\n<li>[ 0.9091 倍慢速播放</li>\n<li>] 1.1 倍快速播放</li>\n<li>{ 0.5 倍慢速播放</li>\n<li>} 2 倍快速播放</li>\n<li>Backspace 重置为正常播放速度</li>\n</ul>\n<h1 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h1><ul>\n<li><a href=\"https://github.com/mpv-player/mpv/blob/master/etc/input.conf\" target=\"_blank\" rel=\"external\">mpv keybindings</a></li>\n<li><a href=\"https://github.com/mpv-player/mpv/blob/master/DOCS/man/options.rst\" target=\"_blank\" rel=\"external\">mpv options</a></li>\n</ul>"},{"title":"Mac下重置mysql的root密码","date":"2017-05-25T09:57:05.000Z","copyright":true,"_content":"\n>我的mysql版本 MYSQL V5.7.9，旧版本请使用：\n\n\n```\nUPDATE mysql.user SET Password=PASSWORD('新密码') WHERE User='root';\n```\n\n###Mac OS X - 重置 MySQL Root密码\n密码太多记不住？？你是否忘记了Mac OS 的MySQL的root密码? 通过以下4步就可重新设置新密码：\n#####1.  停止 mysql server. \n 通常是在 '系统偏好设置' > MySQL > 'Stop MySQL Server'\n#####2.  打开终端，输入：\n```\n sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables\n```\n#####3.  打开另一个新终端，输入:\n\n```\n   sudo /usr/local/mysql/bin/mysql -u root\n\n     UPDATE mysql.user SET authentication_string=PASSWORD('你的新密码') WHERE User='root';\n\n     FLUSH PRIVILEGES;\n\n     exit\n```\n\n#####4.  重启MySQL.\n好了，这样就完成了","source":"_posts/Mac下重置mysql的root密码.md","raw":"---\ntitle: Mac下重置mysql的root密码\ndate: 2017-05-25 17:57:05\ntags: mysql\ncopyright: true\n---\n\n>我的mysql版本 MYSQL V5.7.9，旧版本请使用：\n\n\n```\nUPDATE mysql.user SET Password=PASSWORD('新密码') WHERE User='root';\n```\n\n###Mac OS X - 重置 MySQL Root密码\n密码太多记不住？？你是否忘记了Mac OS 的MySQL的root密码? 通过以下4步就可重新设置新密码：\n#####1.  停止 mysql server. \n 通常是在 '系统偏好设置' > MySQL > 'Stop MySQL Server'\n#####2.  打开终端，输入：\n```\n sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables\n```\n#####3.  打开另一个新终端，输入:\n\n```\n   sudo /usr/local/mysql/bin/mysql -u root\n\n     UPDATE mysql.user SET authentication_string=PASSWORD('你的新密码') WHERE User='root';\n\n     FLUSH PRIVILEGES;\n\n     exit\n```\n\n#####4.  重启MySQL.\n好了，这样就完成了","slug":"Mac下重置mysql的root密码","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk287000cq0fajiy7zi5f","content":"<blockquote>\n<p>我的mysql版本 MYSQL V5.7.9，旧版本请使用：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UPDATE mysql.user SET Password=PASSWORD(&apos;新密码&apos;) WHERE User=&apos;root&apos;;</div></pre></td></tr></table></figure>\n<p>###Mac OS X - 重置 MySQL Root密码<br>密码太多记不住？？你是否忘记了Mac OS 的MySQL的root密码? 通过以下4步就可重新设置新密码：</p>\n<p>#####1.  停止 mysql server.<br> 通常是在 ‘系统偏好设置’ &gt; MySQL &gt; ‘Stop MySQL Server’</p>\n<p>#####2.  打开终端，输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</div></pre></td></tr></table></figure></p>\n<p>#####3.  打开另一个新终端，输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /usr/local/mysql/bin/mysql -u root</div><div class=\"line\"></div><div class=\"line\">  UPDATE mysql.user SET authentication_string=PASSWORD(&apos;你的新密码&apos;) WHERE User=&apos;root&apos;;</div><div class=\"line\"></div><div class=\"line\">  FLUSH PRIVILEGES;</div><div class=\"line\"></div><div class=\"line\">  exit</div></pre></td></tr></table></figure>\n<p>#####4.  重启MySQL.<br>好了，这样就完成了</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>我的mysql版本 MYSQL V5.7.9，旧版本请使用：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">UPDATE mysql.user SET Password=PASSWORD(&apos;新密码&apos;) WHERE User=&apos;root&apos;;</div></pre></td></tr></table></figure>\n<p>###Mac OS X - 重置 MySQL Root密码<br>密码太多记不住？？你是否忘记了Mac OS 的MySQL的root密码? 通过以下4步就可重新设置新密码：</p>\n<p>#####1.  停止 mysql server.<br> 通常是在 ‘系统偏好设置’ &gt; MySQL &gt; ‘Stop MySQL Server’</p>\n<p>#####2.  打开终端，输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</div></pre></td></tr></table></figure></p>\n<p>#####3.  打开另一个新终端，输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /usr/local/mysql/bin/mysql -u root</div><div class=\"line\"></div><div class=\"line\">  UPDATE mysql.user SET authentication_string=PASSWORD(&apos;你的新密码&apos;) WHERE User=&apos;root&apos;;</div><div class=\"line\"></div><div class=\"line\">  FLUSH PRIVILEGES;</div><div class=\"line\"></div><div class=\"line\">  exit</div></pre></td></tr></table></figure>\n<p>#####4.  重启MySQL.<br>好了，这样就完成了</p>\n"},{"title":"Mac安装Hadoop2.8.0","copyright":true,"date":"2017-05-25T12:38:50.000Z","_content":"\n>前几天试了一下Hadoop，搜了大量网络资料，现在发现有的网络资料太旧了，今天重新写了个，比较简单。\n\n#安装及配置Hadoop\n##1.首先安装一下Hadoop\n\n```\nbrew install Hadoop\n```\n\n##2.配置Hadoop目录下的文件\n###1.core-site.xml文件\n\n```\n<configuration> <property> <name>fs.defaultFS</name> <value>hdfs://localhost:9000</value> </property> </configuration>\n```\n\n###2.hdfs-site.xml\n\n```\n<configuration> <property> <name>dfs.replication</name> <value>1</value> </property> </configuration>\n```\n\n###3.mapred-site.xml\n\n```\n<configuration> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> </configuration>\n```\n\nmapred-site.xml文件不存在，需要自己创建（可以复制一下mapred-site.xml.template文件再进行修改）\n\n###4.yarn-site.xml\n\n```\n<configuration>\n<property>\n    <name>yarn.nodemanager.aux-services</name>\n    <value>mapreduce_shuffle</value>\n</property>\n</configuration>\n```\n\n#2.运行Hadoop\n##1.进入Hadoop的目录，以mac系统为例目录为\n\n```\n/usr/local/Cellar/hadoop/2.8.0/libexec\n```\n然后格式化文件系统:\n\n```\n$ bin/hdfs namenode -format\n```\n\n##2.启动所有进程\n\n```\nsbin/start-all.sh\n```\n期间输入无数次密码，在此可以设置一下ssh免密码登录。\n\n##3.访问localhost:50070和localhost:8088测试是否正常。\n","source":"_posts/Mac安装Hadoop2-8-0.md","raw":"---\ntitle: Mac安装Hadoop2.8.0\ncopyright: true\ndate: 2017-05-25 20:38:50\ntags: Hadoop\n---\n\n>前几天试了一下Hadoop，搜了大量网络资料，现在发现有的网络资料太旧了，今天重新写了个，比较简单。\n\n#安装及配置Hadoop\n##1.首先安装一下Hadoop\n\n```\nbrew install Hadoop\n```\n\n##2.配置Hadoop目录下的文件\n###1.core-site.xml文件\n\n```\n<configuration> <property> <name>fs.defaultFS</name> <value>hdfs://localhost:9000</value> </property> </configuration>\n```\n\n###2.hdfs-site.xml\n\n```\n<configuration> <property> <name>dfs.replication</name> <value>1</value> </property> </configuration>\n```\n\n###3.mapred-site.xml\n\n```\n<configuration> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> </configuration>\n```\n\nmapred-site.xml文件不存在，需要自己创建（可以复制一下mapred-site.xml.template文件再进行修改）\n\n###4.yarn-site.xml\n\n```\n<configuration>\n<property>\n    <name>yarn.nodemanager.aux-services</name>\n    <value>mapreduce_shuffle</value>\n</property>\n</configuration>\n```\n\n#2.运行Hadoop\n##1.进入Hadoop的目录，以mac系统为例目录为\n\n```\n/usr/local/Cellar/hadoop/2.8.0/libexec\n```\n然后格式化文件系统:\n\n```\n$ bin/hdfs namenode -format\n```\n\n##2.启动所有进程\n\n```\nsbin/start-all.sh\n```\n期间输入无数次密码，在此可以设置一下ssh免密码登录。\n\n##3.访问localhost:50070和localhost:8088测试是否正常。\n","slug":"Mac安装Hadoop2-8-0","published":1,"updated":"2017-10-16T07:16:33.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk288000eq0fasic5tjex","content":"<blockquote>\n<p>前几天试了一下Hadoop，搜了大量网络资料，现在发现有的网络资料太旧了，今天重新写了个，比较简单。</p>\n</blockquote>\n<p>#安装及配置Hadoop</p>\n<p>##1.首先安装一下Hadoop</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install Hadoop</div></pre></td></tr></table></figure>\n<p>##2.配置Hadoop目录下的文件</p>\n<p>###1.core-site.xml文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://localhost:9000&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>###2.hdfs-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>###3.mapred-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>mapred-site.xml文件不存在，需要自己创建（可以复制一下mapred-site.xml.template文件再进行修改）</p>\n<p>###4.yarn-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">&lt;property&gt;</div><div class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class=\"line\">&lt;/property&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>#2.运行Hadoop</p>\n<p>##1.进入Hadoop的目录，以mac系统为例目录为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/Cellar/hadoop/2.8.0/libexec</div></pre></td></tr></table></figure>\n<p>然后格式化文件系统:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bin/hdfs namenode -format</div></pre></td></tr></table></figure>\n<p>##2.启动所有进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbin/start-all.sh</div></pre></td></tr></table></figure>\n<p>期间输入无数次密码，在此可以设置一下ssh免密码登录。</p>\n<p>##3.访问localhost:50070和localhost:8088测试是否正常。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>前几天试了一下Hadoop，搜了大量网络资料，现在发现有的网络资料太旧了，今天重新写了个，比较简单。</p>\n</blockquote>\n<p>#安装及配置Hadoop</p>\n<p>##1.首先安装一下Hadoop</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install Hadoop</div></pre></td></tr></table></figure>\n<p>##2.配置Hadoop目录下的文件</p>\n<p>###1.core-site.xml文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://localhost:9000&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>###2.hdfs-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>###3.mapred-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>mapred-site.xml文件不存在，需要自己创建（可以复制一下mapred-site.xml.template文件再进行修改）</p>\n<p>###4.yarn-site.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">&lt;property&gt;</div><div class=\"line\">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class=\"line\">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class=\"line\">&lt;/property&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<p>#2.运行Hadoop</p>\n<p>##1.进入Hadoop的目录，以mac系统为例目录为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/Cellar/hadoop/2.8.0/libexec</div></pre></td></tr></table></figure>\n<p>然后格式化文件系统:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bin/hdfs namenode -format</div></pre></td></tr></table></figure>\n<p>##2.启动所有进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sbin/start-all.sh</div></pre></td></tr></table></figure>\n<p>期间输入无数次密码，在此可以设置一下ssh免密码登录。</p>\n<p>##3.访问localhost:50070和localhost:8088测试是否正常。</p>\n"},{"title":"git养成记之一","date":"2017-05-25T08:56:45.000Z","copyright":true,"_content":"\n> 今天，简单了解了一下关于git分支的用法\n\n场景：由于项目需要，我们团队进行开发，各个成员完成各自的功能模块，但是在git上上传的时候非常乱，这个时候，我们需要用到分支branch，当然这个功能只是分支的一部分功能，还有很多功能后续我会再进行深度学习了解。\n\n\n\n## 1.首先\n\n找到团队的GitHub地址，把他克隆下来\n\n```shell\ngit clone https://xxxxxx.xxxx/xxxx(你的项目地址)\n```\n\n克隆完成之后，cd进入你的项目\n\n```shell\ncd 你的项目名称\n```\n然后，你开始开发你的功能了\n\n## 2.新建一个分支\n\n接下来，我们新建一个分支\n\n```shell\ngit branch <your branch name>(你的分支名)\n```\n\n然后，切换一下分支\n\n```shell\ngit checkout <your branch name>(你的分支名)\n```\n\n切换成功terminal输出如下\n\n```shell\nSwitched to branch <your branch name>(你的分支名)\n```\n\n我们`git status`一下，看一下改动的文件，红色的是你修改过的文件，\n\n然后执行`git add -f`，这时你再`git status`一下，是不是发现红色的文件都变成绿色了。\n\n然后运行\n\n```shell\ngit commit -m \"你的注释/可以写写改了啥功能，或者就是什么版本啊balabala\"\n```\n\n`commit`成功了控制台大概如下输出\n\n```powershell\n[experiment e465517] branch\n 1 file changed, 1 insertion(+)\n create mode 100644 hello/hello\n```\n\n最后，运行一下代码把你项目提交上去\n\n```\ngit push origin <your branch name>(你的分支名)\n```\n\n成功了大概terminal显示如下\n\n```shell\nCounting objects: 4, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (4/4), 311 bytes | 0 bytes/s, done.\nTotal 4 (delta 1), reused 0 (delta 0)\nTo https://git.coding.net/CodeTiger_/livec_news.git\n * [new branch]      experiment -> experiment\n```\n\n至此，就全部完成了，如有疑问或者文章存在任何错误，欢迎指正😆370555337@qq.com","source":"_posts/gitbranch.md","raw":"---\ntitle: git养成记之一\ndate: 2017-05-25 16:56:45\ntags: git\ncopyright: true\n---\n\n> 今天，简单了解了一下关于git分支的用法\n\n场景：由于项目需要，我们团队进行开发，各个成员完成各自的功能模块，但是在git上上传的时候非常乱，这个时候，我们需要用到分支branch，当然这个功能只是分支的一部分功能，还有很多功能后续我会再进行深度学习了解。\n\n\n\n## 1.首先\n\n找到团队的GitHub地址，把他克隆下来\n\n```shell\ngit clone https://xxxxxx.xxxx/xxxx(你的项目地址)\n```\n\n克隆完成之后，cd进入你的项目\n\n```shell\ncd 你的项目名称\n```\n然后，你开始开发你的功能了\n\n## 2.新建一个分支\n\n接下来，我们新建一个分支\n\n```shell\ngit branch <your branch name>(你的分支名)\n```\n\n然后，切换一下分支\n\n```shell\ngit checkout <your branch name>(你的分支名)\n```\n\n切换成功terminal输出如下\n\n```shell\nSwitched to branch <your branch name>(你的分支名)\n```\n\n我们`git status`一下，看一下改动的文件，红色的是你修改过的文件，\n\n然后执行`git add -f`，这时你再`git status`一下，是不是发现红色的文件都变成绿色了。\n\n然后运行\n\n```shell\ngit commit -m \"你的注释/可以写写改了啥功能，或者就是什么版本啊balabala\"\n```\n\n`commit`成功了控制台大概如下输出\n\n```powershell\n[experiment e465517] branch\n 1 file changed, 1 insertion(+)\n create mode 100644 hello/hello\n```\n\n最后，运行一下代码把你项目提交上去\n\n```\ngit push origin <your branch name>(你的分支名)\n```\n\n成功了大概terminal显示如下\n\n```shell\nCounting objects: 4, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (4/4), 311 bytes | 0 bytes/s, done.\nTotal 4 (delta 1), reused 0 (delta 0)\nTo https://git.coding.net/CodeTiger_/livec_news.git\n * [new branch]      experiment -> experiment\n```\n\n至此，就全部完成了，如有疑问或者文章存在任何错误，欢迎指正😆370555337@qq.com","slug":"gitbranch","published":1,"updated":"2017-10-16T07:16:33.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk289000gq0faavg1hg4d","content":"<blockquote>\n<p>今天，简单了解了一下关于git分支的用法</p>\n</blockquote>\n<p>场景：由于项目需要，我们团队进行开发，各个成员完成各自的功能模块，但是在git上上传的时候非常乱，这个时候，我们需要用到分支branch，当然这个功能只是分支的一部分功能，还有很多功能后续我会再进行深度学习了解。</p>\n<h2 id=\"1-首先\"><a href=\"#1-首先\" class=\"headerlink\" title=\"1.首先\"></a>1.首先</h2><p>找到团队的GitHub地址，把他克隆下来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://xxxxxx.xxxx/xxxx(你的项目地址)</div></pre></td></tr></table></figure>\n<p>克隆完成之后，cd进入你的项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd 你的项目名称</div></pre></td></tr></table></figure>\n<p>然后，你开始开发你的功能了</p>\n<h2 id=\"2-新建一个分支\"><a href=\"#2-新建一个分支\" class=\"headerlink\" title=\"2.新建一个分支\"></a>2.新建一个分支</h2><p>接下来，我们新建一个分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>然后，切换一下分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>切换成功terminal输出如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Switched to branch &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>我们<code>git status</code>一下，看一下改动的文件，红色的是你修改过的文件，</p>\n<p>然后执行<code>git add -f</code>，这时你再<code>git status</code>一下，是不是发现红色的文件都变成绿色了。</p>\n<p>然后运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m \"你的注释/可以写写改了啥功能，或者就是什么版本啊balabala\"</div></pre></td></tr></table></figure>\n<p><code>commit</code>成功了控制台大概如下输出</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[experiment e465517] branch</div><div class=\"line\"> <span class=\"number\">1</span> file changed, <span class=\"number\">1</span> insertion(+)</div><div class=\"line\"> create mode <span class=\"number\">100644</span> hello/hello</div></pre></td></tr></table></figure>\n<p>最后，运行一下代码把你项目提交上去</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>成功了大概terminal显示如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 4, done.</div><div class=\"line\">Delta compression using up to 4 threads.</div><div class=\"line\">Compressing objects: 100% (2/2), done.</div><div class=\"line\">Writing objects: 100% (4/4), 311 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 4 (delta 1), reused 0 (delta 0)</div><div class=\"line\">To https://git.coding.net/CodeTiger_/livec_news.git</div><div class=\"line\"> * [new branch]      experiment -&gt; experiment</div></pre></td></tr></table></figure>\n<p>至此，就全部完成了，如有疑问或者文章存在任何错误，欢迎指正😆370555337@qq.com</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>今天，简单了解了一下关于git分支的用法</p>\n</blockquote>\n<p>场景：由于项目需要，我们团队进行开发，各个成员完成各自的功能模块，但是在git上上传的时候非常乱，这个时候，我们需要用到分支branch，当然这个功能只是分支的一部分功能，还有很多功能后续我会再进行深度学习了解。</p>\n<h2 id=\"1-首先\"><a href=\"#1-首先\" class=\"headerlink\" title=\"1.首先\"></a>1.首先</h2><p>找到团队的GitHub地址，把他克隆下来</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://xxxxxx.xxxx/xxxx(你的项目地址)</div></pre></td></tr></table></figure>\n<p>克隆完成之后，cd进入你的项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd 你的项目名称</div></pre></td></tr></table></figure>\n<p>然后，你开始开发你的功能了</p>\n<h2 id=\"2-新建一个分支\"><a href=\"#2-新建一个分支\" class=\"headerlink\" title=\"2.新建一个分支\"></a>2.新建一个分支</h2><p>接下来，我们新建一个分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>然后，切换一下分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>切换成功terminal输出如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Switched to branch &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>我们<code>git status</code>一下，看一下改动的文件，红色的是你修改过的文件，</p>\n<p>然后执行<code>git add -f</code>，这时你再<code>git status</code>一下，是不是发现红色的文件都变成绿色了。</p>\n<p>然后运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m \"你的注释/可以写写改了啥功能，或者就是什么版本啊balabala\"</div></pre></td></tr></table></figure>\n<p><code>commit</code>成功了控制台大概如下输出</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[experiment e465517] branch</div><div class=\"line\"> <span class=\"number\">1</span> file changed, <span class=\"number\">1</span> insertion(+)</div><div class=\"line\"> create mode <span class=\"number\">100644</span> hello/hello</div></pre></td></tr></table></figure>\n<p>最后，运行一下代码把你项目提交上去</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin &lt;your branch name&gt;(你的分支名)</div></pre></td></tr></table></figure>\n<p>成功了大概terminal显示如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Counting objects: 4, done.</div><div class=\"line\">Delta compression using up to 4 threads.</div><div class=\"line\">Compressing objects: 100% (2/2), done.</div><div class=\"line\">Writing objects: 100% (4/4), 311 bytes | 0 bytes/s, done.</div><div class=\"line\">Total 4 (delta 1), reused 0 (delta 0)</div><div class=\"line\">To https://git.coding.net/CodeTiger_/livec_news.git</div><div class=\"line\"> * [new branch]      experiment -&gt; experiment</div></pre></td></tr></table></figure>\n<p>至此，就全部完成了，如有疑问或者文章存在任何错误，欢迎指正😆370555337@qq.com</p>\n"},{"title":"git养成记之二","copyright":true,"date":"2017-05-27T05:03:09.000Z","_content":"\n> 前几天发现，`-f`是`force`强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容，所以说`git push -f`是一个比较可怕的命令，和`rm -rf`一样可怕😨 \n\n### 但是如果你不强推，可能就出现了这样的错误\n\n`error:failed to push some refs to …`\n\n当要push代码到git时，出现提示：\n\n```Shell\nerror:failed to push some refs to ...\n\nDealing with “non-fast-forward” errors\n\nFrom time to time you may encounter this error while pushing:\n\n$ git push origin master \n\nTo ../remote/ \n\n ! [rejected]        master -> master (non-fast forward) \n\nerror: failed to push some refs to '../remote/' \n\nTo prevent you from losing history, non-fast-forward updates were rejected\n\nMerge the remote changes before pushing again.  See the 'non-fast forward'\n\nsection of 'git push --help' for details.\n```\n\n问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。\n\n强推是解决办法之一，不过强推会覆盖之前的东西。。。至于覆盖了能不能找回，我还没有具体研究。\n\n另外还有一个办法，先把git的东西fetch到你本地然后merge后再push。\n\n```Shell\ngit fetch\ngit merge\n```\n\n这2句命令等价于\n\n```Shell\ngit pull\t\n```\n\n可是，这时候又出现了如下的问题：\n\n上面出现的 [branch \"master\"]是需要明确(.git/config)如下的内容\n\n```shell\n\n[branch \"master\"]\n\n    remote = origin\n\n    merge = refs/heads/master\n```\n\n这等于告诉git2件事:\n\n1，当你处于`master branch`, 默认的`remote`就是`origin`。\n\n2，当你在`master branch`上使用`git pull`时，没有指定`remote`和`branch`，那么`git`就会采用默认的`remote`（也就是`origin`）来`merge`在`master branch`上所有的改变\n\n如果不想或者不会编辑`config`文件的话，可以输入如下命令行：\n\n```Shell\n$ git config branch.master.remote origin \n\n$ git config branch.master.merge refs/heads/master \n```\n\n之后再重新`git pull`下。最后`git push`你的代码吧。\n\n总结：你的本地代码和远程仓库有冲突的时候，就会提示以上错误，说白了你就是要解决这些冲突，这样才能`push`到远程仓库当中去。如有疑问，欢迎留言交流。","source":"_posts/git养成记之二.md","raw":"---\ntitle: git养成记之二\ncopyright: true\ndate: 2017-05-27 13:03:09\ntags: git\n---\n\n> 前几天发现，`-f`是`force`强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容，所以说`git push -f`是一个比较可怕的命令，和`rm -rf`一样可怕😨 \n\n### 但是如果你不强推，可能就出现了这样的错误\n\n`error:failed to push some refs to …`\n\n当要push代码到git时，出现提示：\n\n```Shell\nerror:failed to push some refs to ...\n\nDealing with “non-fast-forward” errors\n\nFrom time to time you may encounter this error while pushing:\n\n$ git push origin master \n\nTo ../remote/ \n\n ! [rejected]        master -> master (non-fast forward) \n\nerror: failed to push some refs to '../remote/' \n\nTo prevent you from losing history, non-fast-forward updates were rejected\n\nMerge the remote changes before pushing again.  See the 'non-fast forward'\n\nsection of 'git push --help' for details.\n```\n\n问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。\n\n强推是解决办法之一，不过强推会覆盖之前的东西。。。至于覆盖了能不能找回，我还没有具体研究。\n\n另外还有一个办法，先把git的东西fetch到你本地然后merge后再push。\n\n```Shell\ngit fetch\ngit merge\n```\n\n这2句命令等价于\n\n```Shell\ngit pull\t\n```\n\n可是，这时候又出现了如下的问题：\n\n上面出现的 [branch \"master\"]是需要明确(.git/config)如下的内容\n\n```shell\n\n[branch \"master\"]\n\n    remote = origin\n\n    merge = refs/heads/master\n```\n\n这等于告诉git2件事:\n\n1，当你处于`master branch`, 默认的`remote`就是`origin`。\n\n2，当你在`master branch`上使用`git pull`时，没有指定`remote`和`branch`，那么`git`就会采用默认的`remote`（也就是`origin`）来`merge`在`master branch`上所有的改变\n\n如果不想或者不会编辑`config`文件的话，可以输入如下命令行：\n\n```Shell\n$ git config branch.master.remote origin \n\n$ git config branch.master.merge refs/heads/master \n```\n\n之后再重新`git pull`下。最后`git push`你的代码吧。\n\n总结：你的本地代码和远程仓库有冲突的时候，就会提示以上错误，说白了你就是要解决这些冲突，这样才能`push`到远程仓库当中去。如有疑问，欢迎留言交流。","slug":"git养成记之二","published":1,"updated":"2017-10-16T07:16:33.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28a000iq0fam4zh3zy1","content":"<blockquote>\n<p>前几天发现，<code>-f</code>是<code>force</code>强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容，所以说<code>git push -f</code>是一个比较可怕的命令，和<code>rm -rf</code>一样可怕😨 </p>\n</blockquote>\n<h3 id=\"但是如果你不强推，可能就出现了这样的错误\"><a href=\"#但是如果你不强推，可能就出现了这样的错误\" class=\"headerlink\" title=\"但是如果你不强推，可能就出现了这样的错误\"></a>但是如果你不强推，可能就出现了这样的错误</h3><p><code>error:failed to push some refs to …</code></p>\n<p>当要push代码到git时，出现提示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">error:failed to push some refs to ...</div><div class=\"line\"></div><div class=\"line\">Dealing with “non-fast-forward” errors</div><div class=\"line\"></div><div class=\"line\">From time to time you may encounter this error while pushing:</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">$</span> git push origin master </div><div class=\"line\"></div><div class=\"line\">To ../remote/ </div><div class=\"line\"></div><div class=\"line\"> ! [rejected]        master -&gt; master (non-fast forward) </div><div class=\"line\"></div><div class=\"line\">error: failed to push some refs to '../remote/' </div><div class=\"line\"></div><div class=\"line\">To prevent you from losing history, non-fast-forward updates were rejected</div><div class=\"line\"></div><div class=\"line\">Merge the remote changes before pushing again.  See the 'non-fast forward'</div><div class=\"line\"></div><div class=\"line\">section of 'git push --help' for details.</div></pre></td></tr></table></figure>\n<p>问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。</p>\n<p>强推是解决办法之一，不过强推会覆盖之前的东西。。。至于覆盖了能不能找回，我还没有具体研究。</p>\n<p>另外还有一个办法，先把git的东西fetch到你本地然后merge后再push。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git fetch</div><div class=\"line\">git merge</div></pre></td></tr></table></figure>\n<p>这2句命令等价于</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull</div></pre></td></tr></table></figure>\n<p>可是，这时候又出现了如下的问题：</p>\n<p>上面出现的 [branch “master”]是需要明确(.git/config)如下的内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[branch \"master\"]</div><div class=\"line\"></div><div class=\"line\">    remote = origin</div><div class=\"line\"></div><div class=\"line\">    merge = refs/heads/master</div></pre></td></tr></table></figure>\n<p>这等于告诉git2件事:</p>\n<p>1，当你处于<code>master branch</code>, 默认的<code>remote</code>就是<code>origin</code>。</p>\n<p>2，当你在<code>master branch</code>上使用<code>git pull</code>时，没有指定<code>remote</code>和<code>branch</code>，那么<code>git</code>就会采用默认的<code>remote</code>（也就是<code>origin</code>）来<code>merge</code>在<code>master branch</code>上所有的改变</p>\n<p>如果不想或者不会编辑<code>config</code>文件的话，可以输入如下命令行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git config branch.master.remote origin </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">$</span> git config branch.master.merge refs/heads/master</div></pre></td></tr></table></figure>\n<p>之后再重新<code>git pull</code>下。最后<code>git push</code>你的代码吧。</p>\n<p>总结：你的本地代码和远程仓库有冲突的时候，就会提示以上错误，说白了你就是要解决这些冲突，这样才能<code>push</code>到远程仓库当中去。如有疑问，欢迎留言交流。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>前几天发现，<code>-f</code>是<code>force</code>强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容，所以说<code>git push -f</code>是一个比较可怕的命令，和<code>rm -rf</code>一样可怕😨 </p>\n</blockquote>\n<h3 id=\"但是如果你不强推，可能就出现了这样的错误\"><a href=\"#但是如果你不强推，可能就出现了这样的错误\" class=\"headerlink\" title=\"但是如果你不强推，可能就出现了这样的错误\"></a>但是如果你不强推，可能就出现了这样的错误</h3><p><code>error:failed to push some refs to …</code></p>\n<p>当要push代码到git时，出现提示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">error:failed to push some refs to ...</div><div class=\"line\"></div><div class=\"line\">Dealing with “non-fast-forward” errors</div><div class=\"line\"></div><div class=\"line\">From time to time you may encounter this error while pushing:</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">$</span> git push origin master </div><div class=\"line\"></div><div class=\"line\">To ../remote/ </div><div class=\"line\"></div><div class=\"line\"> ! [rejected]        master -&gt; master (non-fast forward) </div><div class=\"line\"></div><div class=\"line\">error: failed to push some refs to '../remote/' </div><div class=\"line\"></div><div class=\"line\">To prevent you from losing history, non-fast-forward updates were rejected</div><div class=\"line\"></div><div class=\"line\">Merge the remote changes before pushing again.  See the 'non-fast forward'</div><div class=\"line\"></div><div class=\"line\">section of 'git push --help' for details.</div></pre></td></tr></table></figure>\n<p>问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。</p>\n<p>强推是解决办法之一，不过强推会覆盖之前的东西。。。至于覆盖了能不能找回，我还没有具体研究。</p>\n<p>另外还有一个办法，先把git的东西fetch到你本地然后merge后再push。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git fetch</div><div class=\"line\">git merge</div></pre></td></tr></table></figure>\n<p>这2句命令等价于</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git pull</div></pre></td></tr></table></figure>\n<p>可是，这时候又出现了如下的问题：</p>\n<p>上面出现的 [branch “master”]是需要明确(.git/config)如下的内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[branch \"master\"]</div><div class=\"line\"></div><div class=\"line\">    remote = origin</div><div class=\"line\"></div><div class=\"line\">    merge = refs/heads/master</div></pre></td></tr></table></figure>\n<p>这等于告诉git2件事:</p>\n<p>1，当你处于<code>master branch</code>, 默认的<code>remote</code>就是<code>origin</code>。</p>\n<p>2，当你在<code>master branch</code>上使用<code>git pull</code>时，没有指定<code>remote</code>和<code>branch</code>，那么<code>git</code>就会采用默认的<code>remote</code>（也就是<code>origin</code>）来<code>merge</code>在<code>master branch</code>上所有的改变</p>\n<p>如果不想或者不会编辑<code>config</code>文件的话，可以输入如下命令行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> git config branch.master.remote origin </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">$</span> git config branch.master.merge refs/heads/master</div></pre></td></tr></table></figure>\n<p>之后再重新<code>git pull</code>下。最后<code>git push</code>你的代码吧。</p>\n<p>总结：你的本地代码和远程仓库有冲突的时候，就会提示以上错误，说白了你就是要解决这些冲突，这样才能<code>push</code>到远程仓库当中去。如有疑问，欢迎留言交流。</p>\n"},{"title":"正方自动测评javascript脚本","copyright":true,"date":"2017-05-26T07:13:01.000Z","_content":">又是一年期末季，除了麻烦的期末考试还有没用的教学评价。教学评价太麻烦，就搞了个脚本来节省工作。\n\n这是直接打最高分给老师的，除了一个较好，其他都是好。如果你需要给差评，点完脚本后自己改一下。\n\n脚本是是用js写的，拖动下边的链接到书签栏就行了，或者直接添加书签。点击一次可以给一个老师完成评价，所有评价结束以后自己提交。\n\n拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='完全认同'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='相对认同'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\">教学评价助手</a>\n   拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='好'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='较好'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\">教师评价助手</a>\n\n截图：\n![Markdown](http://i1.piimg.com/1949/f33d22ed8a39beb1.png)\n![Markdown](http://i1.piimg.com/1949/6df5a037ba269ac4.png)\n其他学校要用只要修改一下赋值就行。自己查看一下网页元素，然后看一下你们学校的赋值是什么？好? 良好？自己再改一下书签就行了。","source":"_posts/hello-world.md","raw":"---\ntitle: 正方自动测评javascript脚本\ncopyright: true\ndate: 2017-05-26 15:13:01\ntags: javascript\n---\n>又是一年期末季，除了麻烦的期末考试还有没用的教学评价。教学评价太麻烦，就搞了个脚本来节省工作。\n\n这是直接打最高分给老师的，除了一个较好，其他都是好。如果你需要给差评，点完脚本后自己改一下。\n\n脚本是是用js写的，拖动下边的链接到书签栏就行了，或者直接添加书签。点击一次可以给一个老师完成评价，所有评价结束以后自己提交。\n\n拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='完全认同'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='相对认同'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\">教学评价助手</a>\n   拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='好'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='较好'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\">教师评价助手</a>\n\n截图：\n![Markdown](http://i1.piimg.com/1949/f33d22ed8a39beb1.png)\n![Markdown](http://i1.piimg.com/1949/6df5a037ba269ac4.png)\n其他学校要用只要修改一下赋值就行。自己查看一下网页元素，然后看一下你们学校的赋值是什么？好? 良好？自己再改一下书签就行了。","slug":"hello-world","published":1,"updated":"2017-10-16T07:16:33.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28b000kq0faeqwta8wy","content":"<blockquote>\n<p>又是一年期末季，除了麻烦的期末考试还有没用的教学评价。教学评价太麻烦，就搞了个脚本来节省工作。</p>\n</blockquote>\n<p>这是直接打最高分给老师的，除了一个较好，其他都是好。如果你需要给差评，点完脚本后自己改一下。</p>\n<p>脚本是是用js写的，拖动下边的链接到书签栏就行了，或者直接添加书签。点击一次可以给一个老师完成评价，所有评价结束以后自己提交。</p>\n<p>拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='完全认同'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='相对认同'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\" target=\"_blank\" rel=\"external\">教学评价助手</a><br>   拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='好'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='较好'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\" target=\"_blank\" rel=\"external\">教师评价助手</a></p>\n<p>截图：<br><img src=\"http://i1.piimg.com/1949/f33d22ed8a39beb1.png\" alt=\"Markdown\"><br><img src=\"http://i1.piimg.com/1949/6df5a037ba269ac4.png\" alt=\"Markdown\"><br>其他学校要用只要修改一下赋值就行。自己查看一下网页元素，然后看一下你们学校的赋值是什么？好? 良好？自己再改一下书签就行了。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>又是一年期末季，除了麻烦的期末考试还有没用的教学评价。教学评价太麻烦，就搞了个脚本来节省工作。</p>\n</blockquote>\n<p>这是直接打最高分给老师的，除了一个较好，其他都是好。如果你需要给差评，点完脚本后自己改一下。</p>\n<p>脚本是是用js写的，拖动下边的链接到书签栏就行了，或者直接添加书签。点击一次可以给一个老师完成评价，所有评价结束以后自己提交。</p>\n<p>拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='完全认同'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='相对认同'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\" target=\"_blank\" rel=\"external\">教学评价助手</a><br>   拖动我：<a href=\"javascript:(function(){var obj=$('iframeautoheight').contentDocument.getElementsByTagName('select'); for(i=1;i<obj.length;i++){obj[i].value='好'; } var rid=Math.max(1, Math.floor(Math.random()*obj.length)); obj[rid].value='较好'; $('iframeautoheight').contentDocument.getElementById('Button1').click();})()\" class=\"button button-small button-orange\" onclick=\"alert('把我拖动到书签栏评测的时候点我就可以了');return false;\" target=\"_blank\" rel=\"external\">教师评价助手</a></p>\n<p>截图：<br><img src=\"http://i1.piimg.com/1949/f33d22ed8a39beb1.png\" alt=\"Markdown\"><br><img src=\"http://i1.piimg.com/1949/6df5a037ba269ac4.png\" alt=\"Markdown\"><br>其他学校要用只要修改一下赋值就行。自己查看一下网页元素，然后看一下你们学校的赋值是什么？好? 良好？自己再改一下书签就行了。</p>\n"},{"title":"hexo+next搭建博客相册教程","copyright":true,"date":"2017-05-26T06:59:14.000Z","_content":"\n\n\n1.在git上输入` hexo new page “photos”`,创建`photos`页面，之后在sourse文件夹下能够找到`photos`文件夹，在`index.md`里添加`type: photos`.\n2.进入`theme`里的`next`下的`config`,在`menu`菜单下添加上`photos`页。\n3.如果语言选择是`zh-hans`的话，记得在l`anguanges`里把`photos`添加进去，以确保网页显示的菜单为`photos`.\n4.下面是重点，所有新建页面都可以照葫芦画瓢，`next`主题的整个网页布局都存在`layout`文件夹下，可以找到`layout`文件夹下有`layout.swig`和page.swig两个文件，`layout.swig`写的是整个页面的整体布局，`page.swig`是针对不同页面的布局。如果我们想搭建相册页，可以把自己写的相册页的代码放到`page.swig`,`page.swig`文件里div为post里有队不同页面的不同布局有分类，我们可以\n```javascript\n{% if page.type === “photos” %}\n```\n,将相册页的代码显示在这里面，用到的js和css别忘了引用，存的时候用绝对路径就可以了。还有一种方法就是把代码直接放到photos文件夹下的`index.md`里，但是这个方法的js和css布局容易出问题，两种方法，相册页存储的div不同，容易引起页面混乱。","source":"_posts/hexo-next搭建博客相册教程.md","raw":"---\ntitle: hexo+next搭建博客相册教程\ncopyright: true\ndate: 2017-05-26 14:59:14\ntags: hexo_blog\n---\n\n\n\n1.在git上输入` hexo new page “photos”`,创建`photos`页面，之后在sourse文件夹下能够找到`photos`文件夹，在`index.md`里添加`type: photos`.\n2.进入`theme`里的`next`下的`config`,在`menu`菜单下添加上`photos`页。\n3.如果语言选择是`zh-hans`的话，记得在l`anguanges`里把`photos`添加进去，以确保网页显示的菜单为`photos`.\n4.下面是重点，所有新建页面都可以照葫芦画瓢，`next`主题的整个网页布局都存在`layout`文件夹下，可以找到`layout`文件夹下有`layout.swig`和page.swig两个文件，`layout.swig`写的是整个页面的整体布局，`page.swig`是针对不同页面的布局。如果我们想搭建相册页，可以把自己写的相册页的代码放到`page.swig`,`page.swig`文件里div为post里有队不同页面的不同布局有分类，我们可以\n```javascript\n{% if page.type === “photos” %}\n```\n,将相册页的代码显示在这里面，用到的js和css别忘了引用，存的时候用绝对路径就可以了。还有一种方法就是把代码直接放到photos文件夹下的`index.md`里，但是这个方法的js和css布局容易出问题，两种方法，相册页存储的div不同，容易引起页面混乱。","slug":"hexo-next搭建博客相册教程","published":1,"updated":"2017-10-16T07:16:33.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28c000mq0fa6poi2zd7","content":"<p>1.在git上输入<code>hexo new page “photos”</code>,创建<code>photos</code>页面，之后在sourse文件夹下能够找到<code>photos</code>文件夹，在<code>index.md</code>里添加<code>type: photos</code>.<br>2.进入<code>theme</code>里的<code>next</code>下的<code>config</code>,在<code>menu</code>菜单下添加上<code>photos</code>页。<br>3.如果语言选择是<code>zh-hans</code>的话，记得在l<code>anguanges</code>里把<code>photos</code>添加进去，以确保网页显示的菜单为<code>photos</code>.<br>4.下面是重点，所有新建页面都可以照葫芦画瓢，<code>next</code>主题的整个网页布局都存在<code>layout</code>文件夹下，可以找到<code>layout</code>文件夹下有<code>layout.swig</code>和page.swig两个文件，<code>layout.swig</code>写的是整个页面的整体布局，<code>page.swig</code>是针对不同页面的布局。如果我们想搭建相册页，可以把自己写的相册页的代码放到<code>page.swig</code>,<code>page.swig</code>文件里div为post里有队不同页面的不同布局有分类，我们可以<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% <span class=\"keyword\">if</span> page.type === “photos” %&#125;</div></pre></td></tr></table></figure></p>\n<p>,将相册页的代码显示在这里面，用到的js和css别忘了引用，存的时候用绝对路径就可以了。还有一种方法就是把代码直接放到photos文件夹下的<code>index.md</code>里，但是这个方法的js和css布局容易出问题，两种方法，相册页存储的div不同，容易引起页面混乱。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.在git上输入<code>hexo new page “photos”</code>,创建<code>photos</code>页面，之后在sourse文件夹下能够找到<code>photos</code>文件夹，在<code>index.md</code>里添加<code>type: photos</code>.<br>2.进入<code>theme</code>里的<code>next</code>下的<code>config</code>,在<code>menu</code>菜单下添加上<code>photos</code>页。<br>3.如果语言选择是<code>zh-hans</code>的话，记得在l<code>anguanges</code>里把<code>photos</code>添加进去，以确保网页显示的菜单为<code>photos</code>.<br>4.下面是重点，所有新建页面都可以照葫芦画瓢，<code>next</code>主题的整个网页布局都存在<code>layout</code>文件夹下，可以找到<code>layout</code>文件夹下有<code>layout.swig</code>和page.swig两个文件，<code>layout.swig</code>写的是整个页面的整体布局，<code>page.swig</code>是针对不同页面的布局。如果我们想搭建相册页，可以把自己写的相册页的代码放到<code>page.swig</code>,<code>page.swig</code>文件里div为post里有队不同页面的不同布局有分类，我们可以<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% <span class=\"keyword\">if</span> page.type === “photos” %&#125;</div></pre></td></tr></table></figure></p>\n<p>,将相册页的代码显示在这里面，用到的js和css别忘了引用，存的时候用绝对路径就可以了。还有一种方法就是把代码直接放到photos文件夹下的<code>index.md</code>里，但是这个方法的js和css布局容易出问题，两种方法，相册页存储的div不同，容易引起页面混乱。</p>\n"},{"title":"js闭包","copyright":true,"date":"2017-06-04T13:07:05.000Z","_content":"\n# JavaScript 闭包\n\n------\n\nJavaScript 变量可以是局部变量或全局变量。\n\n私有变量可以用到闭包。\n\n------\n\n<!--more-->\n\n## 全局变量\n\n函数可以访问\b由函数内部定义的变量，如：\n\n## 实例\n\n```javascript\nfunction myFunction() {\n    var a = 4;\n    return a * a;\n}\n```\n\n\n\n函数也可以访问函数外部定义的变量，如：\n\n## 实例\n\n```javascript\nvar a = 4;\nfunction myFunction() {\n​    return a * a;\n}\n```\n\n后面一个实例中， **a** 是一个 **全局** 变量。 \n\n在web页面中全局变量属于 window 对象。\n\n全局变量可应用于页面上的所有脚本。\n\n在第一个实例中， **a** 是一个 **局部** 变量。\n\n局部变量只能用于定义它函数内部。对于其他的函数或脚本代码是不可用的。\n\n全局和局部变量即便名称相同，它们也是两个不同的变量。修改其中一个，不会影响另一个的值。 \n\n| ![Note](http://www.runoob.com/images/lamp.jpg) | 变量声明时如果不使用 **var** 关键字，那么它就是一个全局变量，即便它在函数内定义。 |\n| ---------------------------------------- | ---------------------------------------- |\n|                                          |                                          |\n\n------\n\n## 变量生命周期\n\n全局变量的作用域是全局性的，即在整个JavaScript程序中，全局变量处处都在。\n\n而在函数内部声明的变量，只在函数内部起作用。这些变量是局部变量，作用域是局部性的；函数的参数也是局部性的，只在函数内部起作用。\n\n------\n\n## 计数器困境\n\n设想下如果你想统计一些数值，且该计数器在所有函数中都是可用的。\n\n你可以使用全局变量，函数设置计数器递增：\n\n## 实例\n\n```javascript\nvar counter = 0;\nfunction add() {\n   return counter += 1;\n}\nadd();\nadd();\nadd();\n// 计数器现在为 3\n```\n\n计数器数值在执行 add() 函数时发生变化。\n\n但问题来了，页面上的任何脚本都能改变计数器，即便没有调用 add() 函数。\n\n如果我在函数内声明计数器，如果没有调用函数将无法修改计数器的值：\n\n## 实例\n\n```javascript\nfunction add() {\n​    var counter = 0;\n​    counter += 1;\n}\nadd();\nadd();\nadd();\n// 本意是想输出 3, 但事与愿违，输出的都是 1 !\n```\n\n以上代码将无法正确输出，每次我调用 add() 函数，计数器都会设置为 1。\n\n**JavaScript 内嵌函数可以解决该问题。**\n\n------\n\n## JavaScript 内嵌函数\n\n所有函数都能访问全局变量。   \n\n实际上，在 JavaScript 中，所有函数都能访问它们上一层的作用域。\n\nJavaScript 支持嵌套函数。嵌套函数可以访问上一层的函数变量。 \n\n该实例中，内嵌函数 **plus()** 可以访问父函数的 **counter** 变量：\n\n## 实例\n\n```javascript\nfunction add() {\n​    var counter = 0;\n​    function plus() {counter += 1;}\n​    plus();    \n​    return counter; \n}\n```\n\n如果我们能在外部访问  **plus()** 函数，这样就能解决计数器的困境。\n\n我们同样需要确保 **counter = 0** 只执行一次。\n\n**我们需要闭包。**\n\n------\n\n## JavaScript 闭包\n\n还记得函数自我调用吗？该函数会做什么？\n\n## 实例\n\n```javascript\nvar add = (function () {\n​    var counter = 0;\n​    return function () {return counter += 1;}\n})();\nadd();\nadd();\nadd();\n// 计数器为 3\n```\n\n## 实例解析\n\n变量 **add** 指定了函数自我调用的返回字值。 \n\n自我调用函数只执行一次。设置计数器为 0。并返回函数表达式。\n\nadd变量可以作为一个函数使用。非常棒的部分是它可以访问函数上一层作用域的计数器。 \n\n这个叫作 JavaScript **闭包。**它使得函数拥有私有变量变成可能。\n\n计数器受匿名函数的作用域保护，只能通过 add 方法修改。\n\n| ![Note](http://www.runoob.com/images/lamp.jpg) | 闭包是可访问上一层函数作用域里变量的函数，即便上一层函数已经关闭。 |\n| ---------------------------------------- | --------------------------------- |\n|                                          |                                   |","source":"_posts/js闭包.md","raw":"---\ntitle: js闭包\ncopyright: true\ndate: 2017-06-04 21:07:05\ntags: javascript\n---\n\n# JavaScript 闭包\n\n------\n\nJavaScript 变量可以是局部变量或全局变量。\n\n私有变量可以用到闭包。\n\n------\n\n<!--more-->\n\n## 全局变量\n\n函数可以访问\b由函数内部定义的变量，如：\n\n## 实例\n\n```javascript\nfunction myFunction() {\n    var a = 4;\n    return a * a;\n}\n```\n\n\n\n函数也可以访问函数外部定义的变量，如：\n\n## 实例\n\n```javascript\nvar a = 4;\nfunction myFunction() {\n​    return a * a;\n}\n```\n\n后面一个实例中， **a** 是一个 **全局** 变量。 \n\n在web页面中全局变量属于 window 对象。\n\n全局变量可应用于页面上的所有脚本。\n\n在第一个实例中， **a** 是一个 **局部** 变量。\n\n局部变量只能用于定义它函数内部。对于其他的函数或脚本代码是不可用的。\n\n全局和局部变量即便名称相同，它们也是两个不同的变量。修改其中一个，不会影响另一个的值。 \n\n| ![Note](http://www.runoob.com/images/lamp.jpg) | 变量声明时如果不使用 **var** 关键字，那么它就是一个全局变量，即便它在函数内定义。 |\n| ---------------------------------------- | ---------------------------------------- |\n|                                          |                                          |\n\n------\n\n## 变量生命周期\n\n全局变量的作用域是全局性的，即在整个JavaScript程序中，全局变量处处都在。\n\n而在函数内部声明的变量，只在函数内部起作用。这些变量是局部变量，作用域是局部性的；函数的参数也是局部性的，只在函数内部起作用。\n\n------\n\n## 计数器困境\n\n设想下如果你想统计一些数值，且该计数器在所有函数中都是可用的。\n\n你可以使用全局变量，函数设置计数器递增：\n\n## 实例\n\n```javascript\nvar counter = 0;\nfunction add() {\n   return counter += 1;\n}\nadd();\nadd();\nadd();\n// 计数器现在为 3\n```\n\n计数器数值在执行 add() 函数时发生变化。\n\n但问题来了，页面上的任何脚本都能改变计数器，即便没有调用 add() 函数。\n\n如果我在函数内声明计数器，如果没有调用函数将无法修改计数器的值：\n\n## 实例\n\n```javascript\nfunction add() {\n​    var counter = 0;\n​    counter += 1;\n}\nadd();\nadd();\nadd();\n// 本意是想输出 3, 但事与愿违，输出的都是 1 !\n```\n\n以上代码将无法正确输出，每次我调用 add() 函数，计数器都会设置为 1。\n\n**JavaScript 内嵌函数可以解决该问题。**\n\n------\n\n## JavaScript 内嵌函数\n\n所有函数都能访问全局变量。   \n\n实际上，在 JavaScript 中，所有函数都能访问它们上一层的作用域。\n\nJavaScript 支持嵌套函数。嵌套函数可以访问上一层的函数变量。 \n\n该实例中，内嵌函数 **plus()** 可以访问父函数的 **counter** 变量：\n\n## 实例\n\n```javascript\nfunction add() {\n​    var counter = 0;\n​    function plus() {counter += 1;}\n​    plus();    \n​    return counter; \n}\n```\n\n如果我们能在外部访问  **plus()** 函数，这样就能解决计数器的困境。\n\n我们同样需要确保 **counter = 0** 只执行一次。\n\n**我们需要闭包。**\n\n------\n\n## JavaScript 闭包\n\n还记得函数自我调用吗？该函数会做什么？\n\n## 实例\n\n```javascript\nvar add = (function () {\n​    var counter = 0;\n​    return function () {return counter += 1;}\n})();\nadd();\nadd();\nadd();\n// 计数器为 3\n```\n\n## 实例解析\n\n变量 **add** 指定了函数自我调用的返回字值。 \n\n自我调用函数只执行一次。设置计数器为 0。并返回函数表达式。\n\nadd变量可以作为一个函数使用。非常棒的部分是它可以访问函数上一层作用域的计数器。 \n\n这个叫作 JavaScript **闭包。**它使得函数拥有私有变量变成可能。\n\n计数器受匿名函数的作用域保护，只能通过 add 方法修改。\n\n| ![Note](http://www.runoob.com/images/lamp.jpg) | 闭包是可访问上一层函数作用域里变量的函数，即便上一层函数已经关闭。 |\n| ---------------------------------------- | --------------------------------- |\n|                                          |                                   |","slug":"js闭包","published":1,"updated":"2017-10-16T07:16:33.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28d000nq0fayw0iy4hw","content":"<h1 id=\"JavaScript-闭包\"><a href=\"#JavaScript-闭包\" class=\"headerlink\" title=\"JavaScript 闭包\"></a>JavaScript 闭包</h1><hr>\n<p>JavaScript 变量可以是局部变量或全局变量。</p>\n<p>私有变量可以用到闭包。</p>\n<hr>\n<a id=\"more\"></a>\n<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>函数可以访问\b由函数内部定义的变量，如：</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">4</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> a * a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>函数也可以访问函数外部定义的变量，如：</p>\n<h2 id=\"实例-1\"><a href=\"#实例-1\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">4</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">return</span> a * a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>后面一个实例中， <strong>a</strong> 是一个 <strong>全局</strong> 变量。 </p>\n<p>在web页面中全局变量属于 window 对象。</p>\n<p>全局变量可应用于页面上的所有脚本。</p>\n<p>在第一个实例中， <strong>a</strong> 是一个 <strong>局部</strong> 变量。</p>\n<p>局部变量只能用于定义它函数内部。对于其他的函数或脚本代码是不可用的。</p>\n<p>全局和局部变量即便名称相同，它们也是两个不同的变量。修改其中一个，不会影响另一个的值。 </p>\n<table>\n<thead>\n<tr>\n<th><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"></th>\n<th>变量声明时如果不使用 <strong>var</strong> 关键字，那么它就是一个全局变量，即便它在函数内定义。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"变量生命周期\"><a href=\"#变量生命周期\" class=\"headerlink\" title=\"变量生命周期\"></a>变量生命周期</h2><p>全局变量的作用域是全局性的，即在整个JavaScript程序中，全局变量处处都在。</p>\n<p>而在函数内部声明的变量，只在函数内部起作用。这些变量是局部变量，作用域是局部性的；函数的参数也是局部性的，只在函数内部起作用。</p>\n<hr>\n<h2 id=\"计数器困境\"><a href=\"#计数器困境\" class=\"headerlink\" title=\"计数器困境\"></a>计数器困境</h2><p>设想下如果你想统计一些数值，且该计数器在所有函数中都是可用的。</p>\n<p>你可以使用全局变量，函数设置计数器递增：</p>\n<h2 id=\"实例-2\"><a href=\"#实例-2\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> counter += <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 计数器现在为 3</span></div></pre></td></tr></table></figure>\n<p>计数器数值在执行 add() 函数时发生变化。</p>\n<p>但问题来了，页面上的任何脚本都能改变计数器，即便没有调用 add() 函数。</p>\n<p>如果我在函数内声明计数器，如果没有调用函数将无法修改计数器的值：</p>\n<h2 id=\"实例-3\"><a href=\"#实例-3\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    counter += <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 本意是想输出 3, 但事与愿违，输出的都是 1 !</span></div></pre></td></tr></table></figure>\n<p>以上代码将无法正确输出，每次我调用 add() 函数，计数器都会设置为 1。</p>\n<p><strong>JavaScript 内嵌函数可以解决该问题。</strong></p>\n<hr>\n<h2 id=\"JavaScript-内嵌函数\"><a href=\"#JavaScript-内嵌函数\" class=\"headerlink\" title=\"JavaScript 内嵌函数\"></a>JavaScript 内嵌函数</h2><p>所有函数都能访问全局变量。   </p>\n<p>实际上，在 JavaScript 中，所有函数都能访问它们上一层的作用域。</p>\n<p>JavaScript 支持嵌套函数。嵌套函数可以访问上一层的函数变量。 </p>\n<p>该实例中，内嵌函数 <strong>plus()</strong> 可以访问父函数的 <strong>counter</strong> 变量：</p>\n<h2 id=\"实例-4\"><a href=\"#实例-4\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"></span>) </span>&#123;counter += <span class=\"number\">1</span>;&#125;</div><div class=\"line\">​    plus();    </div><div class=\"line\">​    <span class=\"keyword\">return</span> counter; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果我们能在外部访问  <strong>plus()</strong> 函数，这样就能解决计数器的困境。</p>\n<p>我们同样需要确保 <strong>counter = 0</strong> 只执行一次。</p>\n<p><strong>我们需要闭包。</strong></p>\n<hr>\n<h2 id=\"JavaScript-闭包-1\"><a href=\"#JavaScript-闭包-1\" class=\"headerlink\" title=\"JavaScript 闭包\"></a>JavaScript 闭包</h2><p>还记得函数自我调用吗？该函数会做什么？</p>\n<h2 id=\"实例-5\"><a href=\"#实例-5\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> add = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> counter += <span class=\"number\">1</span>;&#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 计数器为 3</span></div></pre></td></tr></table></figure>\n<h2 id=\"实例解析\"><a href=\"#实例解析\" class=\"headerlink\" title=\"实例解析\"></a>实例解析</h2><p>变量 <strong>add</strong> 指定了函数自我调用的返回字值。 </p>\n<p>自我调用函数只执行一次。设置计数器为 0。并返回函数表达式。</p>\n<p>add变量可以作为一个函数使用。非常棒的部分是它可以访问函数上一层作用域的计数器。 </p>\n<p>这个叫作 JavaScript <strong>闭包。</strong>它使得函数拥有私有变量变成可能。</p>\n<p>计数器受匿名函数的作用域保护，只能通过 add 方法修改。</p>\n<table>\n<thead>\n<tr>\n<th><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"></th>\n<th>闭包是可访问上一层函数作用域里变量的函数，即便上一层函数已经关闭。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h1 id=\"JavaScript-闭包\"><a href=\"#JavaScript-闭包\" class=\"headerlink\" title=\"JavaScript 闭包\"></a>JavaScript 闭包</h1><hr>\n<p>JavaScript 变量可以是局部变量或全局变量。</p>\n<p>私有变量可以用到闭包。</p>\n<hr>","more":"<h2 id=\"全局变量\"><a href=\"#全局变量\" class=\"headerlink\" title=\"全局变量\"></a>全局变量</h2><p>函数可以访问\b由函数内部定义的变量，如：</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">4</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> a * a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>函数也可以访问函数外部定义的变量，如：</p>\n<h2 id=\"实例-1\"><a href=\"#实例-1\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">4</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunction</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">return</span> a * a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>后面一个实例中， <strong>a</strong> 是一个 <strong>全局</strong> 变量。 </p>\n<p>在web页面中全局变量属于 window 对象。</p>\n<p>全局变量可应用于页面上的所有脚本。</p>\n<p>在第一个实例中， <strong>a</strong> 是一个 <strong>局部</strong> 变量。</p>\n<p>局部变量只能用于定义它函数内部。对于其他的函数或脚本代码是不可用的。</p>\n<p>全局和局部变量即便名称相同，它们也是两个不同的变量。修改其中一个，不会影响另一个的值。 </p>\n<table>\n<thead>\n<tr>\n<th><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"></th>\n<th>变量声明时如果不使用 <strong>var</strong> 关键字，那么它就是一个全局变量，即便它在函数内定义。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2 id=\"变量生命周期\"><a href=\"#变量生命周期\" class=\"headerlink\" title=\"变量生命周期\"></a>变量生命周期</h2><p>全局变量的作用域是全局性的，即在整个JavaScript程序中，全局变量处处都在。</p>\n<p>而在函数内部声明的变量，只在函数内部起作用。这些变量是局部变量，作用域是局部性的；函数的参数也是局部性的，只在函数内部起作用。</p>\n<hr>\n<h2 id=\"计数器困境\"><a href=\"#计数器困境\" class=\"headerlink\" title=\"计数器困境\"></a>计数器困境</h2><p>设想下如果你想统计一些数值，且该计数器在所有函数中都是可用的。</p>\n<p>你可以使用全局变量，函数设置计数器递增：</p>\n<h2 id=\"实例-2\"><a href=\"#实例-2\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">return</span> counter += <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 计数器现在为 3</span></div></pre></td></tr></table></figure>\n<p>计数器数值在执行 add() 函数时发生变化。</p>\n<p>但问题来了，页面上的任何脚本都能改变计数器，即便没有调用 add() 函数。</p>\n<p>如果我在函数内声明计数器，如果没有调用函数将无法修改计数器的值：</p>\n<h2 id=\"实例-3\"><a href=\"#实例-3\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    counter += <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 本意是想输出 3, 但事与愿违，输出的都是 1 !</span></div></pre></td></tr></table></figure>\n<p>以上代码将无法正确输出，每次我调用 add() 函数，计数器都会设置为 1。</p>\n<p><strong>JavaScript 内嵌函数可以解决该问题。</strong></p>\n<hr>\n<h2 id=\"JavaScript-内嵌函数\"><a href=\"#JavaScript-内嵌函数\" class=\"headerlink\" title=\"JavaScript 内嵌函数\"></a>JavaScript 内嵌函数</h2><p>所有函数都能访问全局变量。   </p>\n<p>实际上，在 JavaScript 中，所有函数都能访问它们上一层的作用域。</p>\n<p>JavaScript 支持嵌套函数。嵌套函数可以访问上一层的函数变量。 </p>\n<p>该实例中，内嵌函数 <strong>plus()</strong> 可以访问父函数的 <strong>counter</strong> 变量：</p>\n<h2 id=\"实例-4\"><a href=\"#实例-4\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">plus</span>(<span class=\"params\"></span>) </span>&#123;counter += <span class=\"number\">1</span>;&#125;</div><div class=\"line\">​    plus();    </div><div class=\"line\">​    <span class=\"keyword\">return</span> counter; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果我们能在外部访问  <strong>plus()</strong> 函数，这样就能解决计数器的困境。</p>\n<p>我们同样需要确保 <strong>counter = 0</strong> 只执行一次。</p>\n<p><strong>我们需要闭包。</strong></p>\n<hr>\n<h2 id=\"JavaScript-闭包-1\"><a href=\"#JavaScript-闭包-1\" class=\"headerlink\" title=\"JavaScript 闭包\"></a>JavaScript 闭包</h2><p>还记得函数自我调用吗？该函数会做什么？</p>\n<h2 id=\"实例-5\"><a href=\"#实例-5\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> add = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">​    <span class=\"keyword\">var</span> counter = <span class=\"number\">0</span>;</div><div class=\"line\">​    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"keyword\">return</span> counter += <span class=\"number\">1</span>;&#125;</div><div class=\"line\">&#125;)();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\">add();</div><div class=\"line\"><span class=\"comment\">// 计数器为 3</span></div></pre></td></tr></table></figure>\n<h2 id=\"实例解析\"><a href=\"#实例解析\" class=\"headerlink\" title=\"实例解析\"></a>实例解析</h2><p>变量 <strong>add</strong> 指定了函数自我调用的返回字值。 </p>\n<p>自我调用函数只执行一次。设置计数器为 0。并返回函数表达式。</p>\n<p>add变量可以作为一个函数使用。非常棒的部分是它可以访问函数上一层作用域的计数器。 </p>\n<p>这个叫作 JavaScript <strong>闭包。</strong>它使得函数拥有私有变量变成可能。</p>\n<p>计数器受匿名函数的作用域保护，只能通过 add 方法修改。</p>\n<table>\n<thead>\n<tr>\n<th><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"></th>\n<th>闭包是可访问上一层函数作用域里变量的函数，即便上一层函数已经关闭。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>"},{"title":"php模拟登陆实现课表抓取(最新版)","copyright":true,"date":"2017-05-26T07:13:01.000Z","_content":"\n> 首先，简单的说下表单原理，当我们在正方输入学号、密码、验证码的时候，点击提交按钮会产生一个POST请求，服务器在接受到POST请求以后，检查提交的学号密码验证码是否正确，正确则登陆成功。\n\n环境：Mac+MAMP Pro+phpstorm(PHP7.1)+Chrome\n\n## 1、抓包\n\n打开谷歌浏览器访问学校教务处网址，打开开发者工具选择network，之后在正方里填上你的学号，密码，验证码，登录，看看这期间提交的数据。\n\n![](http://i1.piimg.com/588926/fa6f6f661397058c.jpg)\n\n我们要用到的数据只有default2.aspx和xs_main.aspx?xh=”你的学号”这两个，其余的都是修饰用的css文件。点开default2.aspx可以看到你提交的表单数据。\n\n![](http://i1.piimg.com/588926/e2468014006c83be.jpg)\n\n其中__VIEWSTATE是asp.net服务器的状态信息，需要抓取出来。\n另外default2.aspx这个页面采用了302跳转，即登录成功后会跳转到xs_main.aspx?xh=”你的学号”这个网址，这一点可能是大多数人模拟登录失败的原因。\n\n## 2、构造登录页面\n\n三项信息必填，学号、密码、验证码。先说说验证码怎么保存到本地。\n\n![](http://i4.buimg.com/588926/7d45a6e1eff2d946.jpg)\n\n验证码是由一个叫checkcode.aspx的网页生成的，要保存可以用`fwrite`来实现。直接用`<img src=\"\"`填上刚才的网址理论上也可以，只要你能保存下这张图片所对应的cookie，这个cookie决定了你是否能够进行后续数据抓取。\n\n具体代码如下：\n\n首先要新建一个cookie文件夹，并且把session打开（可以解决高并发访问时登陆失败的问题）。\n\n```php\n<?php \n    session_start();\n    $id=session_id();\n    $_SESSION['id']=$id;\n?>\n```\n\n验证码保存：\n\n这里注意⚠️要自己新建一个`cookie`文件夹📁在你的项目目录。\n\n```php\n<?php \n  \t$cookie = dirname(__FILE__) . '/cookie/'.$_SESSION['id'].'.txt'; //cookie路径\n\t$verify_code_url = \"http://你的正方网址/CheckCode.aspx\"; //验证码地址\n\t$curl = curl_init();\n\tcurl_setopt($curl, CURLOPT_URL, $verify_code_url);\n\tcurl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie\n\tcurl_setopt($curl, CURLOPT_HEADER, 0);\n\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n\t$img = curl_exec($curl);  //执行curl\n\tcurl_close($curl);\n\t$fp = fopen(\"verifyCode.jpg\",\"w\");  //文件名\n\tfwrite($fp,$img);  //写入文件\n\tfclose($fp);\n?>\n```\n\n之后构造`input`表单，设置好`name`\n\n```Html\n<form name=\"form1\" method=\"post\" action=\"kebiao.php\" >\n    用户名:<input type=\"text\" name=\"xh\" /><!--普通文本框-->\n    密码:<input type=\"password\" name=\"pw\" /><!--密码框-->\n    验证码:<input type=\"text\" name=\"code\" /><img src=\"verifyCode.jpg\">\n    <input type=\"submit\" value=\"提交信息\" />\n</form>\n```\n\n## 3、后端模拟登录页面\n\n```php\n<?php\n/**\n * Created by PhpStorm.\n * User: Apple\n * Date: 2019/5/17\n * Time: PM9:08\n */\nsession_start();\nheader(\"Content-type: text/html; charset=gb2312\");  //视学校而定，博主学校是gbk编码，php也采用的gbk编码方式\n\n//将表格转换成数组函数\nfunction get_td_array($table) {\n    $table = preg_replace(\"'<table[^>]*?>'si\",\"\",$table);\n    $table = preg_replace(\"'<tr[^>]*?>'si\",\"\",$table);\n    $table = preg_replace(\"'<td[^>]*?>'si\",\"\",$table);\n    $table = str_replace(\"</tr>\",\"{tr}\",$table);\n    $table = str_replace(\"</td>\",\"{td}\",$table);\n    //去掉 HTML 标记\n    $table = preg_replace(\"'<[/!]*?[^<>]*?>'si\",\"\",$table);\n    //去掉空白字符\n    $table = preg_replace(\"'([rn])[s]+'\",\"\",$table);\n    $table = preg_replace('/&nbsp;/',\"\",$table);\n    $table = str_replace(\" \",\"\",$table);\n    $table = str_replace(\" \",\"\",$table);\n    $table = explode('{tr}', $table);\n    array_pop($table);\n    foreach ($table as $key=>$tr) {\n        $td = explode('{td}', $tr);\n        array_pop($td);\n        $td_array[] = $td;\n    }\n    return $td_array;\n}\n\nfunction login_post($url, $cookie, $post)\n{\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_HEADER, 0);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);  //不自动输出数据，要echo才行\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\n    curl_setopt($ch, CURLOPT_REFERER, 'http://202.119.225.34/');  //重要，302跳转需要referer，可以在Request Headers找到\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);  //post提交数据\n    $result = curl_exec($ch);\n//    $content = curl_getinfo($ch);\n//    echo json_encode($content);\n    curl_close($ch);\n    return $result;\n}\n\n$_SESSION['xh'] = $_POST['xh'];\n$xh = $_POST['xh'];\n$pw = $_POST['pw'];\n$code = $_POST['code'];\n$cookie = dirname(__FILE__) . '/cookie/' . $_SESSION['id'] . '.txt';\n$url = \"http://202.119.225.34/default2.aspx\";\n$con1=login_post($url,$cookie,'');\n    preg_match_all('/<input type=\"hidden\" name=\"__VIEWSTATE\" value=\"([^<>]+)\" \\/>/', $con1, $view); //获取__VIEWSTATE字段并存到$view数组中\n    $post=array(\n        '__VIEWSTATE'=>$view[1][0],\n        'txtUserName'=>$xh,\n        'TextBox2'=>$pw,\n        'txtSecretCode'=>$code,\n        'RadioButtonList1'=>'%D1%A7%C9%FA',  //“学生”的gbk编码\n        'Button1'=>'',\n        'lbLanguage'=>'',\n        'hidPdrs'=>'',\n        'hidsc'=>''\n    );\n    $con2=login_post($url,$cookie,http_build_query($post)); //将数组连接成字符串\n    preg_match_all('/<span id=\"xhxm\">([^<>]+)/', $con2, $xm);\n\t$xm[1][0] = substr($xm[1][0], 0, -4);\n$url2 = \"http://202.119.225.34/xskbcx.aspx?xh=\" . $_SESSION['xh'] . \"&xm=\" . $xm[1][0];\n$con3 = login_post($url2, $cookie, '');\n\n//echo $con3;\nprint_r($con3);\n?>\n```\n\n如果代码都正确，你将看到如下页面\n\n![](http://i4.buimg.com/588926/eda145ce10fe2f0a.png)\n\n\n\n![](http://i4.buimg.com/588926/fad605f358e06ff5.png)\n\n课表成功拿到。\n\n同理可以用正则表达式拿到成绩等，可以用这些数据做个微信公众号用来查询成绩课表等等。这些以后有时间再深入了解。\n\n","source":"_posts/php模拟登陆实现课表抓取-最新版.md","raw":"---\ntitle: php模拟登陆实现课表抓取(最新版)\ncopyright: true\ndate: 2017-05-26 15:13:01\ntags: php\n---\n\n> 首先，简单的说下表单原理，当我们在正方输入学号、密码、验证码的时候，点击提交按钮会产生一个POST请求，服务器在接受到POST请求以后，检查提交的学号密码验证码是否正确，正确则登陆成功。\n\n环境：Mac+MAMP Pro+phpstorm(PHP7.1)+Chrome\n\n## 1、抓包\n\n打开谷歌浏览器访问学校教务处网址，打开开发者工具选择network，之后在正方里填上你的学号，密码，验证码，登录，看看这期间提交的数据。\n\n![](http://i1.piimg.com/588926/fa6f6f661397058c.jpg)\n\n我们要用到的数据只有default2.aspx和xs_main.aspx?xh=”你的学号”这两个，其余的都是修饰用的css文件。点开default2.aspx可以看到你提交的表单数据。\n\n![](http://i1.piimg.com/588926/e2468014006c83be.jpg)\n\n其中__VIEWSTATE是asp.net服务器的状态信息，需要抓取出来。\n另外default2.aspx这个页面采用了302跳转，即登录成功后会跳转到xs_main.aspx?xh=”你的学号”这个网址，这一点可能是大多数人模拟登录失败的原因。\n\n## 2、构造登录页面\n\n三项信息必填，学号、密码、验证码。先说说验证码怎么保存到本地。\n\n![](http://i4.buimg.com/588926/7d45a6e1eff2d946.jpg)\n\n验证码是由一个叫checkcode.aspx的网页生成的，要保存可以用`fwrite`来实现。直接用`<img src=\"\"`填上刚才的网址理论上也可以，只要你能保存下这张图片所对应的cookie，这个cookie决定了你是否能够进行后续数据抓取。\n\n具体代码如下：\n\n首先要新建一个cookie文件夹，并且把session打开（可以解决高并发访问时登陆失败的问题）。\n\n```php\n<?php \n    session_start();\n    $id=session_id();\n    $_SESSION['id']=$id;\n?>\n```\n\n验证码保存：\n\n这里注意⚠️要自己新建一个`cookie`文件夹📁在你的项目目录。\n\n```php\n<?php \n  \t$cookie = dirname(__FILE__) . '/cookie/'.$_SESSION['id'].'.txt'; //cookie路径\n\t$verify_code_url = \"http://你的正方网址/CheckCode.aspx\"; //验证码地址\n\t$curl = curl_init();\n\tcurl_setopt($curl, CURLOPT_URL, $verify_code_url);\n\tcurl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  //保存cookie\n\tcurl_setopt($curl, CURLOPT_HEADER, 0);\n\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n\t$img = curl_exec($curl);  //执行curl\n\tcurl_close($curl);\n\t$fp = fopen(\"verifyCode.jpg\",\"w\");  //文件名\n\tfwrite($fp,$img);  //写入文件\n\tfclose($fp);\n?>\n```\n\n之后构造`input`表单，设置好`name`\n\n```Html\n<form name=\"form1\" method=\"post\" action=\"kebiao.php\" >\n    用户名:<input type=\"text\" name=\"xh\" /><!--普通文本框-->\n    密码:<input type=\"password\" name=\"pw\" /><!--密码框-->\n    验证码:<input type=\"text\" name=\"code\" /><img src=\"verifyCode.jpg\">\n    <input type=\"submit\" value=\"提交信息\" />\n</form>\n```\n\n## 3、后端模拟登录页面\n\n```php\n<?php\n/**\n * Created by PhpStorm.\n * User: Apple\n * Date: 2019/5/17\n * Time: PM9:08\n */\nsession_start();\nheader(\"Content-type: text/html; charset=gb2312\");  //视学校而定，博主学校是gbk编码，php也采用的gbk编码方式\n\n//将表格转换成数组函数\nfunction get_td_array($table) {\n    $table = preg_replace(\"'<table[^>]*?>'si\",\"\",$table);\n    $table = preg_replace(\"'<tr[^>]*?>'si\",\"\",$table);\n    $table = preg_replace(\"'<td[^>]*?>'si\",\"\",$table);\n    $table = str_replace(\"</tr>\",\"{tr}\",$table);\n    $table = str_replace(\"</td>\",\"{td}\",$table);\n    //去掉 HTML 标记\n    $table = preg_replace(\"'<[/!]*?[^<>]*?>'si\",\"\",$table);\n    //去掉空白字符\n    $table = preg_replace(\"'([rn])[s]+'\",\"\",$table);\n    $table = preg_replace('/&nbsp;/',\"\",$table);\n    $table = str_replace(\" \",\"\",$table);\n    $table = str_replace(\" \",\"\",$table);\n    $table = explode('{tr}', $table);\n    array_pop($table);\n    foreach ($table as $key=>$tr) {\n        $td = explode('{td}', $tr);\n        array_pop($td);\n        $td_array[] = $td;\n    }\n    return $td_array;\n}\n\nfunction login_post($url, $cookie, $post)\n{\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_HEADER, 0);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);  //不自动输出数据，要echo才行\n    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);  //重要，抓取跳转后数据\n    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);\n    curl_setopt($ch, CURLOPT_REFERER, 'http://202.119.225.34/');  //重要，302跳转需要referer，可以在Request Headers找到\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);  //post提交数据\n    $result = curl_exec($ch);\n//    $content = curl_getinfo($ch);\n//    echo json_encode($content);\n    curl_close($ch);\n    return $result;\n}\n\n$_SESSION['xh'] = $_POST['xh'];\n$xh = $_POST['xh'];\n$pw = $_POST['pw'];\n$code = $_POST['code'];\n$cookie = dirname(__FILE__) . '/cookie/' . $_SESSION['id'] . '.txt';\n$url = \"http://202.119.225.34/default2.aspx\";\n$con1=login_post($url,$cookie,'');\n    preg_match_all('/<input type=\"hidden\" name=\"__VIEWSTATE\" value=\"([^<>]+)\" \\/>/', $con1, $view); //获取__VIEWSTATE字段并存到$view数组中\n    $post=array(\n        '__VIEWSTATE'=>$view[1][0],\n        'txtUserName'=>$xh,\n        'TextBox2'=>$pw,\n        'txtSecretCode'=>$code,\n        'RadioButtonList1'=>'%D1%A7%C9%FA',  //“学生”的gbk编码\n        'Button1'=>'',\n        'lbLanguage'=>'',\n        'hidPdrs'=>'',\n        'hidsc'=>''\n    );\n    $con2=login_post($url,$cookie,http_build_query($post)); //将数组连接成字符串\n    preg_match_all('/<span id=\"xhxm\">([^<>]+)/', $con2, $xm);\n\t$xm[1][0] = substr($xm[1][0], 0, -4);\n$url2 = \"http://202.119.225.34/xskbcx.aspx?xh=\" . $_SESSION['xh'] . \"&xm=\" . $xm[1][0];\n$con3 = login_post($url2, $cookie, '');\n\n//echo $con3;\nprint_r($con3);\n?>\n```\n\n如果代码都正确，你将看到如下页面\n\n![](http://i4.buimg.com/588926/eda145ce10fe2f0a.png)\n\n\n\n![](http://i4.buimg.com/588926/fad605f358e06ff5.png)\n\n课表成功拿到。\n\n同理可以用正则表达式拿到成绩等，可以用这些数据做个微信公众号用来查询成绩课表等等。这些以后有时间再深入了解。\n\n","slug":"php模拟登陆实现课表抓取-最新版","published":1,"updated":"2017-10-16T07:16:33.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28e000qq0fake1dac9y","content":"<blockquote>\n<p>首先，简单的说下表单原理，当我们在正方输入学号、密码、验证码的时候，点击提交按钮会产生一个POST请求，服务器在接受到POST请求以后，检查提交的学号密码验证码是否正确，正确则登陆成功。</p>\n</blockquote>\n<p>环境：Mac+MAMP Pro+phpstorm(PHP7.1)+Chrome</p>\n<h2 id=\"1、抓包\"><a href=\"#1、抓包\" class=\"headerlink\" title=\"1、抓包\"></a>1、抓包</h2><p>打开谷歌浏览器访问学校教务处网址，打开开发者工具选择network，之后在正方里填上你的学号，密码，验证码，登录，看看这期间提交的数据。</p>\n<p><img src=\"http://i1.piimg.com/588926/fa6f6f661397058c.jpg\" alt=\"\"></p>\n<p>我们要用到的数据只有default2.aspx和xs_main.aspx?xh=”你的学号”这两个，其余的都是修饰用的css文件。点开default2.aspx可以看到你提交的表单数据。</p>\n<p><img src=\"http://i1.piimg.com/588926/e2468014006c83be.jpg\" alt=\"\"></p>\n<p>其中__VIEWSTATE是asp.net服务器的状态信息，需要抓取出来。<br>另外default2.aspx这个页面采用了302跳转，即登录成功后会跳转到xs_main.aspx?xh=”你的学号”这个网址，这一点可能是大多数人模拟登录失败的原因。</p>\n<h2 id=\"2、构造登录页面\"><a href=\"#2、构造登录页面\" class=\"headerlink\" title=\"2、构造登录页面\"></a>2、构造登录页面</h2><p>三项信息必填，学号、密码、验证码。先说说验证码怎么保存到本地。</p>\n<p><img src=\"http://i4.buimg.com/588926/7d45a6e1eff2d946.jpg\" alt=\"\"></p>\n<p>验证码是由一个叫checkcode.aspx的网页生成的，要保存可以用<code>fwrite</code>来实现。直接用<code>&lt;img src=&quot;&quot;</code>填上刚才的网址理论上也可以，只要你能保存下这张图片所对应的cookie，这个cookie决定了你是否能够进行后续数据抓取。</p>\n<p>具体代码如下：</p>\n<p>首先要新建一个cookie文件夹，并且把session打开（可以解决高并发访问时登陆失败的问题）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">    session_start();</div><div class=\"line\">    $id=session_id();</div><div class=\"line\">    $_SESSION[<span class=\"string\">'id'</span>]=$id;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>验证码保存：</p>\n<p>这里注意⚠️要自己新建一个<code>cookie</code>文件夹📁在你的项目目录。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">  \t$cookie = dirname(<span class=\"keyword\">__FILE__</span>) . <span class=\"string\">'/cookie/'</span>.$_SESSION[<span class=\"string\">'id'</span>].<span class=\"string\">'.txt'</span>; <span class=\"comment\">//cookie路径</span></div><div class=\"line\">\t$verify_code_url = <span class=\"string\">\"http://你的正方网址/CheckCode.aspx\"</span>; <span class=\"comment\">//验证码地址</span></div><div class=\"line\">\t$curl = curl_init();</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_URL, $verify_code_url);</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  <span class=\"comment\">//保存cookie</span></div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_HEADER, <span class=\"number\">0</span>);</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</div><div class=\"line\">\t$img = curl_exec($curl);  <span class=\"comment\">//执行curl</span></div><div class=\"line\">\tcurl_close($curl);</div><div class=\"line\">\t$fp = fopen(<span class=\"string\">\"verifyCode.jpg\"</span>,<span class=\"string\">\"w\"</span>);  <span class=\"comment\">//文件名</span></div><div class=\"line\">\tfwrite($fp,$img);  <span class=\"comment\">//写入文件</span></div><div class=\"line\">\tfclose($fp);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>之后构造<code>input</code>表单，设置好<code>name</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"kebiao.php\"</span> &gt;</span></div><div class=\"line\">    用户名:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xh\"</span> /&gt;</span><span class=\"comment\">&lt;!--普通文本框--&gt;</span></div><div class=\"line\">    密码:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pw\"</span> /&gt;</span><span class=\"comment\">&lt;!--密码框--&gt;</span></div><div class=\"line\">    验证码:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"code\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"verifyCode.jpg\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提交信息\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"3、后端模拟登录页面\"><a href=\"#3、后端模拟登录页面\" class=\"headerlink\" title=\"3、后端模拟登录页面\"></a>3、后端模拟登录页面</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by PhpStorm.</span></div><div class=\"line\"><span class=\"comment\"> * User: Apple</span></div><div class=\"line\"><span class=\"comment\"> * Date: 2019/5/17</span></div><div class=\"line\"><span class=\"comment\"> * Time: PM9:08</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\">session_start();</div><div class=\"line\">header(<span class=\"string\">\"Content-type: text/html; charset=gb2312\"</span>);  <span class=\"comment\">//视学校而定，博主学校是gbk编码，php也采用的gbk编码方式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//将表格转换成数组函数</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_td_array</span><span class=\"params\">($table)</span> </span>&#123;</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;table[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;tr[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;td[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\"&lt;/tr&gt;\"</span>,<span class=\"string\">\"&#123;tr&#125;\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\"&lt;/td&gt;\"</span>,<span class=\"string\">\"&#123;td&#125;\"</span>,$table);</div><div class=\"line\">    <span class=\"comment\">//去掉 HTML 标记</span></div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;[/!]*?[^&lt;&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    <span class=\"comment\">//去掉空白字符</span></div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'([rn])[s]+'\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">'/&amp;nbsp;/'</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = explode(<span class=\"string\">'&#123;tr&#125;'</span>, $table);</div><div class=\"line\">    array_pop($table);</div><div class=\"line\">    <span class=\"keyword\">foreach</span> ($table <span class=\"keyword\">as</span> $key=&gt;$tr) &#123;</div><div class=\"line\">        $td = explode(<span class=\"string\">'&#123;td&#125;'</span>, $tr);</div><div class=\"line\">        array_pop($td);</div><div class=\"line\">        $td_array[] = $td;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $td_array;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login_post</span><span class=\"params\">($url, $cookie, $post)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    $ch = curl_init();</div><div class=\"line\">    curl_setopt($ch, CURLOPT_URL, $url);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_HEADER, <span class=\"number\">0</span>);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);  <span class=\"comment\">//不自动输出数据，要echo才行</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class=\"number\">1</span>);  <span class=\"comment\">//重要，抓取跳转后数据</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_REFERER, <span class=\"string\">'http://202.119.225.34/'</span>);  <span class=\"comment\">//重要，302跳转需要referer，可以在Request Headers找到</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);  <span class=\"comment\">//post提交数据</span></div><div class=\"line\">    $result = curl_exec($ch);</div><div class=\"line\"><span class=\"comment\">//    $content = curl_getinfo($ch);</span></div><div class=\"line\"><span class=\"comment\">//    echo json_encode($content);</span></div><div class=\"line\">    curl_close($ch);</div><div class=\"line\">    <span class=\"keyword\">return</span> $result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$_SESSION[<span class=\"string\">'xh'</span>] = $_POST[<span class=\"string\">'xh'</span>];</div><div class=\"line\">$xh = $_POST[<span class=\"string\">'xh'</span>];</div><div class=\"line\">$pw = $_POST[<span class=\"string\">'pw'</span>];</div><div class=\"line\">$code = $_POST[<span class=\"string\">'code'</span>];</div><div class=\"line\">$cookie = dirname(<span class=\"keyword\">__FILE__</span>) . <span class=\"string\">'/cookie/'</span> . $_SESSION[<span class=\"string\">'id'</span>] . <span class=\"string\">'.txt'</span>;</div><div class=\"line\">$url = <span class=\"string\">\"http://202.119.225.34/default2.aspx\"</span>;</div><div class=\"line\">$con1=login_post($url,$cookie,<span class=\"string\">''</span>);</div><div class=\"line\">    preg_match_all(<span class=\"string\">'/&lt;input type=\"hidden\" name=\"__VIEWSTATE\" value=\"([^&lt;&gt;]+)\" \\/&gt;/'</span>, $con1, $view); <span class=\"comment\">//获取__VIEWSTATE字段并存到$view数组中</span></div><div class=\"line\">    $post=<span class=\"keyword\">array</span>(</div><div class=\"line\">        <span class=\"string\">'__VIEWSTATE'</span>=&gt;$view[<span class=\"number\">1</span>][<span class=\"number\">0</span>],</div><div class=\"line\">        <span class=\"string\">'txtUserName'</span>=&gt;$xh,</div><div class=\"line\">        <span class=\"string\">'TextBox2'</span>=&gt;$pw,</div><div class=\"line\">        <span class=\"string\">'txtSecretCode'</span>=&gt;$code,</div><div class=\"line\">        <span class=\"string\">'RadioButtonList1'</span>=&gt;<span class=\"string\">'%D1%A7%C9%FA'</span>,  <span class=\"comment\">//“学生”的gbk编码</span></div><div class=\"line\">        <span class=\"string\">'Button1'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'lbLanguage'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'hidPdrs'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'hidsc'</span>=&gt;<span class=\"string\">''</span></div><div class=\"line\">    );</div><div class=\"line\">    $con2=login_post($url,$cookie,http_build_query($post)); <span class=\"comment\">//将数组连接成字符串</span></div><div class=\"line\">    preg_match_all(<span class=\"string\">'/&lt;span id=\"xhxm\"&gt;([^&lt;&gt;]+)/'</span>, $con2, $xm);</div><div class=\"line\">\t$xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = substr($xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>], <span class=\"number\">0</span>, <span class=\"number\">-4</span>);</div><div class=\"line\">$url2 = <span class=\"string\">\"http://202.119.225.34/xskbcx.aspx?xh=\"</span> . $_SESSION[<span class=\"string\">'xh'</span>] . <span class=\"string\">\"&amp;xm=\"</span> . $xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>];</div><div class=\"line\">$con3 = login_post($url2, $cookie, <span class=\"string\">''</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//echo $con3;</span></div><div class=\"line\">print_r($con3);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>如果代码都正确，你将看到如下页面</p>\n<p><img src=\"http://i4.buimg.com/588926/eda145ce10fe2f0a.png\" alt=\"\"></p>\n<p><img src=\"http://i4.buimg.com/588926/fad605f358e06ff5.png\" alt=\"\"></p>\n<p>课表成功拿到。</p>\n<p>同理可以用正则表达式拿到成绩等，可以用这些数据做个微信公众号用来查询成绩课表等等。这些以后有时间再深入了解。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>首先，简单的说下表单原理，当我们在正方输入学号、密码、验证码的时候，点击提交按钮会产生一个POST请求，服务器在接受到POST请求以后，检查提交的学号密码验证码是否正确，正确则登陆成功。</p>\n</blockquote>\n<p>环境：Mac+MAMP Pro+phpstorm(PHP7.1)+Chrome</p>\n<h2 id=\"1、抓包\"><a href=\"#1、抓包\" class=\"headerlink\" title=\"1、抓包\"></a>1、抓包</h2><p>打开谷歌浏览器访问学校教务处网址，打开开发者工具选择network，之后在正方里填上你的学号，密码，验证码，登录，看看这期间提交的数据。</p>\n<p><img src=\"http://i1.piimg.com/588926/fa6f6f661397058c.jpg\" alt=\"\"></p>\n<p>我们要用到的数据只有default2.aspx和xs_main.aspx?xh=”你的学号”这两个，其余的都是修饰用的css文件。点开default2.aspx可以看到你提交的表单数据。</p>\n<p><img src=\"http://i1.piimg.com/588926/e2468014006c83be.jpg\" alt=\"\"></p>\n<p>其中__VIEWSTATE是asp.net服务器的状态信息，需要抓取出来。<br>另外default2.aspx这个页面采用了302跳转，即登录成功后会跳转到xs_main.aspx?xh=”你的学号”这个网址，这一点可能是大多数人模拟登录失败的原因。</p>\n<h2 id=\"2、构造登录页面\"><a href=\"#2、构造登录页面\" class=\"headerlink\" title=\"2、构造登录页面\"></a>2、构造登录页面</h2><p>三项信息必填，学号、密码、验证码。先说说验证码怎么保存到本地。</p>\n<p><img src=\"http://i4.buimg.com/588926/7d45a6e1eff2d946.jpg\" alt=\"\"></p>\n<p>验证码是由一个叫checkcode.aspx的网页生成的，要保存可以用<code>fwrite</code>来实现。直接用<code>&lt;img src=&quot;&quot;</code>填上刚才的网址理论上也可以，只要你能保存下这张图片所对应的cookie，这个cookie决定了你是否能够进行后续数据抓取。</p>\n<p>具体代码如下：</p>\n<p>首先要新建一个cookie文件夹，并且把session打开（可以解决高并发访问时登陆失败的问题）。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">    session_start();</div><div class=\"line\">    $id=session_id();</div><div class=\"line\">    $_SESSION[<span class=\"string\">'id'</span>]=$id;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>验证码保存：</p>\n<p>这里注意⚠️要自己新建一个<code>cookie</code>文件夹📁在你的项目目录。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> </div><div class=\"line\">  \t$cookie = dirname(<span class=\"keyword\">__FILE__</span>) . <span class=\"string\">'/cookie/'</span>.$_SESSION[<span class=\"string\">'id'</span>].<span class=\"string\">'.txt'</span>; <span class=\"comment\">//cookie路径</span></div><div class=\"line\">\t$verify_code_url = <span class=\"string\">\"http://你的正方网址/CheckCode.aspx\"</span>; <span class=\"comment\">//验证码地址</span></div><div class=\"line\">\t$curl = curl_init();</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_URL, $verify_code_url);</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_COOKIEJAR, $cookie);  <span class=\"comment\">//保存cookie</span></div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_HEADER, <span class=\"number\">0</span>);</div><div class=\"line\">\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</div><div class=\"line\">\t$img = curl_exec($curl);  <span class=\"comment\">//执行curl</span></div><div class=\"line\">\tcurl_close($curl);</div><div class=\"line\">\t$fp = fopen(<span class=\"string\">\"verifyCode.jpg\"</span>,<span class=\"string\">\"w\"</span>);  <span class=\"comment\">//文件名</span></div><div class=\"line\">\tfwrite($fp,$img);  <span class=\"comment\">//写入文件</span></div><div class=\"line\">\tfclose($fp);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>之后构造<code>input</code>表单，设置好<code>name</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">name</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"kebiao.php\"</span> &gt;</span></div><div class=\"line\">    用户名:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xh\"</span> /&gt;</span><span class=\"comment\">&lt;!--普通文本框--&gt;</span></div><div class=\"line\">    密码:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pw\"</span> /&gt;</span><span class=\"comment\">&lt;!--密码框--&gt;</span></div><div class=\"line\">    验证码:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"code\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"verifyCode.jpg\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提交信息\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"3、后端模拟登录页面\"><a href=\"#3、后端模拟登录页面\" class=\"headerlink\" title=\"3、后端模拟登录页面\"></a>3、后端模拟登录页面</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Created by PhpStorm.</span></div><div class=\"line\"><span class=\"comment\"> * User: Apple</span></div><div class=\"line\"><span class=\"comment\"> * Date: 2019/5/17</span></div><div class=\"line\"><span class=\"comment\"> * Time: PM9:08</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\">session_start();</div><div class=\"line\">header(<span class=\"string\">\"Content-type: text/html; charset=gb2312\"</span>);  <span class=\"comment\">//视学校而定，博主学校是gbk编码，php也采用的gbk编码方式</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//将表格转换成数组函数</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_td_array</span><span class=\"params\">($table)</span> </span>&#123;</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;table[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;tr[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;td[^&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\"&lt;/tr&gt;\"</span>,<span class=\"string\">\"&#123;tr&#125;\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\"&lt;/td&gt;\"</span>,<span class=\"string\">\"&#123;td&#125;\"</span>,$table);</div><div class=\"line\">    <span class=\"comment\">//去掉 HTML 标记</span></div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'&lt;[/!]*?[^&lt;&gt;]*?&gt;'si\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    <span class=\"comment\">//去掉空白字符</span></div><div class=\"line\">    $table = preg_replace(<span class=\"string\">\"'([rn])[s]+'\"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = preg_replace(<span class=\"string\">'/&amp;nbsp;/'</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = str_replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>,$table);</div><div class=\"line\">    $table = explode(<span class=\"string\">'&#123;tr&#125;'</span>, $table);</div><div class=\"line\">    array_pop($table);</div><div class=\"line\">    <span class=\"keyword\">foreach</span> ($table <span class=\"keyword\">as</span> $key=&gt;$tr) &#123;</div><div class=\"line\">        $td = explode(<span class=\"string\">'&#123;td&#125;'</span>, $tr);</div><div class=\"line\">        array_pop($td);</div><div class=\"line\">        $td_array[] = $td;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $td_array;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login_post</span><span class=\"params\">($url, $cookie, $post)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    $ch = curl_init();</div><div class=\"line\">    curl_setopt($ch, CURLOPT_URL, $url);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_HEADER, <span class=\"number\">0</span>);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);  <span class=\"comment\">//不自动输出数据，要echo才行</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class=\"number\">1</span>);  <span class=\"comment\">//重要，抓取跳转后数据</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie);</div><div class=\"line\">    curl_setopt($ch, CURLOPT_REFERER, <span class=\"string\">'http://202.119.225.34/'</span>);  <span class=\"comment\">//重要，302跳转需要referer，可以在Request Headers找到</span></div><div class=\"line\">    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);  <span class=\"comment\">//post提交数据</span></div><div class=\"line\">    $result = curl_exec($ch);</div><div class=\"line\"><span class=\"comment\">//    $content = curl_getinfo($ch);</span></div><div class=\"line\"><span class=\"comment\">//    echo json_encode($content);</span></div><div class=\"line\">    curl_close($ch);</div><div class=\"line\">    <span class=\"keyword\">return</span> $result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$_SESSION[<span class=\"string\">'xh'</span>] = $_POST[<span class=\"string\">'xh'</span>];</div><div class=\"line\">$xh = $_POST[<span class=\"string\">'xh'</span>];</div><div class=\"line\">$pw = $_POST[<span class=\"string\">'pw'</span>];</div><div class=\"line\">$code = $_POST[<span class=\"string\">'code'</span>];</div><div class=\"line\">$cookie = dirname(<span class=\"keyword\">__FILE__</span>) . <span class=\"string\">'/cookie/'</span> . $_SESSION[<span class=\"string\">'id'</span>] . <span class=\"string\">'.txt'</span>;</div><div class=\"line\">$url = <span class=\"string\">\"http://202.119.225.34/default2.aspx\"</span>;</div><div class=\"line\">$con1=login_post($url,$cookie,<span class=\"string\">''</span>);</div><div class=\"line\">    preg_match_all(<span class=\"string\">'/&lt;input type=\"hidden\" name=\"__VIEWSTATE\" value=\"([^&lt;&gt;]+)\" \\/&gt;/'</span>, $con1, $view); <span class=\"comment\">//获取__VIEWSTATE字段并存到$view数组中</span></div><div class=\"line\">    $post=<span class=\"keyword\">array</span>(</div><div class=\"line\">        <span class=\"string\">'__VIEWSTATE'</span>=&gt;$view[<span class=\"number\">1</span>][<span class=\"number\">0</span>],</div><div class=\"line\">        <span class=\"string\">'txtUserName'</span>=&gt;$xh,</div><div class=\"line\">        <span class=\"string\">'TextBox2'</span>=&gt;$pw,</div><div class=\"line\">        <span class=\"string\">'txtSecretCode'</span>=&gt;$code,</div><div class=\"line\">        <span class=\"string\">'RadioButtonList1'</span>=&gt;<span class=\"string\">'%D1%A7%C9%FA'</span>,  <span class=\"comment\">//“学生”的gbk编码</span></div><div class=\"line\">        <span class=\"string\">'Button1'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'lbLanguage'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'hidPdrs'</span>=&gt;<span class=\"string\">''</span>,</div><div class=\"line\">        <span class=\"string\">'hidsc'</span>=&gt;<span class=\"string\">''</span></div><div class=\"line\">    );</div><div class=\"line\">    $con2=login_post($url,$cookie,http_build_query($post)); <span class=\"comment\">//将数组连接成字符串</span></div><div class=\"line\">    preg_match_all(<span class=\"string\">'/&lt;span id=\"xhxm\"&gt;([^&lt;&gt;]+)/'</span>, $con2, $xm);</div><div class=\"line\">\t$xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = substr($xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>], <span class=\"number\">0</span>, <span class=\"number\">-4</span>);</div><div class=\"line\">$url2 = <span class=\"string\">\"http://202.119.225.34/xskbcx.aspx?xh=\"</span> . $_SESSION[<span class=\"string\">'xh'</span>] . <span class=\"string\">\"&amp;xm=\"</span> . $xm[<span class=\"number\">1</span>][<span class=\"number\">0</span>];</div><div class=\"line\">$con3 = login_post($url2, $cookie, <span class=\"string\">''</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//echo $con3;</span></div><div class=\"line\">print_r($con3);</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>如果代码都正确，你将看到如下页面</p>\n<p><img src=\"http://i4.buimg.com/588926/eda145ce10fe2f0a.png\" alt=\"\"></p>\n<p><img src=\"http://i4.buimg.com/588926/fad605f358e06ff5.png\" alt=\"\"></p>\n<p>课表成功拿到。</p>\n<p>同理可以用正则表达式拿到成绩等，可以用这些数据做个微信公众号用来查询成绩课表等等。这些以后有时间再深入了解。</p>\n"},{"title":"php面试题-1[附答案]","copyright":true,"date":"2017-05-30T09:27:50.000Z","_content":"\n一份不错的php面试题,附答案\n\n<!--more-->\n\n一、基础题\n\n1. 写出如下程序的输出结果\n\n```\n<?php\n    $str1 = null;\n    $str2 = false;\n    echo $str1==$str2 ? '相等' : '不相等';\n    $str3 = '';\n    $str4 = 0;\n    echo $str3==$str4 ? '相等' : '不相等';\n    $str5 = 0;\n    $str6 = '0';\n    echo $str5===$str6 ? '相等' : '不相等';\n?>\n```\n\n2. 写出如下程序的输出结果\n\n```\n<?php\n    $a1 = null;\n    $a2 = false;\n    $a3 = 0;\n    $a4 = '';\n    $a5 = '0';\n    $a6 = 'null';\n    $a7 = array();\n    $a8 = array(array());\n    echo empty($a1) ? 'true' : 'false';\n    echo empty($a2) ? 'true' : 'false';\n    echo empty($a3) ? 'true' : 'false';\n    echo empty($a4) ? 'true' : 'false';\n    echo empty($a5) ? 'true' : 'false';\n    echo empty($a6) ? 'true' : 'false';\n    echo empty($a7) ? 'true' : 'false';\n    echo empty($a8) ? 'true' : 'false';\n?>\n```\n\n3. 写出如下程序的输出结果\n\n```\n<?php\n    $test = 'aaaaaa';\n    $abc = & $test;\n    unset($test);\n    echo $abc;\n?>\n```\n\n4. 写出如下程序的输出结果\n\n```\n<?php\n    $count = 5;\n    function get_count(){\n        static $count = 0;\n        return $count++;\n    }\n    echo $count;\n    ++$count;\n    echo get_count();\n    echo get_count();\n?>\n```\n\n5. 写出如下程序的输出结果\n\n```\n<?php\n    $GLOBALS['var1'] = 5;\n    $var2 = 1;\n    function get_value(){\n        global $var2;\n        $var1 = 0;\n        return $var2++;\n    }\n    get_value();\n    echo $var1;\n    echo $var2;\n?>\n```\n\n6. 写出如下程序的输出结果\n\n```\n<?php\n    function get_arr($arr){\n        unset($arr[0]);\n    }\n    $arr1 = array(1, 2);\n    $arr2 = array(1, 2);\n    get_arr(&$arr1);\n    get_arr($arr2);\n    echo count($arr1);\n    echo count($arr2);\n?>\n```\n\n7. 使用五种以上方式获取一个文件的扩展名\n\n要求：dir/upload.image.jpg，找出 .jpg 或者 jpg ，\n必须使用PHP自带的处理函数进行处理，方法不能明显重复，可以封装成函数，比如 get_ext1($file_name), get_ext2($file_name)\n二、算法题\n\n1. 使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组\n2. 使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组\n3. 写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数\n\n【答案】\n（以下答案不一定是最好的，只是一个简单的参考）\n一、基础题\n\n1. 相等 相等 不相等\n2. true true true true true false true false\n3. aaaaaa    参考: [http://my.oschina.net/banbo/blog/303306](http://my.oschina.net/banbo/blog/303306) 里面的结论二\n4. 5 0 1\n5. 5 2\n6. 1 2\n7. 使用五种以上方式获取一个文件的扩展名\n\n```\nfunction get_ext1($file_name){\n    return strrchr($file_name, '.');\n}\nfunction get_ext2($file_name){\n    return substr($file_name, strrpos($file_name, '.'));\n}\nfunction get_ext3($file_name){\n    return array_pop(explode('.', $file_name));\n}\nfunction get_ext4($file_name){\n    return pathinfo($file_name, PATHINFO_EXTENSION);\n}\nfunction get_ext5($file_name){\n    return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), '.')));\n}\n```\n\n二、算法题\n\n1. 使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组\n\n冒泡排序（数组排序）\n\n```\nfunction bubble_sort($array){\n    $count = count($array);\n    if ($count <= 0) return false;\n    for($i=0; $i<$count; $i++){\n        for($j=$i; $j<$count-1; $j++){\n            if ($array[$i] > $array[$j]){\n                $tmp = $array[$i];\n                $array[$i] = $array[$j];\n                $array[$j] = $tmp;\n            }\n        }\n    }\n    return $array;\n}\n```\n\n快速排序（数组排序）\n\n```\nfunction quick_sort($array) {\n    if (count($array) <= 1) return $array;\n    $key = $array[0];\n    $left_arr = array();\n    $right_arr = array();\n    for ($i=1; $i<count($array); $i++){\n        if ($array[$i] <= $key)\n            $left_arr[] = $array[$i];\n        else\n            $right_arr[] = $array[$i];\n    }\n    $left_arr = quick_sort($left_arr);\n    $right_arr = quick_sort($right_arr);\n    return array_merge($left_arr, array($key), $right_arr);\n}\n```\n\n2. 使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组\n\n二分查找（数组里查找某个元素）\n\n```\nfunction bin_sch($array, $low, $high, $k){\n    if ($low <= $high){\n    $mid = intval(($low+$high)/2);\n    if ($array[$mid] == $k){\n    return $mid;\n    }elseif ($k < $array[$mid]){\n    return bin_sch($array, $low, $mid-1, $k);\n    }else{\n    return bin_sch($array, $mid+1, $high, $k);\n    }\n    }\n    return -1;\n}\n```\n\n顺序查找（数组里查找某个元素）\n\n```\nfunction seq_sch($array, $n, $k){\n    $array[$n] = $k;\n    for($i=0; $i<$n; $i++){\n        if($array[$i]==$k){\n            break;\n        }\n    }\n    if ($i<$n){\n        return $i;\n    }else{\n        return -1;\n    }\n}\n```\n\n3. 写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数\n\n二维数组排序， $arr是数据，$keys是排序的健值，$order是排序规则，1是升序，0是降序\n\n```Php\nfunction array_sort($arr, $keys, $order=0) {\n    if (!is_array($arr)) {\n        return false;\n    }\n    $keysvalue = array();\n    foreach($arr as $key => $val) {\n        $keysvalue[$key] = $val[$keys];\n    }\n    if($order == 0){\n        asort($keysvalue);\n    }else {\n        arsort($keysvalue);\n    }\n    reset($keysvalue);\n    foreach($keysvalue as $key => $vals) {\n        $keysort[$key] = $key;\n    }\n    $new_array = array();\n    foreach($keysort as $key => $val) {\n        $new_array[$key] = $arr[$val];\n    }\n    return $new_array;\n}\n```\n\n[原文地址](https://my.oschina.net/banbo/blog/303308)","source":"_posts/php面试题-1-附答案.md","raw":"---\ntitle: 'php面试题-1[附答案]'\ncopyright: true\ndate: 2017-05-30 17:27:50\ntags: php\n---\n\n一份不错的php面试题,附答案\n\n<!--more-->\n\n一、基础题\n\n1. 写出如下程序的输出结果\n\n```\n<?php\n    $str1 = null;\n    $str2 = false;\n    echo $str1==$str2 ? '相等' : '不相等';\n    $str3 = '';\n    $str4 = 0;\n    echo $str3==$str4 ? '相等' : '不相等';\n    $str5 = 0;\n    $str6 = '0';\n    echo $str5===$str6 ? '相等' : '不相等';\n?>\n```\n\n2. 写出如下程序的输出结果\n\n```\n<?php\n    $a1 = null;\n    $a2 = false;\n    $a3 = 0;\n    $a4 = '';\n    $a5 = '0';\n    $a6 = 'null';\n    $a7 = array();\n    $a8 = array(array());\n    echo empty($a1) ? 'true' : 'false';\n    echo empty($a2) ? 'true' : 'false';\n    echo empty($a3) ? 'true' : 'false';\n    echo empty($a4) ? 'true' : 'false';\n    echo empty($a5) ? 'true' : 'false';\n    echo empty($a6) ? 'true' : 'false';\n    echo empty($a7) ? 'true' : 'false';\n    echo empty($a8) ? 'true' : 'false';\n?>\n```\n\n3. 写出如下程序的输出结果\n\n```\n<?php\n    $test = 'aaaaaa';\n    $abc = & $test;\n    unset($test);\n    echo $abc;\n?>\n```\n\n4. 写出如下程序的输出结果\n\n```\n<?php\n    $count = 5;\n    function get_count(){\n        static $count = 0;\n        return $count++;\n    }\n    echo $count;\n    ++$count;\n    echo get_count();\n    echo get_count();\n?>\n```\n\n5. 写出如下程序的输出结果\n\n```\n<?php\n    $GLOBALS['var1'] = 5;\n    $var2 = 1;\n    function get_value(){\n        global $var2;\n        $var1 = 0;\n        return $var2++;\n    }\n    get_value();\n    echo $var1;\n    echo $var2;\n?>\n```\n\n6. 写出如下程序的输出结果\n\n```\n<?php\n    function get_arr($arr){\n        unset($arr[0]);\n    }\n    $arr1 = array(1, 2);\n    $arr2 = array(1, 2);\n    get_arr(&$arr1);\n    get_arr($arr2);\n    echo count($arr1);\n    echo count($arr2);\n?>\n```\n\n7. 使用五种以上方式获取一个文件的扩展名\n\n要求：dir/upload.image.jpg，找出 .jpg 或者 jpg ，\n必须使用PHP自带的处理函数进行处理，方法不能明显重复，可以封装成函数，比如 get_ext1($file_name), get_ext2($file_name)\n二、算法题\n\n1. 使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组\n2. 使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组\n3. 写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数\n\n【答案】\n（以下答案不一定是最好的，只是一个简单的参考）\n一、基础题\n\n1. 相等 相等 不相等\n2. true true true true true false true false\n3. aaaaaa    参考: [http://my.oschina.net/banbo/blog/303306](http://my.oschina.net/banbo/blog/303306) 里面的结论二\n4. 5 0 1\n5. 5 2\n6. 1 2\n7. 使用五种以上方式获取一个文件的扩展名\n\n```\nfunction get_ext1($file_name){\n    return strrchr($file_name, '.');\n}\nfunction get_ext2($file_name){\n    return substr($file_name, strrpos($file_name, '.'));\n}\nfunction get_ext3($file_name){\n    return array_pop(explode('.', $file_name));\n}\nfunction get_ext4($file_name){\n    return pathinfo($file_name, PATHINFO_EXTENSION);\n}\nfunction get_ext5($file_name){\n    return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), '.')));\n}\n```\n\n二、算法题\n\n1. 使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组\n\n冒泡排序（数组排序）\n\n```\nfunction bubble_sort($array){\n    $count = count($array);\n    if ($count <= 0) return false;\n    for($i=0; $i<$count; $i++){\n        for($j=$i; $j<$count-1; $j++){\n            if ($array[$i] > $array[$j]){\n                $tmp = $array[$i];\n                $array[$i] = $array[$j];\n                $array[$j] = $tmp;\n            }\n        }\n    }\n    return $array;\n}\n```\n\n快速排序（数组排序）\n\n```\nfunction quick_sort($array) {\n    if (count($array) <= 1) return $array;\n    $key = $array[0];\n    $left_arr = array();\n    $right_arr = array();\n    for ($i=1; $i<count($array); $i++){\n        if ($array[$i] <= $key)\n            $left_arr[] = $array[$i];\n        else\n            $right_arr[] = $array[$i];\n    }\n    $left_arr = quick_sort($left_arr);\n    $right_arr = quick_sort($right_arr);\n    return array_merge($left_arr, array($key), $right_arr);\n}\n```\n\n2. 使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组\n\n二分查找（数组里查找某个元素）\n\n```\nfunction bin_sch($array, $low, $high, $k){\n    if ($low <= $high){\n    $mid = intval(($low+$high)/2);\n    if ($array[$mid] == $k){\n    return $mid;\n    }elseif ($k < $array[$mid]){\n    return bin_sch($array, $low, $mid-1, $k);\n    }else{\n    return bin_sch($array, $mid+1, $high, $k);\n    }\n    }\n    return -1;\n}\n```\n\n顺序查找（数组里查找某个元素）\n\n```\nfunction seq_sch($array, $n, $k){\n    $array[$n] = $k;\n    for($i=0; $i<$n; $i++){\n        if($array[$i]==$k){\n            break;\n        }\n    }\n    if ($i<$n){\n        return $i;\n    }else{\n        return -1;\n    }\n}\n```\n\n3. 写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数\n\n二维数组排序， $arr是数据，$keys是排序的健值，$order是排序规则，1是升序，0是降序\n\n```Php\nfunction array_sort($arr, $keys, $order=0) {\n    if (!is_array($arr)) {\n        return false;\n    }\n    $keysvalue = array();\n    foreach($arr as $key => $val) {\n        $keysvalue[$key] = $val[$keys];\n    }\n    if($order == 0){\n        asort($keysvalue);\n    }else {\n        arsort($keysvalue);\n    }\n    reset($keysvalue);\n    foreach($keysvalue as $key => $vals) {\n        $keysort[$key] = $key;\n    }\n    $new_array = array();\n    foreach($keysort as $key => $val) {\n        $new_array[$key] = $arr[$val];\n    }\n    return $new_array;\n}\n```\n\n[原文地址](https://my.oschina.net/banbo/blog/303308)","slug":"php面试题-1-附答案","published":1,"updated":"2017-10-16T07:16:33.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28f000rq0faon4guhhz","content":"<p>一份不错的php面试题,附答案</p>\n<a id=\"more\"></a>\n<p>一、基础题</p>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $str1 = null;</div><div class=\"line\">    $str2 = false;</div><div class=\"line\">    echo $str1==$str2 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">    $str3 = &apos;&apos;;</div><div class=\"line\">    $str4 = 0;</div><div class=\"line\">    echo $str3==$str4 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">    $str5 = 0;</div><div class=\"line\">    $str6 = &apos;0&apos;;</div><div class=\"line\">    echo $str5===$str6 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $a1 = null;</div><div class=\"line\">    $a2 = false;</div><div class=\"line\">    $a3 = 0;</div><div class=\"line\">    $a4 = &apos;&apos;;</div><div class=\"line\">    $a5 = &apos;0&apos;;</div><div class=\"line\">    $a6 = &apos;null&apos;;</div><div class=\"line\">    $a7 = array();</div><div class=\"line\">    $a8 = array(array());</div><div class=\"line\">    echo empty($a1) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a2) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a3) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a4) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a5) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a6) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a7) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a8) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $test = &apos;aaaaaa&apos;;</div><div class=\"line\">    $abc = &amp; $test;</div><div class=\"line\">    unset($test);</div><div class=\"line\">    echo $abc;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $count = 5;</div><div class=\"line\">    function get_count()&#123;</div><div class=\"line\">        static $count = 0;</div><div class=\"line\">        return $count++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    echo $count;</div><div class=\"line\">    ++$count;</div><div class=\"line\">    echo get_count();</div><div class=\"line\">    echo get_count();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $GLOBALS[&apos;var1&apos;] = 5;</div><div class=\"line\">    $var2 = 1;</div><div class=\"line\">    function get_value()&#123;</div><div class=\"line\">        global $var2;</div><div class=\"line\">        $var1 = 0;</div><div class=\"line\">        return $var2++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    get_value();</div><div class=\"line\">    echo $var1;</div><div class=\"line\">    echo $var2;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    function get_arr($arr)&#123;</div><div class=\"line\">        unset($arr[0]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    $arr1 = array(1, 2);</div><div class=\"line\">    $arr2 = array(1, 2);</div><div class=\"line\">    get_arr(&amp;$arr1);</div><div class=\"line\">    get_arr($arr2);</div><div class=\"line\">    echo count($arr1);</div><div class=\"line\">    echo count($arr2);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>使用五种以上方式获取一个文件的扩展名</li>\n</ol>\n<p>要求：dir/upload.image.jpg，找出 .jpg 或者 jpg ，<br>必须使用PHP自带的处理函数进行处理，方法不能明显重复，可以封装成函数，比如 get_ext1($file_name), get_ext2($file_name)<br>二、算法题</p>\n<ol>\n<li>使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组</li>\n<li>使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组</li>\n<li>写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数</li>\n</ol>\n<p>【答案】<br>（以下答案不一定是最好的，只是一个简单的参考）<br>一、基础题</p>\n<ol>\n<li>相等 相等 不相等</li>\n<li>true true true true true false true false</li>\n<li>aaaaaa    参考: <a href=\"http://my.oschina.net/banbo/blog/303306\" target=\"_blank\" rel=\"external\">http://my.oschina.net/banbo/blog/303306</a> 里面的结论二</li>\n<li>5 0 1</li>\n<li>5 2</li>\n<li>1 2</li>\n<li>使用五种以上方式获取一个文件的扩展名</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function get_ext1($file_name)&#123;</div><div class=\"line\">    return strrchr($file_name, &apos;.&apos;);</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext2($file_name)&#123;</div><div class=\"line\">    return substr($file_name, strrpos($file_name, &apos;.&apos;));</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext3($file_name)&#123;</div><div class=\"line\">    return array_pop(explode(&apos;.&apos;, $file_name));</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext4($file_name)&#123;</div><div class=\"line\">    return pathinfo($file_name, PATHINFO_EXTENSION);</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext5($file_name)&#123;</div><div class=\"line\">    return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), &apos;.&apos;)));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、算法题</p>\n<ol>\n<li>使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组</li>\n</ol>\n<p>冒泡排序（数组排序）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function bubble_sort($array)&#123;</div><div class=\"line\">    $count = count($array);</div><div class=\"line\">    if ($count &lt;= 0) return false;</div><div class=\"line\">    for($i=0; $i&lt;$count; $i++)&#123;</div><div class=\"line\">        for($j=$i; $j&lt;$count-1; $j++)&#123;</div><div class=\"line\">            if ($array[$i] &gt; $array[$j])&#123;</div><div class=\"line\">                $tmp = $array[$i];</div><div class=\"line\">                $array[$i] = $array[$j];</div><div class=\"line\">                $array[$j] = $tmp;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return $array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>快速排序（数组排序）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function quick_sort($array) &#123;</div><div class=\"line\">    if (count($array) &lt;= 1) return $array;</div><div class=\"line\">    $key = $array[0];</div><div class=\"line\">    $left_arr = array();</div><div class=\"line\">    $right_arr = array();</div><div class=\"line\">    for ($i=1; $i&lt;count($array); $i++)&#123;</div><div class=\"line\">        if ($array[$i] &lt;= $key)</div><div class=\"line\">            $left_arr[] = $array[$i];</div><div class=\"line\">        else</div><div class=\"line\">            $right_arr[] = $array[$i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    $left_arr = quick_sort($left_arr);</div><div class=\"line\">    $right_arr = quick_sort($right_arr);</div><div class=\"line\">    return array_merge($left_arr, array($key), $right_arr);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组</li>\n</ol>\n<p>二分查找（数组里查找某个元素）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function bin_sch($array, $low, $high, $k)&#123;</div><div class=\"line\">    if ($low &lt;= $high)&#123;</div><div class=\"line\">    $mid = intval(($low+$high)/2);</div><div class=\"line\">    if ($array[$mid] == $k)&#123;</div><div class=\"line\">    return $mid;</div><div class=\"line\">    &#125;elseif ($k &lt; $array[$mid])&#123;</div><div class=\"line\">    return bin_sch($array, $low, $mid-1, $k);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">    return bin_sch($array, $mid+1, $high, $k);</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return -1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>顺序查找（数组里查找某个元素）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function seq_sch($array, $n, $k)&#123;</div><div class=\"line\">    $array[$n] = $k;</div><div class=\"line\">    for($i=0; $i&lt;$n; $i++)&#123;</div><div class=\"line\">        if($array[$i]==$k)&#123;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if ($i&lt;$n)&#123;</div><div class=\"line\">        return $i;</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        return -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数</li>\n</ol>\n<p>二维数组排序， $arr是数据，$keys是排序的健值，$order是排序规则，1是升序，0是降序</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">array_sort</span><span class=\"params\">($arr, $keys, $order=<span class=\"number\">0</span>)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!is_array($arr)) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    $keysvalue = <span class=\"keyword\">array</span>();</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($arr <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</div><div class=\"line\">        $keysvalue[$key] = $val[$keys];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>($order == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        asort($keysvalue);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        arsort($keysvalue);</div><div class=\"line\">    &#125;</div><div class=\"line\">    reset($keysvalue);</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($keysvalue <span class=\"keyword\">as</span> $key =&gt; $vals) &#123;</div><div class=\"line\">        $keysort[$key] = $key;</div><div class=\"line\">    &#125;</div><div class=\"line\">    $new_array = <span class=\"keyword\">array</span>();</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($keysort <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</div><div class=\"line\">        $new_array[$key] = $arr[$val];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $new_array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://my.oschina.net/banbo/blog/303308\" target=\"_blank\" rel=\"external\">原文地址</a></p>\n","site":{"data":{}},"excerpt":"<p>一份不错的php面试题,附答案</p>","more":"<p>一、基础题</p>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $str1 = null;</div><div class=\"line\">    $str2 = false;</div><div class=\"line\">    echo $str1==$str2 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">    $str3 = &apos;&apos;;</div><div class=\"line\">    $str4 = 0;</div><div class=\"line\">    echo $str3==$str4 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">    $str5 = 0;</div><div class=\"line\">    $str6 = &apos;0&apos;;</div><div class=\"line\">    echo $str5===$str6 ? &apos;相等&apos; : &apos;不相等&apos;;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $a1 = null;</div><div class=\"line\">    $a2 = false;</div><div class=\"line\">    $a3 = 0;</div><div class=\"line\">    $a4 = &apos;&apos;;</div><div class=\"line\">    $a5 = &apos;0&apos;;</div><div class=\"line\">    $a6 = &apos;null&apos;;</div><div class=\"line\">    $a7 = array();</div><div class=\"line\">    $a8 = array(array());</div><div class=\"line\">    echo empty($a1) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a2) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a3) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a4) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a5) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a6) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a7) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">    echo empty($a8) ? &apos;true&apos; : &apos;false&apos;;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $test = &apos;aaaaaa&apos;;</div><div class=\"line\">    $abc = &amp; $test;</div><div class=\"line\">    unset($test);</div><div class=\"line\">    echo $abc;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $count = 5;</div><div class=\"line\">    function get_count()&#123;</div><div class=\"line\">        static $count = 0;</div><div class=\"line\">        return $count++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    echo $count;</div><div class=\"line\">    ++$count;</div><div class=\"line\">    echo get_count();</div><div class=\"line\">    echo get_count();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    $GLOBALS[&apos;var1&apos;] = 5;</div><div class=\"line\">    $var2 = 1;</div><div class=\"line\">    function get_value()&#123;</div><div class=\"line\">        global $var2;</div><div class=\"line\">        $var1 = 0;</div><div class=\"line\">        return $var2++;</div><div class=\"line\">    &#125;</div><div class=\"line\">    get_value();</div><div class=\"line\">    echo $var1;</div><div class=\"line\">    echo $var2;</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>写出如下程序的输出结果</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">    function get_arr($arr)&#123;</div><div class=\"line\">        unset($arr[0]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    $arr1 = array(1, 2);</div><div class=\"line\">    $arr2 = array(1, 2);</div><div class=\"line\">    get_arr(&amp;$arr1);</div><div class=\"line\">    get_arr($arr2);</div><div class=\"line\">    echo count($arr1);</div><div class=\"line\">    echo count($arr2);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>使用五种以上方式获取一个文件的扩展名</li>\n</ol>\n<p>要求：dir/upload.image.jpg，找出 .jpg 或者 jpg ，<br>必须使用PHP自带的处理函数进行处理，方法不能明显重复，可以封装成函数，比如 get_ext1($file_name), get_ext2($file_name)<br>二、算法题</p>\n<ol>\n<li>使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组</li>\n<li>使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组</li>\n<li>写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数</li>\n</ol>\n<p>【答案】<br>（以下答案不一定是最好的，只是一个简单的参考）<br>一、基础题</p>\n<ol>\n<li>相等 相等 不相等</li>\n<li>true true true true true false true false</li>\n<li>aaaaaa    参考: <a href=\"http://my.oschina.net/banbo/blog/303306\" target=\"_blank\" rel=\"external\">http://my.oschina.net/banbo/blog/303306</a> 里面的结论二</li>\n<li>5 0 1</li>\n<li>5 2</li>\n<li>1 2</li>\n<li>使用五种以上方式获取一个文件的扩展名</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function get_ext1($file_name)&#123;</div><div class=\"line\">    return strrchr($file_name, &apos;.&apos;);</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext2($file_name)&#123;</div><div class=\"line\">    return substr($file_name, strrpos($file_name, &apos;.&apos;));</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext3($file_name)&#123;</div><div class=\"line\">    return array_pop(explode(&apos;.&apos;, $file_name));</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext4($file_name)&#123;</div><div class=\"line\">    return pathinfo($file_name, PATHINFO_EXTENSION);</div><div class=\"line\">&#125;</div><div class=\"line\">function get_ext5($file_name)&#123;</div><div class=\"line\">    return strrev(substr(strrev($file_name), 0, strpos(strrev($file_name), &apos;.&apos;)));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>二、算法题</p>\n<ol>\n<li>使用PHP描述冒泡排序和快速排序算法，对象可以是一个数组</li>\n</ol>\n<p>冒泡排序（数组排序）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function bubble_sort($array)&#123;</div><div class=\"line\">    $count = count($array);</div><div class=\"line\">    if ($count &lt;= 0) return false;</div><div class=\"line\">    for($i=0; $i&lt;$count; $i++)&#123;</div><div class=\"line\">        for($j=$i; $j&lt;$count-1; $j++)&#123;</div><div class=\"line\">            if ($array[$i] &gt; $array[$j])&#123;</div><div class=\"line\">                $tmp = $array[$i];</div><div class=\"line\">                $array[$i] = $array[$j];</div><div class=\"line\">                $array[$j] = $tmp;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return $array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>快速排序（数组排序）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function quick_sort($array) &#123;</div><div class=\"line\">    if (count($array) &lt;= 1) return $array;</div><div class=\"line\">    $key = $array[0];</div><div class=\"line\">    $left_arr = array();</div><div class=\"line\">    $right_arr = array();</div><div class=\"line\">    for ($i=1; $i&lt;count($array); $i++)&#123;</div><div class=\"line\">        if ($array[$i] &lt;= $key)</div><div class=\"line\">            $left_arr[] = $array[$i];</div><div class=\"line\">        else</div><div class=\"line\">            $right_arr[] = $array[$i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    $left_arr = quick_sort($left_arr);</div><div class=\"line\">    $right_arr = quick_sort($right_arr);</div><div class=\"line\">    return array_merge($left_arr, array($key), $right_arr);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>使用PHP描述顺序查找和二分查找（也叫做折半查找）算法，顺序查找必须考虑效率，对象可以是一个有序数组</li>\n</ol>\n<p>二分查找（数组里查找某个元素）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function bin_sch($array, $low, $high, $k)&#123;</div><div class=\"line\">    if ($low &lt;= $high)&#123;</div><div class=\"line\">    $mid = intval(($low+$high)/2);</div><div class=\"line\">    if ($array[$mid] == $k)&#123;</div><div class=\"line\">    return $mid;</div><div class=\"line\">    &#125;elseif ($k &lt; $array[$mid])&#123;</div><div class=\"line\">    return bin_sch($array, $low, $mid-1, $k);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">    return bin_sch($array, $mid+1, $high, $k);</div><div class=\"line\">    &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return -1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>顺序查找（数组里查找某个元素）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function seq_sch($array, $n, $k)&#123;</div><div class=\"line\">    $array[$n] = $k;</div><div class=\"line\">    for($i=0; $i&lt;$n; $i++)&#123;</div><div class=\"line\">        if($array[$i]==$k)&#123;</div><div class=\"line\">            break;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if ($i&lt;$n)&#123;</div><div class=\"line\">        return $i;</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        return -1;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>写一个二维数组排序算法函数，能够具有通用性，可以调用php内置函数</li>\n</ol>\n<p>二维数组排序， $arr是数据，$keys是排序的健值，$order是排序规则，1是升序，0是降序</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">array_sort</span><span class=\"params\">($arr, $keys, $order=<span class=\"number\">0</span>)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!is_array($arr)) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    $keysvalue = <span class=\"keyword\">array</span>();</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($arr <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</div><div class=\"line\">        $keysvalue[$key] = $val[$keys];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>($order == <span class=\"number\">0</span>)&#123;</div><div class=\"line\">        asort($keysvalue);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        arsort($keysvalue);</div><div class=\"line\">    &#125;</div><div class=\"line\">    reset($keysvalue);</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($keysvalue <span class=\"keyword\">as</span> $key =&gt; $vals) &#123;</div><div class=\"line\">        $keysort[$key] = $key;</div><div class=\"line\">    &#125;</div><div class=\"line\">    $new_array = <span class=\"keyword\">array</span>();</div><div class=\"line\">    <span class=\"keyword\">foreach</span>($keysort <span class=\"keyword\">as</span> $key =&gt; $val) &#123;</div><div class=\"line\">        $new_array[$key] = $arr[$val];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> $new_array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://my.oschina.net/banbo/blog/303308\" target=\"_blank\" rel=\"external\">原文地址</a></p>"},{"title":"php面试题-2-附答案","copyright":true,"date":"2017-06-01T11:07:40.000Z","_content":"\n#### 1、双引号和单引号的区别\n\n- 双引号解释变量，单引号不解释变量\n- 双引号里插入单引号，其中单引号里如果有变量的话，变量解释\n- 双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用{}讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误\n- 双引号解释转义字符，单引号不解释转义字符，但是解释'\\和\\\\\n- 能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）\n\n#### 2、常用的超全局变量(8个)\n\n- $_GET ----->get传送方式\n- $POST ----->post传送方式\n- $REQUEST ----->可以接收到get和post两种方式的值\n- $GLOBALS ----->所有的变量都放在里面\n- $FILE ----->上传文件使用\n- $SERVER ----->系统环境变量\n- $SESSION ----->会话控制的时候会用到\n- $COOKIE ----->会话控制的时候会用到\n\n#### 3、HTTP中POST、GET、PUT、DELETE方式的区别\n\n> HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，我们可以这样理解：url描述了一个网络上资源，而post、get、put、delete就是对这个资源进行增、删、改、查的操作！\n\n##### 3.1表单中get和post提交方式的区别\n\n- get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；post是通过HTTP POST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程\n- 对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据\n- get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高\n\n##### 3.2\n\n- GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。\n- 与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同。\n- POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操作都是用POST请求的。\n- DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。\n\n#### 4、PHP介绍\n\nHypertext Preprocessor----超文本预处理器\n\nPersonal Home Page 原始名称\n\n**目标用途:** 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多\n\n**HTML:** Hypertext Markup Language\n\n**创始人:** 拉姆斯勒·勒多夫Rasmus Lerdorf，1968年生，加拿大滑铁卢大学\n\n勒多夫最开始是为了维护个人网页，用prel语言写了维护程序，之后又用c进行了重写，最终衍生出php/fi\n\n**时间轴:**\n\n- 1995.06.08将PHP/FI公开释出\n- 1995 php2.0，加入了对MySQL的支持\n- 1997 php3.0\n- 2000 php4.0\n- 2008 php5.0\n- 由于php6.0没有完全解决Unicode编码，所以基本没有生产线上的应用，基本只是一款概念产品，很多功能已经在php5.3.3和php5.3.4上实现\n\n**常见的IDE(Intergrated Development Environment):** 集成开发环境\n\n- [Coda（mac）](http://panic.com/coda/)\n- [PHPStrom](http://www.jetbrains.com/phpstorm/)\n- [Adobe Dreamweaver](http://www.adobe.com/)\n- [NetBeans](http://netbeans.org/)\n\n**常见文本编辑器，具备代码高亮：**\n\n- [NodePad++](https://notepad-plus-plus.org/)\n- [SublimeText](http://www.sublimetext.com/)\n\n#### PHP优势\n\n**PHP特性:**\n\n- php独特混合了C,Java,Prel以及PHP自创的语法\n- 可以比CGI或者Prel更快速去执行动态网页，与其他变成语言相比，PHP是讲程序嵌入到HTML文档中去执行，执行效率比完全生成HTML编辑的CGI要高很多，所有的CGI都能实现\n- 支持几乎所有流行的数据库以及操作系统\n- PHP可以使用C,C++进行程序的扩展\n\n**PHP优势:**\n\n- 开放源代码\n- 免费性\n- 快捷性\n- 跨平台强\n- 效率高\n- 图形处理\n- 面向对象\n- 专业专注\n\n**PHP技术应用:**\n\n- 静态页面生成\n- 数据库缓存\n- 过程缓存\n- div+css w3c标准\n- 大负荷\n- 分布式\n- flex\n- 支持MVC\n- Smarty模块引擎\n\n#### PHP认证级别\n\n- 初级 IFE:Index Front Engineer 前端工程师\n- 中级 IPE:Index PHP Engineer PHP工程师\n- 高级 IAE:Index Architecture Engineer 架构工程师\n\n#### 6、echo、print_r、print、var_dump之间的区别\n\n```\n* echo、print是php语句，var_dump和print_r是函数\n* echo 输出一个或多个字符串，中间以逗号隔开，没有返回值是语言结构而不是真正的函数，因此不能作为表达式的一部分使用\n* print也是php的一个关键字，有返回值 只能打印出简单类型变量的值(如int，string)，如果字符串显示成功则返回true，否则返回false\n* print_r 可以打印出复杂类型变量的值(如数组、对象）以列表的形式显示，并以array、object开头，但print_r输出布尔值和NULL的结果没有意义，因为都是打印\"\\n\"，因此print_r()函数更适合调试\n* var_dump() 判断一个变量的类型和长度，并输出变量的数值\n```\n\n#### 7、HTTP状态码\n\n[点击这儿查看HTTP状态码详解](http://www.jianshu.com/p/9ecfda409eeb)\n\n**常见的HTTP状态码：**\n\n- 200 - 请求成功\n- 301 - 资源(网页等)被永久转义到其他URL\n- 404 - 请求的资源(网页等)不存在\n- 505 - 内部服务器错误\n\n**HTTP状态码分类:**\n\n- 1** - 信息，服务器收到的请求，需要请求者继续执行操作\n- 2** - 成功，操作被成功接收并处理\n- 3** - 重定向，需要进一步的操作以完成请求\n- 4** - 客户端错误，请求包含语法错误或者无法完成请求\n- 5** 服务器错误，服务器在处理请求的过程\n  中发生了错误\n\n#### 8、什么是魔术引号\n\n魔术引号是一个将自动将进入PHP脚本的数据进行转义的过程，最好在编码时不要转义而在运行时根据需要而转义\n\n#### 9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码\n\n客户端：`$_SERVER[\"REMOTE_ADDR\"];或者getenv('REMOTE_ADDR')`\n`ip2long进行转换`\n服务器端：`gethostbyname('www.baidu.com')`\n\n##### 10、使用那些工具进行版本控制\n\ncvs、svn、vss、git\n\n#### 11、优化数据库的方法\n\n###### [MySQL数据库优化的八大方式（经典必看）点击获取](http://www.jianshu.com/p/dac715a88b44)\n\n- 选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如'省份'、'性别'最好适用ENUM\n- 使用连接(JOIN)来代替子查询\n- 适用联合(UNION)来代替手动创建的临时表\n- 事务处理\n- 锁定表、优化事务处理\n- 适用外键，优化锁定表\n- 建立索引\n- 优化查询语句\n\n#### 12、是否使用过模板引擎？使用的模板引擎的名字是？\n\n[**Smarty:**](http://www.smarty.net/)Smarty算是一种很老的PHP模板引擎了，它曾是我使用这门语言模板的最初选择。虽然它的更新已经不算频繁了，并且缺少新一代模板引擎所具有的部分特性，但是它仍然值得一看。\n\n#### 13、对于大流量网站，采用什么方法来解决访问量的问题\n\n- 确认服务器硬件是否能够支持当前的流量\n- 数据库读写分离，优化数据表\n- 程序功能规则，禁止外部的盗链\n- 控制大文件的下载\n- 使用不同主机分流主要流量\n\n#### 14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们\n\n- require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行\n- include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去\n\n注意:包含文件不存在或者语法错误的时候require是致命的，而include不是\n\n- require_once表示了只包含一次，避免了重复包含\n\n#### 15、谈谈mvc的认识\n\n由模型、视图、控制器完成的应用程序，由模型发出要实现的功能到控制器，控制器接收组织功能传递给视图\n\n#### 16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？\n\n变量默认总是传值赋值，那也就是说，当将一个表达式的值赋予一个变量时，整个表达式的值被赋值到目标变量，这意味着：**当一个变量的赋予另外一个变量时，改变其中一个变量的值，将不会影响到另外一个变量**\n\nphp也提供了另外一种方式给变量赋值：引用赋值。这意味着新的变量简单的__引用__*(换言之，成为了其别名或者指向)***了原始变量**。改动的新的变量将影响到原始变量，反之亦然。使用引用赋值，简单地将一个&符号加到将要赋值的变量前(源变量)\n\n对象默认是传引用\n对于较大是的数据，传引用比较好，这样可以节省内存的开销.\n\n#### 17、isset、empty、is_null的区别\n\nisset 判断变量是否定义或者是否为空\n\n```\n  变量存在返回ture，否则返回false\n  变量定义不赋值返回false\n  unset一个变量，返回false\n  变量赋值为null，返回false\n  \n```\n\nempty：判断变量的值是否为空，能转换为false的都是空，为空返回true，反之返回false。\n\n```\n    \"\",0,\"0\",NULL，FALSE都认为为空，返回true\n    没有任何属性的对象都认为是空\n    \n```\n\nis_null：检测传入的值(值、变量、表达式)是否为null\n\n```\n    定义了，但是赋值为Null\n    定义了，但是没有赋值\n    unset一个变量\n```\n\n#### 18、前端调试的工具\n\n- Firefox的firebug\n- Chrome的开发工具\n- Emmet\n- JSON格式校验工具\n\n#### 19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\n\n索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。\n普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。\n普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。\n主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。\n索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。\n索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。\n\n#### 20.数据库中的事务是什么?\n\n事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作完成，事务则提交，其修改将作用于所有其他数据库进程。如果一个操作失败，则事务将回滚，该事务所有操作的影响都将取消。ACID 四大特性,原子性、隔离性、一致性、持久性。\n\n#### 21.了解XSS攻击吗？如何防止？\n\nXSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。\n使用htmlspecialchars()函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。\n\n#### 22.SQL注入漏洞产生的原因？如何防止？\n\nSQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。\n\n##### 防止SQL注入的方式：\n\n1. 开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置\n2. 执行sql语句时使用addslashes进行sql语句转换\n3. Sql语句书写尽量不要省略双引号和单引号。\n4. 过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。\n5. 提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。\n6. Php配置文件中设置register_globals为off,关闭全局变量注册\n7. 控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。\n\n#### 23.PHP网站的主要攻击方式有哪些？\n\n1. 命令注入(Command Injection)\n2. eval 注入(Eval Injection)\n3. 客户端脚本攻击(Script Insertion)\n4. 跨网站脚本攻击(Cross Site Scripting, XSS)\n5. SQL 注入攻击(SQL injection)\n6. 跨网站请求伪造攻击(Cross Site Request\n   Forgeries, CSRF)\n7. Session 会话劫持(Session Hijacking)\n8. Session 固定攻击(Session Fixation)\n9. HTTP 响应拆分攻击(HTTP Response Splitting)\n10. 文件上传漏洞(File Upload Attack)\n11. 目录穿越漏洞(Directory Traversal)\n12. 远程文件包含攻击(Remote Inclusion)\n13. 动态函数注入攻击(Dynamic Variable\n    Evaluation)\n14. URL 攻击(URL attack)\n15. 表单提交欺骗攻击(Spoofed Form\n    Submissions)\n16. HTTP 请求欺骗攻击(Spoofed HTTP Requests)\n\n#### 24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？\n\n1. 多口就是通过访问不同的文件来完成用户请求。单一入口只 web 程序所有的请求都指向一个脚本文件的。\n2. 单一入口更容易控制权限，方便对 http 请求可以进行安全性检查。\n   缺点：URL 看起来不那么美观，特别是对搜索引擎来说不友好。\n\n#### 25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\n\n##### a)、索引的目的是什么？\n\n1. 快速访问数据表中的特定信息，提高检索速度\n2. 创建唯一性索引，保证数据库表中每一行数据的唯一性。\n3. 加速表和表之间的连接\n4. 使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间\n\n##### b)、索引对数据库系统的负面影响是什么？\n\n**负面影响：**\n创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速度。\n\n##### c)、为数据表建立索引的原则有哪些？\n\n1. 在最频繁使用的、用以缩小查询范围的字段上建立索引。\n2. 在频繁使用的、需要排序的字段上建立索引\n\n##### d)、 什么情况下不宜建立索引？\n\n1. 对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。\n2. 对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等。\n\n#### 26、 简述在MySQL数据库中MyISAM和InnoDB的区别\n\n区别于其他数据库的最重要的特点就是其插件式的表存储引擎。切记：存储引擎是基于表的，而不是数据库。\n\nInnoDB与MyISAM的区别：\n\n**InnoDB存储引擎:** 主要面向OLTP(Online Transaction Processing，在线事务处理)方面的应用，是第一个完整支持ACID事务的存储引擎(BDB第一个支持事务的存储引擎，已经停止开发)。\n\n**特点：**\n\n- 行锁设计、支持外键；\n- 支持类似于Oracle风格的一致性非锁定读(即：默认情况下读取操作不会产生锁)；\n- InnoDB将数据放在一个逻辑的表空间中，由InnoDB自身进行管理。从MySQL4.1版本开始，可以将每个InnoDB存储引擎的表单独存放到一个独立的ibd文件中；\n- InnoDB通过使用MVCC(多版本并发控制：读不会阻塞写，写也不会阻塞读)来获得高并发性，并且实现了SQL标准的4种隔离级别(默认为REPEATABLE级别)；\n- InnoDB还提供了插入缓冲(insert buffer)、二次写(double write)、自适应哈希索引(adaptive hash index)、预读(read ahead)等高性能和高可用的功能；\n- InnoDB采用了聚集(clustered)的方式来存储表中的数据，每张标的存储都按主键的顺序存放(如果没有显式的在建表时指定主键，InnoDB会为每一行生成一个6字节的ROWID，并以此作为主键)；\n- InnoDB表会有三个隐藏字段：除了上面提到了6字节的DB_ROW_ID外，还有6字节的DB_TX_ID(事务ID)和7字节的DB_ROLL_PTR(指向对应回滚段的地址)。这个可以通过innodb monitor看到；\n\n**MyISAM存储引擎:** 是MySQL官方提供的存储引擎，主要面向OLAP(Online Analytical Processing,在线分析处理)方面的应用。\n**特点：**\n\n- 不支持事务，支持表所和全文索引。操作速度快；\n- MyISAM存储引擎表由MYD和MYI组成，MYD用来存放数据文件，MYI用来存放索引文件。MySQL数据库只缓存其索引文件，数据文件的缓存交给操作系统本身来完成；\n  MySQL5.0版本开始，MyISAM默认支持256T的单表数据；\n\n#### 27、 解释MySQL外连接、内连接与自连接的区别\n\n**先说什么是交叉连接:** 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一个表的所有记录和另一个表中的所有记录一一匹配。\n\n**内连接** 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合条件的记录不会出现在结果集中，即内连接只连接匹配的行。\n**外连接** 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个表中\n的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。\n\n左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以NULL来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现在结果集中。左连接和右连接可以互换，MySQL目前还不支持全外连接。\n\n#### 28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\n\nMyISAM、InnoDB、BDB（BerkeleyDB）、Merge、Memory（Heap）、Example、Federated、\nArchive、CSV、Blackhole、MaxDB 等等十几个引擎\n\n#### 29、 什么是面向对象？主要特征是什么？几大原则是什么？\n\n面向对象是程序的一种设计模式，它利于提高程序的重用性，使程序机构更加清晰。 主要特征是：封装、继承、多态。\n五大基本原则： 单一职责原则；开放封闭原则；替换原则； 依赖原则； 接口分离原则。\n\n#### 30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?\n\n　参考答案：\n　　静态路由是由系统管理员设计与构建的路由表规定的路由。适用于网关数量有限的场 合，且网络拓朴结构不经常变化的网络。其缺点是不能动态地适用网络状况的变化，当 网络状况变化后必须由网络管理员修改路由表。\n动态路由是由路由选择协议而动态构建的，路由协议之间通过交换各自所拥有的路由信 息实时更新路由表的内容。动态路由可以自动学习网络的拓朴结构，并更新路由表。其 缺点是路由广播更新信息将占据大量的网络带宽。\n\n#### 31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\n\nMemcahce 是把所有的数据保存在内存当中，采用 hash 表的方式，每条数据由 key 和 value 组成，每个 key 是独一无二的，当要访问某个值的时候先按照找到值，然后返回结果。\nMemcahce 采用 LRU 算法来逐渐把过期数据清除掉。\n\n#### 32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？\n\n流行的 Ajax 框架有 jQuery，Prototype，Dojo，MooTools。\n\nAjax 的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到数据库中的返回数据信息了。所以 Ajax 技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。\n在使用 Ajax 时，涉及到数据传输，即将数据从服务器返回到客户端，服务器端和客户端分别使用不同的脚步语言来处理数据，这就需要一种通用的数据格式，XML 和 json 就是最常用的两种，而 json 比 XML 更简单。\n\n#### 33、Myql中的事务回滚机制概述\n\n事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤销。\n\n　　要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和第二个表都要回到未修改的状态，这就是所谓的事务回滚。\n\n\n\n","source":"_posts/php面试题-2-附答案.md","raw":"---\ntitle: php面试题-2-附答案\ncopyright: true\ndate: 2017-06-01 19:07:40\ntags: php\n---\n\n#### 1、双引号和单引号的区别\n\n- 双引号解释变量，单引号不解释变量\n- 双引号里插入单引号，其中单引号里如果有变量的话，变量解释\n- 双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用{}讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误\n- 双引号解释转义字符，单引号不解释转义字符，但是解释'\\和\\\\\n- 能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）\n\n#### 2、常用的超全局变量(8个)\n\n- $_GET ----->get传送方式\n- $POST ----->post传送方式\n- $REQUEST ----->可以接收到get和post两种方式的值\n- $GLOBALS ----->所有的变量都放在里面\n- $FILE ----->上传文件使用\n- $SERVER ----->系统环境变量\n- $SESSION ----->会话控制的时候会用到\n- $COOKIE ----->会话控制的时候会用到\n\n#### 3、HTTP中POST、GET、PUT、DELETE方式的区别\n\n> HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，我们可以这样理解：url描述了一个网络上资源，而post、get、put、delete就是对这个资源进行增、删、改、查的操作！\n\n##### 3.1表单中get和post提交方式的区别\n\n- get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；post是通过HTTP POST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程\n- 对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据\n- get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高\n\n##### 3.2\n\n- GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。\n- 与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同。\n- POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操作都是用POST请求的。\n- DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。\n\n#### 4、PHP介绍\n\nHypertext Preprocessor----超文本预处理器\n\nPersonal Home Page 原始名称\n\n**目标用途:** 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多\n\n**HTML:** Hypertext Markup Language\n\n**创始人:** 拉姆斯勒·勒多夫Rasmus Lerdorf，1968年生，加拿大滑铁卢大学\n\n勒多夫最开始是为了维护个人网页，用prel语言写了维护程序，之后又用c进行了重写，最终衍生出php/fi\n\n**时间轴:**\n\n- 1995.06.08将PHP/FI公开释出\n- 1995 php2.0，加入了对MySQL的支持\n- 1997 php3.0\n- 2000 php4.0\n- 2008 php5.0\n- 由于php6.0没有完全解决Unicode编码，所以基本没有生产线上的应用，基本只是一款概念产品，很多功能已经在php5.3.3和php5.3.4上实现\n\n**常见的IDE(Intergrated Development Environment):** 集成开发环境\n\n- [Coda（mac）](http://panic.com/coda/)\n- [PHPStrom](http://www.jetbrains.com/phpstorm/)\n- [Adobe Dreamweaver](http://www.adobe.com/)\n- [NetBeans](http://netbeans.org/)\n\n**常见文本编辑器，具备代码高亮：**\n\n- [NodePad++](https://notepad-plus-plus.org/)\n- [SublimeText](http://www.sublimetext.com/)\n\n#### PHP优势\n\n**PHP特性:**\n\n- php独特混合了C,Java,Prel以及PHP自创的语法\n- 可以比CGI或者Prel更快速去执行动态网页，与其他变成语言相比，PHP是讲程序嵌入到HTML文档中去执行，执行效率比完全生成HTML编辑的CGI要高很多，所有的CGI都能实现\n- 支持几乎所有流行的数据库以及操作系统\n- PHP可以使用C,C++进行程序的扩展\n\n**PHP优势:**\n\n- 开放源代码\n- 免费性\n- 快捷性\n- 跨平台强\n- 效率高\n- 图形处理\n- 面向对象\n- 专业专注\n\n**PHP技术应用:**\n\n- 静态页面生成\n- 数据库缓存\n- 过程缓存\n- div+css w3c标准\n- 大负荷\n- 分布式\n- flex\n- 支持MVC\n- Smarty模块引擎\n\n#### PHP认证级别\n\n- 初级 IFE:Index Front Engineer 前端工程师\n- 中级 IPE:Index PHP Engineer PHP工程师\n- 高级 IAE:Index Architecture Engineer 架构工程师\n\n#### 6、echo、print_r、print、var_dump之间的区别\n\n```\n* echo、print是php语句，var_dump和print_r是函数\n* echo 输出一个或多个字符串，中间以逗号隔开，没有返回值是语言结构而不是真正的函数，因此不能作为表达式的一部分使用\n* print也是php的一个关键字，有返回值 只能打印出简单类型变量的值(如int，string)，如果字符串显示成功则返回true，否则返回false\n* print_r 可以打印出复杂类型变量的值(如数组、对象）以列表的形式显示，并以array、object开头，但print_r输出布尔值和NULL的结果没有意义，因为都是打印\"\\n\"，因此print_r()函数更适合调试\n* var_dump() 判断一个变量的类型和长度，并输出变量的数值\n```\n\n#### 7、HTTP状态码\n\n[点击这儿查看HTTP状态码详解](http://www.jianshu.com/p/9ecfda409eeb)\n\n**常见的HTTP状态码：**\n\n- 200 - 请求成功\n- 301 - 资源(网页等)被永久转义到其他URL\n- 404 - 请求的资源(网页等)不存在\n- 505 - 内部服务器错误\n\n**HTTP状态码分类:**\n\n- 1** - 信息，服务器收到的请求，需要请求者继续执行操作\n- 2** - 成功，操作被成功接收并处理\n- 3** - 重定向，需要进一步的操作以完成请求\n- 4** - 客户端错误，请求包含语法错误或者无法完成请求\n- 5** 服务器错误，服务器在处理请求的过程\n  中发生了错误\n\n#### 8、什么是魔术引号\n\n魔术引号是一个将自动将进入PHP脚本的数据进行转义的过程，最好在编码时不要转义而在运行时根据需要而转义\n\n#### 9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码\n\n客户端：`$_SERVER[\"REMOTE_ADDR\"];或者getenv('REMOTE_ADDR')`\n`ip2long进行转换`\n服务器端：`gethostbyname('www.baidu.com')`\n\n##### 10、使用那些工具进行版本控制\n\ncvs、svn、vss、git\n\n#### 11、优化数据库的方法\n\n###### [MySQL数据库优化的八大方式（经典必看）点击获取](http://www.jianshu.com/p/dac715a88b44)\n\n- 选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如'省份'、'性别'最好适用ENUM\n- 使用连接(JOIN)来代替子查询\n- 适用联合(UNION)来代替手动创建的临时表\n- 事务处理\n- 锁定表、优化事务处理\n- 适用外键，优化锁定表\n- 建立索引\n- 优化查询语句\n\n#### 12、是否使用过模板引擎？使用的模板引擎的名字是？\n\n[**Smarty:**](http://www.smarty.net/)Smarty算是一种很老的PHP模板引擎了，它曾是我使用这门语言模板的最初选择。虽然它的更新已经不算频繁了，并且缺少新一代模板引擎所具有的部分特性，但是它仍然值得一看。\n\n#### 13、对于大流量网站，采用什么方法来解决访问量的问题\n\n- 确认服务器硬件是否能够支持当前的流量\n- 数据库读写分离，优化数据表\n- 程序功能规则，禁止外部的盗链\n- 控制大文件的下载\n- 使用不同主机分流主要流量\n\n#### 14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们\n\n- require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行\n- include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去\n\n注意:包含文件不存在或者语法错误的时候require是致命的，而include不是\n\n- require_once表示了只包含一次，避免了重复包含\n\n#### 15、谈谈mvc的认识\n\n由模型、视图、控制器完成的应用程序，由模型发出要实现的功能到控制器，控制器接收组织功能传递给视图\n\n#### 16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？\n\n变量默认总是传值赋值，那也就是说，当将一个表达式的值赋予一个变量时，整个表达式的值被赋值到目标变量，这意味着：**当一个变量的赋予另外一个变量时，改变其中一个变量的值，将不会影响到另外一个变量**\n\nphp也提供了另外一种方式给变量赋值：引用赋值。这意味着新的变量简单的__引用__*(换言之，成为了其别名或者指向)***了原始变量**。改动的新的变量将影响到原始变量，反之亦然。使用引用赋值，简单地将一个&符号加到将要赋值的变量前(源变量)\n\n对象默认是传引用\n对于较大是的数据，传引用比较好，这样可以节省内存的开销.\n\n#### 17、isset、empty、is_null的区别\n\nisset 判断变量是否定义或者是否为空\n\n```\n  变量存在返回ture，否则返回false\n  变量定义不赋值返回false\n  unset一个变量，返回false\n  变量赋值为null，返回false\n  \n```\n\nempty：判断变量的值是否为空，能转换为false的都是空，为空返回true，反之返回false。\n\n```\n    \"\",0,\"0\",NULL，FALSE都认为为空，返回true\n    没有任何属性的对象都认为是空\n    \n```\n\nis_null：检测传入的值(值、变量、表达式)是否为null\n\n```\n    定义了，但是赋值为Null\n    定义了，但是没有赋值\n    unset一个变量\n```\n\n#### 18、前端调试的工具\n\n- Firefox的firebug\n- Chrome的开发工具\n- Emmet\n- JSON格式校验工具\n\n#### 19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\n\n索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。\n普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。\n普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。\n主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。\n索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。\n索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。\n\n#### 20.数据库中的事务是什么?\n\n事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作完成，事务则提交，其修改将作用于所有其他数据库进程。如果一个操作失败，则事务将回滚，该事务所有操作的影响都将取消。ACID 四大特性,原子性、隔离性、一致性、持久性。\n\n#### 21.了解XSS攻击吗？如何防止？\n\nXSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。\n使用htmlspecialchars()函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。\n\n#### 22.SQL注入漏洞产生的原因？如何防止？\n\nSQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。\n\n##### 防止SQL注入的方式：\n\n1. 开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置\n2. 执行sql语句时使用addslashes进行sql语句转换\n3. Sql语句书写尽量不要省略双引号和单引号。\n4. 过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。\n5. 提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。\n6. Php配置文件中设置register_globals为off,关闭全局变量注册\n7. 控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。\n\n#### 23.PHP网站的主要攻击方式有哪些？\n\n1. 命令注入(Command Injection)\n2. eval 注入(Eval Injection)\n3. 客户端脚本攻击(Script Insertion)\n4. 跨网站脚本攻击(Cross Site Scripting, XSS)\n5. SQL 注入攻击(SQL injection)\n6. 跨网站请求伪造攻击(Cross Site Request\n   Forgeries, CSRF)\n7. Session 会话劫持(Session Hijacking)\n8. Session 固定攻击(Session Fixation)\n9. HTTP 响应拆分攻击(HTTP Response Splitting)\n10. 文件上传漏洞(File Upload Attack)\n11. 目录穿越漏洞(Directory Traversal)\n12. 远程文件包含攻击(Remote Inclusion)\n13. 动态函数注入攻击(Dynamic Variable\n    Evaluation)\n14. URL 攻击(URL attack)\n15. 表单提交欺骗攻击(Spoofed Form\n    Submissions)\n16. HTTP 请求欺骗攻击(Spoofed HTTP Requests)\n\n#### 24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？\n\n1. 多口就是通过访问不同的文件来完成用户请求。单一入口只 web 程序所有的请求都指向一个脚本文件的。\n2. 单一入口更容易控制权限，方便对 http 请求可以进行安全性检查。\n   缺点：URL 看起来不那么美观，特别是对搜索引擎来说不友好。\n\n#### 25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\n\n##### a)、索引的目的是什么？\n\n1. 快速访问数据表中的特定信息，提高检索速度\n2. 创建唯一性索引，保证数据库表中每一行数据的唯一性。\n3. 加速表和表之间的连接\n4. 使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间\n\n##### b)、索引对数据库系统的负面影响是什么？\n\n**负面影响：**\n创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速度。\n\n##### c)、为数据表建立索引的原则有哪些？\n\n1. 在最频繁使用的、用以缩小查询范围的字段上建立索引。\n2. 在频繁使用的、需要排序的字段上建立索引\n\n##### d)、 什么情况下不宜建立索引？\n\n1. 对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。\n2. 对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等。\n\n#### 26、 简述在MySQL数据库中MyISAM和InnoDB的区别\n\n区别于其他数据库的最重要的特点就是其插件式的表存储引擎。切记：存储引擎是基于表的，而不是数据库。\n\nInnoDB与MyISAM的区别：\n\n**InnoDB存储引擎:** 主要面向OLTP(Online Transaction Processing，在线事务处理)方面的应用，是第一个完整支持ACID事务的存储引擎(BDB第一个支持事务的存储引擎，已经停止开发)。\n\n**特点：**\n\n- 行锁设计、支持外键；\n- 支持类似于Oracle风格的一致性非锁定读(即：默认情况下读取操作不会产生锁)；\n- InnoDB将数据放在一个逻辑的表空间中，由InnoDB自身进行管理。从MySQL4.1版本开始，可以将每个InnoDB存储引擎的表单独存放到一个独立的ibd文件中；\n- InnoDB通过使用MVCC(多版本并发控制：读不会阻塞写，写也不会阻塞读)来获得高并发性，并且实现了SQL标准的4种隔离级别(默认为REPEATABLE级别)；\n- InnoDB还提供了插入缓冲(insert buffer)、二次写(double write)、自适应哈希索引(adaptive hash index)、预读(read ahead)等高性能和高可用的功能；\n- InnoDB采用了聚集(clustered)的方式来存储表中的数据，每张标的存储都按主键的顺序存放(如果没有显式的在建表时指定主键，InnoDB会为每一行生成一个6字节的ROWID，并以此作为主键)；\n- InnoDB表会有三个隐藏字段：除了上面提到了6字节的DB_ROW_ID外，还有6字节的DB_TX_ID(事务ID)和7字节的DB_ROLL_PTR(指向对应回滚段的地址)。这个可以通过innodb monitor看到；\n\n**MyISAM存储引擎:** 是MySQL官方提供的存储引擎，主要面向OLAP(Online Analytical Processing,在线分析处理)方面的应用。\n**特点：**\n\n- 不支持事务，支持表所和全文索引。操作速度快；\n- MyISAM存储引擎表由MYD和MYI组成，MYD用来存放数据文件，MYI用来存放索引文件。MySQL数据库只缓存其索引文件，数据文件的缓存交给操作系统本身来完成；\n  MySQL5.0版本开始，MyISAM默认支持256T的单表数据；\n\n#### 27、 解释MySQL外连接、内连接与自连接的区别\n\n**先说什么是交叉连接:** 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一个表的所有记录和另一个表中的所有记录一一匹配。\n\n**内连接** 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合条件的记录不会出现在结果集中，即内连接只连接匹配的行。\n**外连接** 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个表中\n的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。\n\n左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以NULL来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现在结果集中。左连接和右连接可以互换，MySQL目前还不支持全外连接。\n\n#### 28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\n\nMyISAM、InnoDB、BDB（BerkeleyDB）、Merge、Memory（Heap）、Example、Federated、\nArchive、CSV、Blackhole、MaxDB 等等十几个引擎\n\n#### 29、 什么是面向对象？主要特征是什么？几大原则是什么？\n\n面向对象是程序的一种设计模式，它利于提高程序的重用性，使程序机构更加清晰。 主要特征是：封装、继承、多态。\n五大基本原则： 单一职责原则；开放封闭原则；替换原则； 依赖原则； 接口分离原则。\n\n#### 30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?\n\n　参考答案：\n　　静态路由是由系统管理员设计与构建的路由表规定的路由。适用于网关数量有限的场 合，且网络拓朴结构不经常变化的网络。其缺点是不能动态地适用网络状况的变化，当 网络状况变化后必须由网络管理员修改路由表。\n动态路由是由路由选择协议而动态构建的，路由协议之间通过交换各自所拥有的路由信 息实时更新路由表的内容。动态路由可以自动学习网络的拓朴结构，并更新路由表。其 缺点是路由广播更新信息将占据大量的网络带宽。\n\n#### 31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\n\nMemcahce 是把所有的数据保存在内存当中，采用 hash 表的方式，每条数据由 key 和 value 组成，每个 key 是独一无二的，当要访问某个值的时候先按照找到值，然后返回结果。\nMemcahce 采用 LRU 算法来逐渐把过期数据清除掉。\n\n#### 32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？\n\n流行的 Ajax 框架有 jQuery，Prototype，Dojo，MooTools。\n\nAjax 的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到数据库中的返回数据信息了。所以 Ajax 技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。\n在使用 Ajax 时，涉及到数据传输，即将数据从服务器返回到客户端，服务器端和客户端分别使用不同的脚步语言来处理数据，这就需要一种通用的数据格式，XML 和 json 就是最常用的两种，而 json 比 XML 更简单。\n\n#### 33、Myql中的事务回滚机制概述\n\n事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤销。\n\n　　要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和第二个表都要回到未修改的状态，这就是所谓的事务回滚。\n\n\n\n","slug":"php面试题-2-附答案","published":1,"updated":"2017-10-16T07:16:33.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28g000tq0fas5ujeyqo","content":"<h4 id=\"1、双引号和单引号的区别\"><a href=\"#1、双引号和单引号的区别\" class=\"headerlink\" title=\"1、双引号和单引号的区别\"></a>1、双引号和单引号的区别</h4><ul>\n<li>双引号解释变量，单引号不解释变量</li>\n<li>双引号里插入单引号，其中单引号里如果有变量的话，变量解释</li>\n<li>双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用{}讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误</li>\n<li>双引号解释转义字符，单引号不解释转义字符，但是解释’\\和\\</li>\n<li>能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）</li>\n</ul>\n<h4 id=\"2、常用的超全局变量-8个\"><a href=\"#2、常用的超全局变量-8个\" class=\"headerlink\" title=\"2、常用的超全局变量(8个)\"></a>2、常用的超全局变量(8个)</h4><ul>\n<li>$_GET —–&gt;get传送方式</li>\n<li>$POST —–&gt;post传送方式</li>\n<li>$REQUEST —–&gt;可以接收到get和post两种方式的值</li>\n<li>$GLOBALS —–&gt;所有的变量都放在里面</li>\n<li>$FILE —–&gt;上传文件使用</li>\n<li>$SERVER —–&gt;系统环境变量</li>\n<li>$SESSION —–&gt;会话控制的时候会用到</li>\n<li>$COOKIE —–&gt;会话控制的时候会用到</li>\n</ul>\n<h4 id=\"3、HTTP中POST、GET、PUT、DELETE方式的区别\"><a href=\"#3、HTTP中POST、GET、PUT、DELETE方式的区别\" class=\"headerlink\" title=\"3、HTTP中POST、GET、PUT、DELETE方式的区别\"></a>3、HTTP中POST、GET、PUT、DELETE方式的区别</h4><blockquote>\n<p>HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，我们可以这样理解：url描述了一个网络上资源，而post、get、put、delete就是对这个资源进行增、删、改、查的操作！</p>\n</blockquote>\n<h5 id=\"3-1表单中get和post提交方式的区别\"><a href=\"#3-1表单中get和post提交方式的区别\" class=\"headerlink\" title=\"3.1表单中get和post提交方式的区别\"></a>3.1表单中get和post提交方式的区别</h5><ul>\n<li>get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；post是通过HTTP POST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程</li>\n<li>对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据</li>\n<li>get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高</li>\n</ul>\n<h5 id=\"3-2\"><a href=\"#3-2\" class=\"headerlink\" title=\"3.2\"></a>3.2</h5><ul>\n<li>GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。</li>\n<li>与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同。</li>\n<li>POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操作都是用POST请求的。</li>\n<li>DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。</li>\n</ul>\n<h4 id=\"4、PHP介绍\"><a href=\"#4、PHP介绍\" class=\"headerlink\" title=\"4、PHP介绍\"></a>4、PHP介绍</h4><p>Hypertext Preprocessor—-超文本预处理器</p>\n<p>Personal Home Page 原始名称</p>\n<p><strong>目标用途:</strong> 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多</p>\n<p><strong>HTML:</strong> Hypertext Markup Language</p>\n<p><strong>创始人:</strong> 拉姆斯勒·勒多夫Rasmus Lerdorf，1968年生，加拿大滑铁卢大学</p>\n<p>勒多夫最开始是为了维护个人网页，用prel语言写了维护程序，之后又用c进行了重写，最终衍生出php/fi</p>\n<p><strong>时间轴:</strong></p>\n<ul>\n<li>1995.06.08将PHP/FI公开释出</li>\n<li>1995 php2.0，加入了对MySQL的支持</li>\n<li>1997 php3.0</li>\n<li>2000 php4.0</li>\n<li>2008 php5.0</li>\n<li>由于php6.0没有完全解决Unicode编码，所以基本没有生产线上的应用，基本只是一款概念产品，很多功能已经在php5.3.3和php5.3.4上实现</li>\n</ul>\n<p><strong>常见的IDE(Intergrated Development Environment):</strong> 集成开发环境</p>\n<ul>\n<li><a href=\"http://panic.com/coda/\" target=\"_blank\" rel=\"external\">Coda（mac）</a></li>\n<li><a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"external\">PHPStrom</a></li>\n<li><a href=\"http://www.adobe.com/\" target=\"_blank\" rel=\"external\">Adobe Dreamweaver</a></li>\n<li><a href=\"http://netbeans.org/\" target=\"_blank\" rel=\"external\">NetBeans</a></li>\n</ul>\n<p><strong>常见文本编辑器，具备代码高亮：</strong></p>\n<ul>\n<li><a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"external\">NodePad++</a></li>\n<li><a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"external\">SublimeText</a></li>\n</ul>\n<h4 id=\"PHP优势\"><a href=\"#PHP优势\" class=\"headerlink\" title=\"PHP优势\"></a>PHP优势</h4><p><strong>PHP特性:</strong></p>\n<ul>\n<li>php独特混合了C,Java,Prel以及PHP自创的语法</li>\n<li>可以比CGI或者Prel更快速去执行动态网页，与其他变成语言相比，PHP是讲程序嵌入到HTML文档中去执行，执行效率比完全生成HTML编辑的CGI要高很多，所有的CGI都能实现</li>\n<li>支持几乎所有流行的数据库以及操作系统</li>\n<li>PHP可以使用C,C++进行程序的扩展</li>\n</ul>\n<p><strong>PHP优势:</strong></p>\n<ul>\n<li>开放源代码</li>\n<li>免费性</li>\n<li>快捷性</li>\n<li>跨平台强</li>\n<li>效率高</li>\n<li>图形处理</li>\n<li>面向对象</li>\n<li>专业专注</li>\n</ul>\n<p><strong>PHP技术应用:</strong></p>\n<ul>\n<li>静态页面生成</li>\n<li>数据库缓存</li>\n<li>过程缓存</li>\n<li>div+css w3c标准</li>\n<li>大负荷</li>\n<li>分布式</li>\n<li>flex</li>\n<li>支持MVC</li>\n<li>Smarty模块引擎</li>\n</ul>\n<h4 id=\"PHP认证级别\"><a href=\"#PHP认证级别\" class=\"headerlink\" title=\"PHP认证级别\"></a>PHP认证级别</h4><ul>\n<li>初级 IFE:Index Front Engineer 前端工程师</li>\n<li>中级 IPE:Index PHP Engineer PHP工程师</li>\n<li>高级 IAE:Index Architecture Engineer 架构工程师</li>\n</ul>\n<h4 id=\"6、echo、print-r、print、var-dump之间的区别\"><a href=\"#6、echo、print-r、print、var-dump之间的区别\" class=\"headerlink\" title=\"6、echo、print_r、print、var_dump之间的区别\"></a>6、echo、print_r、print、var_dump之间的区别</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">* echo、print是php语句，var_dump和print_r是函数</div><div class=\"line\">* echo 输出一个或多个字符串，中间以逗号隔开，没有返回值是语言结构而不是真正的函数，因此不能作为表达式的一部分使用</div><div class=\"line\">* print也是php的一个关键字，有返回值 只能打印出简单类型变量的值(如int，string)，如果字符串显示成功则返回true，否则返回false</div><div class=\"line\">* print_r 可以打印出复杂类型变量的值(如数组、对象）以列表的形式显示，并以array、object开头，但print_r输出布尔值和NULL的结果没有意义，因为都是打印&quot;\\n&quot;，因此print_r()函数更适合调试</div><div class=\"line\">* var_dump() 判断一个变量的类型和长度，并输出变量的数值</div></pre></td></tr></table></figure>\n<h4 id=\"7、HTTP状态码\"><a href=\"#7、HTTP状态码\" class=\"headerlink\" title=\"7、HTTP状态码\"></a>7、HTTP状态码</h4><p><a href=\"http://www.jianshu.com/p/9ecfda409eeb\" target=\"_blank\" rel=\"external\">点击这儿查看HTTP状态码详解</a></p>\n<p><strong>常见的HTTP状态码：</strong></p>\n<ul>\n<li>200 - 请求成功</li>\n<li>301 - 资源(网页等)被永久转义到其他URL</li>\n<li>404 - 请求的资源(网页等)不存在</li>\n<li>505 - 内部服务器错误</li>\n</ul>\n<p><strong>HTTP状态码分类:</strong></p>\n<ul>\n<li>1** - 信息，服务器收到的请求，需要请求者继续执行操作</li>\n<li>2** - 成功，操作被成功接收并处理</li>\n<li>3** - 重定向，需要进一步的操作以完成请求</li>\n<li>4** - 客户端错误，请求包含语法错误或者无法完成请求</li>\n<li>5** 服务器错误，服务器在处理请求的过程<br>中发生了错误</li>\n</ul>\n<h4 id=\"8、什么是魔术引号\"><a href=\"#8、什么是魔术引号\" class=\"headerlink\" title=\"8、什么是魔术引号\"></a>8、什么是魔术引号</h4><p>魔术引号是一个将自动将进入PHP脚本的数据进行转义的过程，最好在编码时不要转义而在运行时根据需要而转义</p>\n<h4 id=\"9、如何获取客户端的ip-要求取得一个int-和服务器ip的代码\"><a href=\"#9、如何获取客户端的ip-要求取得一个int-和服务器ip的代码\" class=\"headerlink\" title=\"9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码\"></a>9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码</h4><p>客户端：<code>$_SERVER[&quot;REMOTE_ADDR&quot;];或者getenv(&#39;REMOTE_ADDR&#39;)</code><br><code>ip2long进行转换</code><br>服务器端：<code>gethostbyname(&#39;www.baidu.com&#39;)</code></p>\n<h5 id=\"10、使用那些工具进行版本控制\"><a href=\"#10、使用那些工具进行版本控制\" class=\"headerlink\" title=\"10、使用那些工具进行版本控制\"></a>10、使用那些工具进行版本控制</h5><p>cvs、svn、vss、git</p>\n<h4 id=\"11、优化数据库的方法\"><a href=\"#11、优化数据库的方法\" class=\"headerlink\" title=\"11、优化数据库的方法\"></a>11、优化数据库的方法</h4><h6 id=\"MySQL数据库优化的八大方式（经典必看）点击获取\"><a href=\"#MySQL数据库优化的八大方式（经典必看）点击获取\" class=\"headerlink\" title=\"MySQL数据库优化的八大方式（经典必看）点击获取\"></a><a href=\"http://www.jianshu.com/p/dac715a88b44\" target=\"_blank\" rel=\"external\">MySQL数据库优化的八大方式（经典必看）点击获取</a></h6><ul>\n<li>选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如’省份’、’性别’最好适用ENUM</li>\n<li>使用连接(JOIN)来代替子查询</li>\n<li>适用联合(UNION)来代替手动创建的临时表</li>\n<li>事务处理</li>\n<li>锁定表、优化事务处理</li>\n<li>适用外键，优化锁定表</li>\n<li>建立索引</li>\n<li>优化查询语句</li>\n</ul>\n<h4 id=\"12、是否使用过模板引擎？使用的模板引擎的名字是？\"><a href=\"#12、是否使用过模板引擎？使用的模板引擎的名字是？\" class=\"headerlink\" title=\"12、是否使用过模板引擎？使用的模板引擎的名字是？\"></a>12、是否使用过模板引擎？使用的模板引擎的名字是？</h4><p><a href=\"http://www.smarty.net/\" target=\"_blank\" rel=\"external\"><strong>Smarty:</strong></a>Smarty算是一种很老的PHP模板引擎了，它曾是我使用这门语言模板的最初选择。虽然它的更新已经不算频繁了，并且缺少新一代模板引擎所具有的部分特性，但是它仍然值得一看。</p>\n<h4 id=\"13、对于大流量网站，采用什么方法来解决访问量的问题\"><a href=\"#13、对于大流量网站，采用什么方法来解决访问量的问题\" class=\"headerlink\" title=\"13、对于大流量网站，采用什么方法来解决访问量的问题\"></a>13、对于大流量网站，采用什么方法来解决访问量的问题</h4><ul>\n<li>确认服务器硬件是否能够支持当前的流量</li>\n<li>数据库读写分离，优化数据表</li>\n<li>程序功能规则，禁止外部的盗链</li>\n<li>控制大文件的下载</li>\n<li>使用不同主机分流主要流量</li>\n</ul>\n<h4 id=\"14、语句include和require的区别是什么？为避免多次包含同一文件，可以用-语句代替他们\"><a href=\"#14、语句include和require的区别是什么？为避免多次包含同一文件，可以用-语句代替他们\" class=\"headerlink\" title=\"14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们\"></a>14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们</h4><ul>\n<li>require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行</li>\n<li>include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去</li>\n</ul>\n<p>注意:包含文件不存在或者语法错误的时候require是致命的，而include不是</p>\n<ul>\n<li>require_once表示了只包含一次，避免了重复包含</li>\n</ul>\n<h4 id=\"15、谈谈mvc的认识\"><a href=\"#15、谈谈mvc的认识\" class=\"headerlink\" title=\"15、谈谈mvc的认识\"></a>15、谈谈mvc的认识</h4><p>由模型、视图、控制器完成的应用程序，由模型发出要实现的功能到控制器，控制器接收组织功能传递给视图</p>\n<h4 id=\"16、-说明php中传值与传引用的区别，并说明传值什么时候传引用？\"><a href=\"#16、-说明php中传值与传引用的区别，并说明传值什么时候传引用？\" class=\"headerlink\" title=\"16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？\"></a>16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？</h4><p>变量默认总是传值赋值，那也就是说，当将一个表达式的值赋予一个变量时，整个表达式的值被赋值到目标变量，这意味着：<strong>当一个变量的赋予另外一个变量时，改变其中一个变量的值，将不会影响到另外一个变量</strong></p>\n<p>php也提供了另外一种方式给变量赋值：引用赋值。这意味着新的变量简单的<strong>引用</strong><em>(换言之，成为了其别名或者指向)**</em>了原始变量**。改动的新的变量将影响到原始变量，反之亦然。使用引用赋值，简单地将一个&amp;符号加到将要赋值的变量前(源变量)</p>\n<p>对象默认是传引用<br>对于较大是的数据，传引用比较好，这样可以节省内存的开销.</p>\n<h4 id=\"17、isset、empty、is-null的区别\"><a href=\"#17、isset、empty、is-null的区别\" class=\"headerlink\" title=\"17、isset、empty、is_null的区别\"></a>17、isset、empty、is_null的区别</h4><p>isset 判断变量是否定义或者是否为空</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">变量存在返回ture，否则返回false</div><div class=\"line\">变量定义不赋值返回false</div><div class=\"line\">unset一个变量，返回false</div><div class=\"line\">变量赋值为null，返回false</div></pre></td></tr></table></figure>\n<p>empty：判断变量的值是否为空，能转换为false的都是空，为空返回true，反之返回false。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;&quot;,0,&quot;0&quot;,NULL，FALSE都认为为空，返回true</div><div class=\"line\">没有任何属性的对象都认为是空</div></pre></td></tr></table></figure>\n<p>is_null：检测传入的值(值、变量、表达式)是否为null</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">定义了，但是赋值为Null</div><div class=\"line\">定义了，但是没有赋值</div><div class=\"line\">unset一个变量</div></pre></td></tr></table></figure>\n<h4 id=\"18、前端调试的工具\"><a href=\"#18、前端调试的工具\" class=\"headerlink\" title=\"18、前端调试的工具\"></a>18、前端调试的工具</h4><ul>\n<li>Firefox的firebug</li>\n<li>Chrome的开发工具</li>\n<li>Emmet</li>\n<li>JSON格式校验工具</li>\n</ul>\n<h4 id=\"19-简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\"><a href=\"#19-简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\" class=\"headerlink\" title=\"19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\"></a>19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）</h4><p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。<br>普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。<br>普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。<br>主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。<br>索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。<br>索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。</p>\n<h4 id=\"20-数据库中的事务是什么\"><a href=\"#20-数据库中的事务是什么\" class=\"headerlink\" title=\"20.数据库中的事务是什么?\"></a>20.数据库中的事务是什么?</h4><p>事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作完成，事务则提交，其修改将作用于所有其他数据库进程。如果一个操作失败，则事务将回滚，该事务所有操作的影响都将取消。ACID 四大特性,原子性、隔离性、一致性、持久性。</p>\n<h4 id=\"21-了解XSS攻击吗？如何防止？\"><a href=\"#21-了解XSS攻击吗？如何防止？\" class=\"headerlink\" title=\"21.了解XSS攻击吗？如何防止？\"></a>21.了解XSS攻击吗？如何防止？</h4><p>XSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。<br>使用htmlspecialchars()函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。</p>\n<h4 id=\"22-SQL注入漏洞产生的原因？如何防止？\"><a href=\"#22-SQL注入漏洞产生的原因？如何防止？\" class=\"headerlink\" title=\"22.SQL注入漏洞产生的原因？如何防止？\"></a>22.SQL注入漏洞产生的原因？如何防止？</h4><p>SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。</p>\n<h5 id=\"防止SQL注入的方式：\"><a href=\"#防止SQL注入的方式：\" class=\"headerlink\" title=\"防止SQL注入的方式：\"></a>防止SQL注入的方式：</h5><ol>\n<li>开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置</li>\n<li>执行sql语句时使用addslashes进行sql语句转换</li>\n<li>Sql语句书写尽量不要省略双引号和单引号。</li>\n<li>过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。</li>\n<li>提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。</li>\n<li>Php配置文件中设置register_globals为off,关闭全局变量注册</li>\n<li>控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。</li>\n</ol>\n<h4 id=\"23-PHP网站的主要攻击方式有哪些？\"><a href=\"#23-PHP网站的主要攻击方式有哪些？\" class=\"headerlink\" title=\"23.PHP网站的主要攻击方式有哪些？\"></a>23.PHP网站的主要攻击方式有哪些？</h4><ol>\n<li>命令注入(Command Injection)</li>\n<li>eval 注入(Eval Injection)</li>\n<li>客户端脚本攻击(Script Insertion)</li>\n<li>跨网站脚本攻击(Cross Site Scripting, XSS)</li>\n<li>SQL 注入攻击(SQL injection)</li>\n<li>跨网站请求伪造攻击(Cross Site Request<br>Forgeries, CSRF)</li>\n<li>Session 会话劫持(Session Hijacking)</li>\n<li>Session 固定攻击(Session Fixation)</li>\n<li>HTTP 响应拆分攻击(HTTP Response Splitting)</li>\n<li>文件上传漏洞(File Upload Attack)</li>\n<li>目录穿越漏洞(Directory Traversal)</li>\n<li>远程文件包含攻击(Remote Inclusion)</li>\n<li>动态函数注入攻击(Dynamic Variable<br>Evaluation)</li>\n<li>URL 攻击(URL attack)</li>\n<li>表单提交欺骗攻击(Spoofed Form<br>Submissions)</li>\n<li>HTTP 请求欺骗攻击(Spoofed HTTP Requests)</li>\n</ol>\n<h4 id=\"24、框架中什么是单一入口和多入口-，-单一入口的优缺点？\"><a href=\"#24、框架中什么是单一入口和多入口-，-单一入口的优缺点？\" class=\"headerlink\" title=\"24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？\"></a>24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？</h4><ol>\n<li>多口就是通过访问不同的文件来完成用户请求。单一入口只 web 程序所有的请求都指向一个脚本文件的。</li>\n<li>单一入口更容易控制权限，方便对 http 请求可以进行安全性检查。<br>缺点：URL 看起来不那么美观，特别是对搜索引擎来说不友好。</li>\n</ol>\n<h4 id=\"25、-对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\"><a href=\"#25、-对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\" class=\"headerlink\" title=\"25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\"></a>25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：</h4><h5 id=\"a-、索引的目的是什么？\"><a href=\"#a-、索引的目的是什么？\" class=\"headerlink\" title=\"a)、索引的目的是什么？\"></a>a)、索引的目的是什么？</h5><ol>\n<li>快速访问数据表中的特定信息，提高检索速度</li>\n<li>创建唯一性索引，保证数据库表中每一行数据的唯一性。</li>\n<li>加速表和表之间的连接</li>\n<li>使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间</li>\n</ol>\n<h5 id=\"b-、索引对数据库系统的负面影响是什么？\"><a href=\"#b-、索引对数据库系统的负面影响是什么？\" class=\"headerlink\" title=\"b)、索引对数据库系统的负面影响是什么？\"></a>b)、索引对数据库系统的负面影响是什么？</h5><p><strong>负面影响：</strong><br>创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速度。</p>\n<h5 id=\"c-、为数据表建立索引的原则有哪些？\"><a href=\"#c-、为数据表建立索引的原则有哪些？\" class=\"headerlink\" title=\"c)、为数据表建立索引的原则有哪些？\"></a>c)、为数据表建立索引的原则有哪些？</h5><ol>\n<li>在最频繁使用的、用以缩小查询范围的字段上建立索引。</li>\n<li>在频繁使用的、需要排序的字段上建立索引</li>\n</ol>\n<h5 id=\"d-、-什么情况下不宜建立索引？\"><a href=\"#d-、-什么情况下不宜建立索引？\" class=\"headerlink\" title=\"d)、 什么情况下不宜建立索引？\"></a>d)、 什么情况下不宜建立索引？</h5><ol>\n<li>对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。</li>\n<li>对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等。</li>\n</ol>\n<h4 id=\"26、-简述在MySQL数据库中MyISAM和InnoDB的区别\"><a href=\"#26、-简述在MySQL数据库中MyISAM和InnoDB的区别\" class=\"headerlink\" title=\"26、 简述在MySQL数据库中MyISAM和InnoDB的区别\"></a>26、 简述在MySQL数据库中MyISAM和InnoDB的区别</h4><p>区别于其他数据库的最重要的特点就是其插件式的表存储引擎。切记：存储引擎是基于表的，而不是数据库。</p>\n<p>InnoDB与MyISAM的区别：</p>\n<p><strong>InnoDB存储引擎:</strong> 主要面向OLTP(Online Transaction Processing，在线事务处理)方面的应用，是第一个完整支持ACID事务的存储引擎(BDB第一个支持事务的存储引擎，已经停止开发)。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>行锁设计、支持外键；</li>\n<li>支持类似于Oracle风格的一致性非锁定读(即：默认情况下读取操作不会产生锁)；</li>\n<li>InnoDB将数据放在一个逻辑的表空间中，由InnoDB自身进行管理。从MySQL4.1版本开始，可以将每个InnoDB存储引擎的表单独存放到一个独立的ibd文件中；</li>\n<li>InnoDB通过使用MVCC(多版本并发控制：读不会阻塞写，写也不会阻塞读)来获得高并发性，并且实现了SQL标准的4种隔离级别(默认为REPEATABLE级别)；</li>\n<li>InnoDB还提供了插入缓冲(insert buffer)、二次写(double write)、自适应哈希索引(adaptive hash index)、预读(read ahead)等高性能和高可用的功能；</li>\n<li>InnoDB采用了聚集(clustered)的方式来存储表中的数据，每张标的存储都按主键的顺序存放(如果没有显式的在建表时指定主键，InnoDB会为每一行生成一个6字节的ROWID，并以此作为主键)；</li>\n<li>InnoDB表会有三个隐藏字段：除了上面提到了6字节的DB_ROW_ID外，还有6字节的DB_TX_ID(事务ID)和7字节的DB_ROLL_PTR(指向对应回滚段的地址)。这个可以通过innodb monitor看到；</li>\n</ul>\n<p><strong>MyISAM存储引擎:</strong> 是MySQL官方提供的存储引擎，主要面向OLAP(Online Analytical Processing,在线分析处理)方面的应用。<br><strong>特点：</strong></p>\n<ul>\n<li>不支持事务，支持表所和全文索引。操作速度快；</li>\n<li>MyISAM存储引擎表由MYD和MYI组成，MYD用来存放数据文件，MYI用来存放索引文件。MySQL数据库只缓存其索引文件，数据文件的缓存交给操作系统本身来完成；<br>MySQL5.0版本开始，MyISAM默认支持256T的单表数据；</li>\n</ul>\n<h4 id=\"27、-解释MySQL外连接、内连接与自连接的区别\"><a href=\"#27、-解释MySQL外连接、内连接与自连接的区别\" class=\"headerlink\" title=\"27、 解释MySQL外连接、内连接与自连接的区别\"></a>27、 解释MySQL外连接、内连接与自连接的区别</h4><p><strong>先说什么是交叉连接:</strong> 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一个表的所有记录和另一个表中的所有记录一一匹配。</p>\n<p><strong>内连接</strong> 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合条件的记录不会出现在结果集中，即内连接只连接匹配的行。<br><strong>外连接</strong> 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个表中<br>的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。</p>\n<p>左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以NULL来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现在结果集中。左连接和右连接可以互换，MySQL目前还不支持全外连接。</p>\n<h4 id=\"28、-写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\"><a href=\"#28、-写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\" class=\"headerlink\" title=\"28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\"></a>28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）</h4><p>MyISAM、InnoDB、BDB（BerkeleyDB）、Merge、Memory（Heap）、Example、Federated、<br>Archive、CSV、Blackhole、MaxDB 等等十几个引擎</p>\n<h4 id=\"29、-什么是面向对象？主要特征是什么？几大原则是什么？\"><a href=\"#29、-什么是面向对象？主要特征是什么？几大原则是什么？\" class=\"headerlink\" title=\"29、 什么是面向对象？主要特征是什么？几大原则是什么？\"></a>29、 什么是面向对象？主要特征是什么？几大原则是什么？</h4><p>面向对象是程序的一种设计模式，它利于提高程序的重用性，使程序机构更加清晰。 主要特征是：封装、继承、多态。<br>五大基本原则： 单一职责原则；开放封闭原则；替换原则； 依赖原则； 接口分离原则。</p>\n<h4 id=\"30、什么是静态路由，其特点是什么-什么是动态路由，其特点是什么\"><a href=\"#30、什么是静态路由，其特点是什么-什么是动态路由，其特点是什么\" class=\"headerlink\" title=\"30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?\"></a>30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?</h4><p>　参考答案：<br>　　静态路由是由系统管理员设计与构建的路由表规定的路由。适用于网关数量有限的场 合，且网络拓朴结构不经常变化的网络。其缺点是不能动态地适用网络状况的变化，当 网络状况变化后必须由网络管理员修改路由表。<br>动态路由是由路由选择协议而动态构建的，路由协议之间通过交换各自所拥有的路由信 息实时更新路由表的内容。动态路由可以自动学习网络的拓朴结构，并更新路由表。其 缺点是路由广播更新信息将占据大量的网络带宽。</p>\n<h4 id=\"31、使用过-Memcache-缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\"><a href=\"#31、使用过-Memcache-缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\" class=\"headerlink\" title=\"31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\"></a>31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？</h4><p>Memcahce 是把所有的数据保存在内存当中，采用 hash 表的方式，每条数据由 key 和 value 组成，每个 key 是独一无二的，当要访问某个值的时候先按照找到值，然后返回结果。<br>Memcahce 采用 LRU 算法来逐渐把过期数据清除掉。</p>\n<h4 id=\"32-列举流行的-Ajax-框架？说明-Ajax-实现原理是什么及-json-在-Ajax-中起什么作用？\"><a href=\"#32-列举流行的-Ajax-框架？说明-Ajax-实现原理是什么及-json-在-Ajax-中起什么作用？\" class=\"headerlink\" title=\"32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？\"></a>32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？</h4><p>流行的 Ajax 框架有 jQuery，Prototype，Dojo，MooTools。</p>\n<p>Ajax 的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到数据库中的返回数据信息了。所以 Ajax 技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。<br>在使用 Ajax 时，涉及到数据传输，即将数据从服务器返回到客户端，服务器端和客户端分别使用不同的脚步语言来处理数据，这就需要一种通用的数据格式，XML 和 json 就是最常用的两种，而 json 比 XML 更简单。</p>\n<h4 id=\"33、Myql中的事务回滚机制概述\"><a href=\"#33、Myql中的事务回滚机制概述\" class=\"headerlink\" title=\"33、Myql中的事务回滚机制概述\"></a>33、Myql中的事务回滚机制概述</h4><p>事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤销。</p>\n<p>　　要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和第二个表都要回到未修改的状态，这就是所谓的事务回滚。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1、双引号和单引号的区别\"><a href=\"#1、双引号和单引号的区别\" class=\"headerlink\" title=\"1、双引号和单引号的区别\"></a>1、双引号和单引号的区别</h4><ul>\n<li>双引号解释变量，单引号不解释变量</li>\n<li>双引号里插入单引号，其中单引号里如果有变量的话，变量解释</li>\n<li>双引号的变量名后面必须要有一个非数字、字母、下划线的特殊字符，或者用{}讲变量括起来，否则会将变量名后面的部分当做一个整体，引起语法错误</li>\n<li>双引号解释转义字符，单引号不解释转义字符，但是解释’\\和\\</li>\n<li>能使单引号字符尽量使用单引号，单引号的效率比双引号要高（因为双引号要先遍历一遍，判断里面有没有变量，然后再进行操作，而单引号则不需要判断）</li>\n</ul>\n<h4 id=\"2、常用的超全局变量-8个\"><a href=\"#2、常用的超全局变量-8个\" class=\"headerlink\" title=\"2、常用的超全局变量(8个)\"></a>2、常用的超全局变量(8个)</h4><ul>\n<li>$_GET —–&gt;get传送方式</li>\n<li>$POST —–&gt;post传送方式</li>\n<li>$REQUEST —–&gt;可以接收到get和post两种方式的值</li>\n<li>$GLOBALS —–&gt;所有的变量都放在里面</li>\n<li>$FILE —–&gt;上传文件使用</li>\n<li>$SERVER —–&gt;系统环境变量</li>\n<li>$SESSION —–&gt;会话控制的时候会用到</li>\n<li>$COOKIE —–&gt;会话控制的时候会用到</li>\n</ul>\n<h4 id=\"3、HTTP中POST、GET、PUT、DELETE方式的区别\"><a href=\"#3、HTTP中POST、GET、PUT、DELETE方式的区别\" class=\"headerlink\" title=\"3、HTTP中POST、GET、PUT、DELETE方式的区别\"></a>3、HTTP中POST、GET、PUT、DELETE方式的区别</h4><blockquote>\n<p>HTTP定义了与服务器交互的不同的方法，最基本的是POST、GET、PUT、DELETE，与其比不可少的URL的全称是资源描述符，我们可以这样理解：url描述了一个网络上资源，而post、get、put、delete就是对这个资源进行增、删、改、查的操作！</p>\n</blockquote>\n<h5 id=\"3-1表单中get和post提交方式的区别\"><a href=\"#3-1表单中get和post提交方式的区别\" class=\"headerlink\" title=\"3.1表单中get和post提交方式的区别\"></a>3.1表单中get和post提交方式的区别</h5><ul>\n<li>get是把参数数据队列加到提交表单的action属性所指的url中，值和表单内各个字段一一对应，从url中可以看到；post是通过HTTP POST机制，将表单内各个字段与其内容防止在HTML的head中一起传送到action属性所指的url地址，用户看不到这个过程</li>\n<li>对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据</li>\n<li>get传送的数据量较小，post传送的数据量较大，一般被默认不受限制，但在理论上，IIS4中最大量为80kb，IIS5中为1000k，get安全性非常低，post安全性较高</li>\n</ul>\n<h5 id=\"3-2\"><a href=\"#3-2\" class=\"headerlink\" title=\"3.2\"></a>3.2</h5><ul>\n<li>GET请求会向数据库发索取数据的请求，从而来获取信息，该请求就像数据库的select操作一样，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的。</li>\n<li>与GET不同的是，PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同。</li>\n<li>POST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，就像数据库的insert操作一样，会创建新的内容。几乎目前所有的提交操作都是用POST请求的。</li>\n<li>DELETE请求顾名思义，就是用来删除某一个资源的，该请求就像数据库的delete操作。</li>\n</ul>\n<h4 id=\"4、PHP介绍\"><a href=\"#4、PHP介绍\" class=\"headerlink\" title=\"4、PHP介绍\"></a>4、PHP介绍</h4><p>Hypertext Preprocessor—-超文本预处理器</p>\n<p>Personal Home Page 原始名称</p>\n<p><strong>目标用途:</strong> 允许web开发人员快速编写动态生成的web页面，与其他页面相比，PHP是将程序嵌入到HTML文档中去执行，效率比完全生成HTML编辑的CGI高很多</p>\n<p><strong>HTML:</strong> Hypertext Markup Language</p>\n<p><strong>创始人:</strong> 拉姆斯勒·勒多夫Rasmus Lerdorf，1968年生，加拿大滑铁卢大学</p>\n<p>勒多夫最开始是为了维护个人网页，用prel语言写了维护程序，之后又用c进行了重写，最终衍生出php/fi</p>\n<p><strong>时间轴:</strong></p>\n<ul>\n<li>1995.06.08将PHP/FI公开释出</li>\n<li>1995 php2.0，加入了对MySQL的支持</li>\n<li>1997 php3.0</li>\n<li>2000 php4.0</li>\n<li>2008 php5.0</li>\n<li>由于php6.0没有完全解决Unicode编码，所以基本没有生产线上的应用，基本只是一款概念产品，很多功能已经在php5.3.3和php5.3.4上实现</li>\n</ul>\n<p><strong>常见的IDE(Intergrated Development Environment):</strong> 集成开发环境</p>\n<ul>\n<li><a href=\"http://panic.com/coda/\" target=\"_blank\" rel=\"external\">Coda（mac）</a></li>\n<li><a href=\"http://www.jetbrains.com/phpstorm/\" target=\"_blank\" rel=\"external\">PHPStrom</a></li>\n<li><a href=\"http://www.adobe.com/\" target=\"_blank\" rel=\"external\">Adobe Dreamweaver</a></li>\n<li><a href=\"http://netbeans.org/\" target=\"_blank\" rel=\"external\">NetBeans</a></li>\n</ul>\n<p><strong>常见文本编辑器，具备代码高亮：</strong></p>\n<ul>\n<li><a href=\"https://notepad-plus-plus.org/\" target=\"_blank\" rel=\"external\">NodePad++</a></li>\n<li><a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"external\">SublimeText</a></li>\n</ul>\n<h4 id=\"PHP优势\"><a href=\"#PHP优势\" class=\"headerlink\" title=\"PHP优势\"></a>PHP优势</h4><p><strong>PHP特性:</strong></p>\n<ul>\n<li>php独特混合了C,Java,Prel以及PHP自创的语法</li>\n<li>可以比CGI或者Prel更快速去执行动态网页，与其他变成语言相比，PHP是讲程序嵌入到HTML文档中去执行，执行效率比完全生成HTML编辑的CGI要高很多，所有的CGI都能实现</li>\n<li>支持几乎所有流行的数据库以及操作系统</li>\n<li>PHP可以使用C,C++进行程序的扩展</li>\n</ul>\n<p><strong>PHP优势:</strong></p>\n<ul>\n<li>开放源代码</li>\n<li>免费性</li>\n<li>快捷性</li>\n<li>跨平台强</li>\n<li>效率高</li>\n<li>图形处理</li>\n<li>面向对象</li>\n<li>专业专注</li>\n</ul>\n<p><strong>PHP技术应用:</strong></p>\n<ul>\n<li>静态页面生成</li>\n<li>数据库缓存</li>\n<li>过程缓存</li>\n<li>div+css w3c标准</li>\n<li>大负荷</li>\n<li>分布式</li>\n<li>flex</li>\n<li>支持MVC</li>\n<li>Smarty模块引擎</li>\n</ul>\n<h4 id=\"PHP认证级别\"><a href=\"#PHP认证级别\" class=\"headerlink\" title=\"PHP认证级别\"></a>PHP认证级别</h4><ul>\n<li>初级 IFE:Index Front Engineer 前端工程师</li>\n<li>中级 IPE:Index PHP Engineer PHP工程师</li>\n<li>高级 IAE:Index Architecture Engineer 架构工程师</li>\n</ul>\n<h4 id=\"6、echo、print-r、print、var-dump之间的区别\"><a href=\"#6、echo、print-r、print、var-dump之间的区别\" class=\"headerlink\" title=\"6、echo、print_r、print、var_dump之间的区别\"></a>6、echo、print_r、print、var_dump之间的区别</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">* echo、print是php语句，var_dump和print_r是函数</div><div class=\"line\">* echo 输出一个或多个字符串，中间以逗号隔开，没有返回值是语言结构而不是真正的函数，因此不能作为表达式的一部分使用</div><div class=\"line\">* print也是php的一个关键字，有返回值 只能打印出简单类型变量的值(如int，string)，如果字符串显示成功则返回true，否则返回false</div><div class=\"line\">* print_r 可以打印出复杂类型变量的值(如数组、对象）以列表的形式显示，并以array、object开头，但print_r输出布尔值和NULL的结果没有意义，因为都是打印&quot;\\n&quot;，因此print_r()函数更适合调试</div><div class=\"line\">* var_dump() 判断一个变量的类型和长度，并输出变量的数值</div></pre></td></tr></table></figure>\n<h4 id=\"7、HTTP状态码\"><a href=\"#7、HTTP状态码\" class=\"headerlink\" title=\"7、HTTP状态码\"></a>7、HTTP状态码</h4><p><a href=\"http://www.jianshu.com/p/9ecfda409eeb\" target=\"_blank\" rel=\"external\">点击这儿查看HTTP状态码详解</a></p>\n<p><strong>常见的HTTP状态码：</strong></p>\n<ul>\n<li>200 - 请求成功</li>\n<li>301 - 资源(网页等)被永久转义到其他URL</li>\n<li>404 - 请求的资源(网页等)不存在</li>\n<li>505 - 内部服务器错误</li>\n</ul>\n<p><strong>HTTP状态码分类:</strong></p>\n<ul>\n<li>1** - 信息，服务器收到的请求，需要请求者继续执行操作</li>\n<li>2** - 成功，操作被成功接收并处理</li>\n<li>3** - 重定向，需要进一步的操作以完成请求</li>\n<li>4** - 客户端错误，请求包含语法错误或者无法完成请求</li>\n<li>5** 服务器错误，服务器在处理请求的过程<br>中发生了错误</li>\n</ul>\n<h4 id=\"8、什么是魔术引号\"><a href=\"#8、什么是魔术引号\" class=\"headerlink\" title=\"8、什么是魔术引号\"></a>8、什么是魔术引号</h4><p>魔术引号是一个将自动将进入PHP脚本的数据进行转义的过程，最好在编码时不要转义而在运行时根据需要而转义</p>\n<h4 id=\"9、如何获取客户端的ip-要求取得一个int-和服务器ip的代码\"><a href=\"#9、如何获取客户端的ip-要求取得一个int-和服务器ip的代码\" class=\"headerlink\" title=\"9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码\"></a>9、如何获取客户端的ip(要求取得一个int)和服务器ip的代码</h4><p>客户端：<code>$_SERVER[&quot;REMOTE_ADDR&quot;];或者getenv(&#39;REMOTE_ADDR&#39;)</code><br><code>ip2long进行转换</code><br>服务器端：<code>gethostbyname(&#39;www.baidu.com&#39;)</code></p>\n<h5 id=\"10、使用那些工具进行版本控制\"><a href=\"#10、使用那些工具进行版本控制\" class=\"headerlink\" title=\"10、使用那些工具进行版本控制\"></a>10、使用那些工具进行版本控制</h5><p>cvs、svn、vss、git</p>\n<h4 id=\"11、优化数据库的方法\"><a href=\"#11、优化数据库的方法\" class=\"headerlink\" title=\"11、优化数据库的方法\"></a>11、优化数据库的方法</h4><h6 id=\"MySQL数据库优化的八大方式（经典必看）点击获取\"><a href=\"#MySQL数据库优化的八大方式（经典必看）点击获取\" class=\"headerlink\" title=\"MySQL数据库优化的八大方式（经典必看）点击获取\"></a><a href=\"http://www.jianshu.com/p/dac715a88b44\" target=\"_blank\" rel=\"external\">MySQL数据库优化的八大方式（经典必看）点击获取</a></h6><ul>\n<li>选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置NOTNULL，例如’省份’、’性别’最好适用ENUM</li>\n<li>使用连接(JOIN)来代替子查询</li>\n<li>适用联合(UNION)来代替手动创建的临时表</li>\n<li>事务处理</li>\n<li>锁定表、优化事务处理</li>\n<li>适用外键，优化锁定表</li>\n<li>建立索引</li>\n<li>优化查询语句</li>\n</ul>\n<h4 id=\"12、是否使用过模板引擎？使用的模板引擎的名字是？\"><a href=\"#12、是否使用过模板引擎？使用的模板引擎的名字是？\" class=\"headerlink\" title=\"12、是否使用过模板引擎？使用的模板引擎的名字是？\"></a>12、是否使用过模板引擎？使用的模板引擎的名字是？</h4><p><a href=\"http://www.smarty.net/\" target=\"_blank\" rel=\"external\"><strong>Smarty:</strong></a>Smarty算是一种很老的PHP模板引擎了，它曾是我使用这门语言模板的最初选择。虽然它的更新已经不算频繁了，并且缺少新一代模板引擎所具有的部分特性，但是它仍然值得一看。</p>\n<h4 id=\"13、对于大流量网站，采用什么方法来解决访问量的问题\"><a href=\"#13、对于大流量网站，采用什么方法来解决访问量的问题\" class=\"headerlink\" title=\"13、对于大流量网站，采用什么方法来解决访问量的问题\"></a>13、对于大流量网站，采用什么方法来解决访问量的问题</h4><ul>\n<li>确认服务器硬件是否能够支持当前的流量</li>\n<li>数据库读写分离，优化数据表</li>\n<li>程序功能规则，禁止外部的盗链</li>\n<li>控制大文件的下载</li>\n<li>使用不同主机分流主要流量</li>\n</ul>\n<h4 id=\"14、语句include和require的区别是什么？为避免多次包含同一文件，可以用-语句代替他们\"><a href=\"#14、语句include和require的区别是什么？为避免多次包含同一文件，可以用-语句代替他们\" class=\"headerlink\" title=\"14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们\"></a>14、语句include和require的区别是什么？为避免多次包含同一文件，可以用(?)语句代替他们</h4><ul>\n<li>require是无条件包含，也就是如果一个流程里加入require，无论条件成立与否都会先执行require，当文件不存在或者无法打开的时候，会提示错误，并且会终止程序执行</li>\n<li>include有返回值，而require没有(可能因为如此require的速度比include快)，如果被包含的文件不存在的化，那么会提示一个错误，但是程序会继续执行下去</li>\n</ul>\n<p>注意:包含文件不存在或者语法错误的时候require是致命的，而include不是</p>\n<ul>\n<li>require_once表示了只包含一次，避免了重复包含</li>\n</ul>\n<h4 id=\"15、谈谈mvc的认识\"><a href=\"#15、谈谈mvc的认识\" class=\"headerlink\" title=\"15、谈谈mvc的认识\"></a>15、谈谈mvc的认识</h4><p>由模型、视图、控制器完成的应用程序，由模型发出要实现的功能到控制器，控制器接收组织功能传递给视图</p>\n<h4 id=\"16、-说明php中传值与传引用的区别，并说明传值什么时候传引用？\"><a href=\"#16、-说明php中传值与传引用的区别，并说明传值什么时候传引用？\" class=\"headerlink\" title=\"16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？\"></a>16、 说明php中传值与传引用的区别，并说明传值什么时候传引用？</h4><p>变量默认总是传值赋值，那也就是说，当将一个表达式的值赋予一个变量时，整个表达式的值被赋值到目标变量，这意味着：<strong>当一个变量的赋予另外一个变量时，改变其中一个变量的值，将不会影响到另外一个变量</strong></p>\n<p>php也提供了另外一种方式给变量赋值：引用赋值。这意味着新的变量简单的<strong>引用</strong><em>(换言之，成为了其别名或者指向)**</em>了原始变量**。改动的新的变量将影响到原始变量，反之亦然。使用引用赋值，简单地将一个&amp;符号加到将要赋值的变量前(源变量)</p>\n<p>对象默认是传引用<br>对于较大是的数据，传引用比较好，这样可以节省内存的开销.</p>\n<h4 id=\"17、isset、empty、is-null的区别\"><a href=\"#17、isset、empty、is-null的区别\" class=\"headerlink\" title=\"17、isset、empty、is_null的区别\"></a>17、isset、empty、is_null的区别</h4><p>isset 判断变量是否定义或者是否为空</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">变量存在返回ture，否则返回false</div><div class=\"line\">变量定义不赋值返回false</div><div class=\"line\">unset一个变量，返回false</div><div class=\"line\">变量赋值为null，返回false</div></pre></td></tr></table></figure>\n<p>empty：判断变量的值是否为空，能转换为false的都是空，为空返回true，反之返回false。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;&quot;,0,&quot;0&quot;,NULL，FALSE都认为为空，返回true</div><div class=\"line\">没有任何属性的对象都认为是空</div></pre></td></tr></table></figure>\n<p>is_null：检测传入的值(值、变量、表达式)是否为null</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">定义了，但是赋值为Null</div><div class=\"line\">定义了，但是没有赋值</div><div class=\"line\">unset一个变量</div></pre></td></tr></table></figure>\n<h4 id=\"18、前端调试的工具\"><a href=\"#18、前端调试的工具\" class=\"headerlink\" title=\"18、前端调试的工具\"></a>18、前端调试的工具</h4><ul>\n<li>Firefox的firebug</li>\n<li>Chrome的开发工具</li>\n<li>Emmet</li>\n<li>JSON格式校验工具</li>\n</ul>\n<h4 id=\"19-简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\"><a href=\"#19-简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\" class=\"headerlink\" title=\"19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）\"></a>19. 简单描述mysql中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）（新浪网技术部）</h4><p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。<br>普通索引(由关键字KEY或INDEX定义的索引)的唯一任务是加快对数据的访问速度。<br>普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼此各不相同的值，在为这个数据列创建索引的时候就应该用关键字UNIQUE把它定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。<br>主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用关键字 PRIMARY KEY 来创建。<br>索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引，这就是联合索引。<br>索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。</p>\n<h4 id=\"20-数据库中的事务是什么\"><a href=\"#20-数据库中的事务是什么\" class=\"headerlink\" title=\"20.数据库中的事务是什么?\"></a>20.数据库中的事务是什么?</h4><p>事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作完成，事务则提交，其修改将作用于所有其他数据库进程。如果一个操作失败，则事务将回滚，该事务所有操作的影响都将取消。ACID 四大特性,原子性、隔离性、一致性、持久性。</p>\n<h4 id=\"21-了解XSS攻击吗？如何防止？\"><a href=\"#21-了解XSS攻击吗？如何防止？\" class=\"headerlink\" title=\"21.了解XSS攻击吗？如何防止？\"></a>21.了解XSS攻击吗？如何防止？</h4><p>XSS是跨站脚本攻击，首先是利用跨站脚本漏洞以一个特权模式去执行攻击者构造的脚本，然后利用不安全的Activex控件执行恶意的行为。<br>使用htmlspecialchars()函数对提交的内容进行过滤，使字符串里面的特殊符号实体化。</p>\n<h4 id=\"22-SQL注入漏洞产生的原因？如何防止？\"><a href=\"#22-SQL注入漏洞产生的原因？如何防止？\" class=\"headerlink\" title=\"22.SQL注入漏洞产生的原因？如何防止？\"></a>22.SQL注入漏洞产生的原因？如何防止？</h4><p>SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。</p>\n<h5 id=\"防止SQL注入的方式：\"><a href=\"#防止SQL注入的方式：\" class=\"headerlink\" title=\"防止SQL注入的方式：\"></a>防止SQL注入的方式：</h5><ol>\n<li>开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置</li>\n<li>执行sql语句时使用addslashes进行sql语句转换</li>\n<li>Sql语句书写尽量不要省略双引号和单引号。</li>\n<li>过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。</li>\n<li>提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。</li>\n<li>Php配置文件中设置register_globals为off,关闭全局变量注册</li>\n<li>控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。</li>\n</ol>\n<h4 id=\"23-PHP网站的主要攻击方式有哪些？\"><a href=\"#23-PHP网站的主要攻击方式有哪些？\" class=\"headerlink\" title=\"23.PHP网站的主要攻击方式有哪些？\"></a>23.PHP网站的主要攻击方式有哪些？</h4><ol>\n<li>命令注入(Command Injection)</li>\n<li>eval 注入(Eval Injection)</li>\n<li>客户端脚本攻击(Script Insertion)</li>\n<li>跨网站脚本攻击(Cross Site Scripting, XSS)</li>\n<li>SQL 注入攻击(SQL injection)</li>\n<li>跨网站请求伪造攻击(Cross Site Request<br>Forgeries, CSRF)</li>\n<li>Session 会话劫持(Session Hijacking)</li>\n<li>Session 固定攻击(Session Fixation)</li>\n<li>HTTP 响应拆分攻击(HTTP Response Splitting)</li>\n<li>文件上传漏洞(File Upload Attack)</li>\n<li>目录穿越漏洞(Directory Traversal)</li>\n<li>远程文件包含攻击(Remote Inclusion)</li>\n<li>动态函数注入攻击(Dynamic Variable<br>Evaluation)</li>\n<li>URL 攻击(URL attack)</li>\n<li>表单提交欺骗攻击(Spoofed Form<br>Submissions)</li>\n<li>HTTP 请求欺骗攻击(Spoofed HTTP Requests)</li>\n</ol>\n<h4 id=\"24、框架中什么是单一入口和多入口-，-单一入口的优缺点？\"><a href=\"#24、框架中什么是单一入口和多入口-，-单一入口的优缺点？\" class=\"headerlink\" title=\"24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？\"></a>24、框架中什么是单一入口和多入口 ， 单一入口的优缺点？</h4><ol>\n<li>多口就是通过访问不同的文件来完成用户请求。单一入口只 web 程序所有的请求都指向一个脚本文件的。</li>\n<li>单一入口更容易控制权限，方便对 http 请求可以进行安全性检查。<br>缺点：URL 看起来不那么美观，特别是对搜索引擎来说不友好。</li>\n</ol>\n<h4 id=\"25、-对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\"><a href=\"#25、-对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\" class=\"headerlink\" title=\"25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：\"></a>25、 对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题：</h4><h5 id=\"a-、索引的目的是什么？\"><a href=\"#a-、索引的目的是什么？\" class=\"headerlink\" title=\"a)、索引的目的是什么？\"></a>a)、索引的目的是什么？</h5><ol>\n<li>快速访问数据表中的特定信息，提高检索速度</li>\n<li>创建唯一性索引，保证数据库表中每一行数据的唯一性。</li>\n<li>加速表和表之间的连接</li>\n<li>使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间</li>\n</ol>\n<h5 id=\"b-、索引对数据库系统的负面影响是什么？\"><a href=\"#b-、索引对数据库系统的负面影响是什么？\" class=\"headerlink\" title=\"b)、索引对数据库系统的负面影响是什么？\"></a>b)、索引对数据库系统的负面影响是什么？</h5><p><strong>负面影响：</strong><br>创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速度。</p>\n<h5 id=\"c-、为数据表建立索引的原则有哪些？\"><a href=\"#c-、为数据表建立索引的原则有哪些？\" class=\"headerlink\" title=\"c)、为数据表建立索引的原则有哪些？\"></a>c)、为数据表建立索引的原则有哪些？</h5><ol>\n<li>在最频繁使用的、用以缩小查询范围的字段上建立索引。</li>\n<li>在频繁使用的、需要排序的字段上建立索引</li>\n</ol>\n<h5 id=\"d-、-什么情况下不宜建立索引？\"><a href=\"#d-、-什么情况下不宜建立索引？\" class=\"headerlink\" title=\"d)、 什么情况下不宜建立索引？\"></a>d)、 什么情况下不宜建立索引？</h5><ol>\n<li>对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。</li>\n<li>对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等。</li>\n</ol>\n<h4 id=\"26、-简述在MySQL数据库中MyISAM和InnoDB的区别\"><a href=\"#26、-简述在MySQL数据库中MyISAM和InnoDB的区别\" class=\"headerlink\" title=\"26、 简述在MySQL数据库中MyISAM和InnoDB的区别\"></a>26、 简述在MySQL数据库中MyISAM和InnoDB的区别</h4><p>区别于其他数据库的最重要的特点就是其插件式的表存储引擎。切记：存储引擎是基于表的，而不是数据库。</p>\n<p>InnoDB与MyISAM的区别：</p>\n<p><strong>InnoDB存储引擎:</strong> 主要面向OLTP(Online Transaction Processing，在线事务处理)方面的应用，是第一个完整支持ACID事务的存储引擎(BDB第一个支持事务的存储引擎，已经停止开发)。</p>\n<p><strong>特点：</strong></p>\n<ul>\n<li>行锁设计、支持外键；</li>\n<li>支持类似于Oracle风格的一致性非锁定读(即：默认情况下读取操作不会产生锁)；</li>\n<li>InnoDB将数据放在一个逻辑的表空间中，由InnoDB自身进行管理。从MySQL4.1版本开始，可以将每个InnoDB存储引擎的表单独存放到一个独立的ibd文件中；</li>\n<li>InnoDB通过使用MVCC(多版本并发控制：读不会阻塞写，写也不会阻塞读)来获得高并发性，并且实现了SQL标准的4种隔离级别(默认为REPEATABLE级别)；</li>\n<li>InnoDB还提供了插入缓冲(insert buffer)、二次写(double write)、自适应哈希索引(adaptive hash index)、预读(read ahead)等高性能和高可用的功能；</li>\n<li>InnoDB采用了聚集(clustered)的方式来存储表中的数据，每张标的存储都按主键的顺序存放(如果没有显式的在建表时指定主键，InnoDB会为每一行生成一个6字节的ROWID，并以此作为主键)；</li>\n<li>InnoDB表会有三个隐藏字段：除了上面提到了6字节的DB_ROW_ID外，还有6字节的DB_TX_ID(事务ID)和7字节的DB_ROLL_PTR(指向对应回滚段的地址)。这个可以通过innodb monitor看到；</li>\n</ul>\n<p><strong>MyISAM存储引擎:</strong> 是MySQL官方提供的存储引擎，主要面向OLAP(Online Analytical Processing,在线分析处理)方面的应用。<br><strong>特点：</strong></p>\n<ul>\n<li>不支持事务，支持表所和全文索引。操作速度快；</li>\n<li>MyISAM存储引擎表由MYD和MYI组成，MYD用来存放数据文件，MYI用来存放索引文件。MySQL数据库只缓存其索引文件，数据文件的缓存交给操作系统本身来完成；<br>MySQL5.0版本开始，MyISAM默认支持256T的单表数据；</li>\n</ul>\n<h4 id=\"27、-解释MySQL外连接、内连接与自连接的区别\"><a href=\"#27、-解释MySQL外连接、内连接与自连接的区别\" class=\"headerlink\" title=\"27、 解释MySQL外连接、内连接与自连接的区别\"></a>27、 解释MySQL外连接、内连接与自连接的区别</h4><p><strong>先说什么是交叉连接:</strong> 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一个表的所有记录和另一个表中的所有记录一一匹配。</p>\n<p><strong>内连接</strong> 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合条件的记录不会出现在结果集中，即内连接只连接匹配的行。<br><strong>外连接</strong> 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个表中<br>的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。</p>\n<p>左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以NULL来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现在结果集中。左连接和右连接可以互换，MySQL目前还不支持全外连接。</p>\n<h4 id=\"28、-写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\"><a href=\"#28、-写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\" class=\"headerlink\" title=\"28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）\"></a>28、 写出三种以上MySQL数据库存储引擎的名称（提示：不区分大小写）</h4><p>MyISAM、InnoDB、BDB（BerkeleyDB）、Merge、Memory（Heap）、Example、Federated、<br>Archive、CSV、Blackhole、MaxDB 等等十几个引擎</p>\n<h4 id=\"29、-什么是面向对象？主要特征是什么？几大原则是什么？\"><a href=\"#29、-什么是面向对象？主要特征是什么？几大原则是什么？\" class=\"headerlink\" title=\"29、 什么是面向对象？主要特征是什么？几大原则是什么？\"></a>29、 什么是面向对象？主要特征是什么？几大原则是什么？</h4><p>面向对象是程序的一种设计模式，它利于提高程序的重用性，使程序机构更加清晰。 主要特征是：封装、继承、多态。<br>五大基本原则： 单一职责原则；开放封闭原则；替换原则； 依赖原则； 接口分离原则。</p>\n<h4 id=\"30、什么是静态路由，其特点是什么-什么是动态路由，其特点是什么\"><a href=\"#30、什么是静态路由，其特点是什么-什么是动态路由，其特点是什么\" class=\"headerlink\" title=\"30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?\"></a>30、什么是静态路由，其特点是什么?什么是动态路由，其特点是什么?</h4><p>　参考答案：<br>　　静态路由是由系统管理员设计与构建的路由表规定的路由。适用于网关数量有限的场 合，且网络拓朴结构不经常变化的网络。其缺点是不能动态地适用网络状况的变化，当 网络状况变化后必须由网络管理员修改路由表。<br>动态路由是由路由选择协议而动态构建的，路由协议之间通过交换各自所拥有的路由信 息实时更新路由表的内容。动态路由可以自动学习网络的拓朴结构，并更新路由表。其 缺点是路由广播更新信息将占据大量的网络带宽。</p>\n<h4 id=\"31、使用过-Memcache-缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\"><a href=\"#31、使用过-Memcache-缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\" class=\"headerlink\" title=\"31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？\"></a>31、使用过 Memcache 缓存吗，如果使用过，能够简单的描述一下它的工作原理吗？</h4><p>Memcahce 是把所有的数据保存在内存当中，采用 hash 表的方式，每条数据由 key 和 value 组成，每个 key 是独一无二的，当要访问某个值的时候先按照找到值，然后返回结果。<br>Memcahce 采用 LRU 算法来逐渐把过期数据清除掉。</p>\n<h4 id=\"32-列举流行的-Ajax-框架？说明-Ajax-实现原理是什么及-json-在-Ajax-中起什么作用？\"><a href=\"#32-列举流行的-Ajax-框架？说明-Ajax-实现原理是什么及-json-在-Ajax-中起什么作用？\" class=\"headerlink\" title=\"32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？\"></a>32. 列举流行的 Ajax 框架？说明 Ajax 实现原理是什么及 json 在 Ajax 中起什么作用？</h4><p>流行的 Ajax 框架有 jQuery，Prototype，Dojo，MooTools。</p>\n<p>Ajax 的工作原理是一个页面的指定位置可以加载另一个页面所有的输出内容，这样就实现了一个静态页面也能获取到数据库中的返回数据信息了。所以 Ajax 技术实现了一个静态网页在不刷新整个页面的情况下与服务器通信，减少了用户等待时间，同时也从而降低了网络流量，增强了客户体验的友好程度。<br>在使用 Ajax 时，涉及到数据传输，即将数据从服务器返回到客户端，服务器端和客户端分别使用不同的脚步语言来处理数据，这就需要一种通用的数据格式，XML 和 json 就是最常用的两种，而 json 比 XML 更简单。</p>\n<h4 id=\"33、Myql中的事务回滚机制概述\"><a href=\"#33、Myql中的事务回滚机制概述\" class=\"headerlink\" title=\"33、Myql中的事务回滚机制概述\"></a>33、Myql中的事务回滚机制概述</h4><p>事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤销。</p>\n<p>　　要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和第二个表都要回到未修改的状态，这就是所谓的事务回滚。</p>\n"},{"title":"同花顺笔试题精选","copyright":true,"date":"2017-06-06T13:23:56.000Z","_content":"\n> 今天做了同花顺在线笔试，感觉还行。。。\n\n分享一下笔试题==\n\n<!--more-->\n\n## 1\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1wh38j30v703sjrq.jpg)\n\n## 2\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbss1ih70j30t303eq3i.jpg)\n\n## 3\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1exzmj311y0lcq4p.jpg)\n\n## 4\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrxt250j30ti04k0ta.jpg)\n\n## 5\n\n![](https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrxutg8j30fr07baas.jpg)\n\n## 6\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwvzy5j30ro0c1q4n.jpg)\n\n## 7\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrwx5e3j30m7045wf0.jpg)\n\n**这张截图的时候手抖**😂\n\n## 8\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwnjbbj30gf037jrm.jpg)\n\n## 9\n\n![](https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrwce44j30ok05vq3m.jpg)\n\n## 10\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrw8cpmj30m707cdgc.jpg)\n\n基本就是这些，答案一般来说[google](https://www.google.com.hk)一下就有,我在这里就不放出来了，大家自行搜索了解==","source":"_posts/同花顺笔试题精选.md","raw":"---\ntitle: 同花顺笔试题精选\ncopyright: true\ndate: 2017-06-06 21:23:56\ntags: 笔试\n---\n\n> 今天做了同花顺在线笔试，感觉还行。。。\n\n分享一下笔试题==\n\n<!--more-->\n\n## 1\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1wh38j30v703sjrq.jpg)\n\n## 2\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbss1ih70j30t303eq3i.jpg)\n\n## 3\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1exzmj311y0lcq4p.jpg)\n\n## 4\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrxt250j30ti04k0ta.jpg)\n\n## 5\n\n![](https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrxutg8j30fr07baas.jpg)\n\n## 6\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwvzy5j30ro0c1q4n.jpg)\n\n## 7\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrwx5e3j30m7045wf0.jpg)\n\n**这张截图的时候手抖**😂\n\n## 8\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwnjbbj30gf037jrm.jpg)\n\n## 9\n\n![](https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrwce44j30ok05vq3m.jpg)\n\n## 10\n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrw8cpmj30m707cdgc.jpg)\n\n基本就是这些，答案一般来说[google](https://www.google.com.hk)一下就有,我在这里就不放出来了，大家自行搜索了解==","slug":"同花顺笔试题精选","published":1,"updated":"2017-10-16T07:16:33.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28h000vq0fas50d53l2","content":"<blockquote>\n<p>今天做了同花顺在线笔试，感觉还行。。。</p>\n</blockquote>\n<p>分享一下笔试题==</p>\n<a id=\"more\"></a>\n<h2 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1wh38j30v703sjrq.jpg\" alt=\"\"></p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbss1ih70j30t303eq3i.jpg\" alt=\"\"></p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1exzmj311y0lcq4p.jpg\" alt=\"\"></p>\n<h2 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrxt250j30ti04k0ta.jpg\" alt=\"\"></p>\n<h2 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h2><p><img src=\"https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrxutg8j30fr07baas.jpg\" alt=\"\"></p>\n<h2 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6\"></a>6</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwvzy5j30ro0c1q4n.jpg\" alt=\"\"></p>\n<h2 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7\"></a>7</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrwx5e3j30m7045wf0.jpg\" alt=\"\"></p>\n<p><strong>这张截图的时候手抖</strong>😂</p>\n<h2 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwnjbbj30gf037jrm.jpg\" alt=\"\"></p>\n<h2 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h2><p><img src=\"https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrwce44j30ok05vq3m.jpg\" alt=\"\"></p>\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrw8cpmj30m707cdgc.jpg\" alt=\"\"></p>\n<p>基本就是这些，答案一般来说<a href=\"https://www.google.com.hk\" target=\"_blank\" rel=\"external\">google</a>一下就有,我在这里就不放出来了，大家自行搜索了解==</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>今天做了同花顺在线笔试，感觉还行。。。</p>\n</blockquote>\n<p>分享一下笔试题==</p>","more":"<h2 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1wh38j30v703sjrq.jpg\" alt=\"\"></p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbss1ih70j30t303eq3i.jpg\" alt=\"\"></p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbss1exzmj311y0lcq4p.jpg\" alt=\"\"></p>\n<h2 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrxt250j30ti04k0ta.jpg\" alt=\"\"></p>\n<h2 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h2><p><img src=\"https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrxutg8j30fr07baas.jpg\" alt=\"\"></p>\n<h2 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6\"></a>6</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwvzy5j30ro0c1q4n.jpg\" alt=\"\"></p>\n<h2 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7\"></a>7</h2><p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fgbsrwx5e3j30m7045wf0.jpg\" alt=\"\"></p>\n<p><strong>这张截图的时候手抖</strong>😂</p>\n<h2 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrwnjbbj30gf037jrm.jpg\" alt=\"\"></p>\n<h2 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h2><p><img src=\"https://ws4.sinaimg.cn/large/006tNc79gy1fgbsrwce44j30ok05vq3m.jpg\" alt=\"\"></p>\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fgbsrw8cpmj30m707cdgc.jpg\" alt=\"\"></p>\n<p>基本就是这些，答案一般来说<a href=\"https://www.google.com.hk\" target=\"_blank\" rel=\"external\">google</a>一下就有,我在这里就不放出来了，大家自行搜索了解==</p>"},{"title":"用vue.js开发一个TodoList(1)","copyright":true,"date":"2017-05-27T04:26:09.000Z","_content":"\n> 这几天，开始静下心来学习下vue.js，准备用vue.js开发一个TodoList，在学习的过程中把学习进度实时记录下来\n\n## 介绍\n\nVue.js（读音 /vjuː/，类似于 **view**） 是一套构建用户界面的**渐进式框架**。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与[单文件组件](https://cn.vuejs.org/v2/guide/single-file-components.html)和 [Vue 生态系统支持的库](https://github.com/vuejs/awesome-vue#libraries--plugins)结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。\n\n## 安装\n\n### 兼容性\n\nVue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。 Vue.js 支持所有[兼容 ECMAScript 5 的浏览器](http://caniuse.com/#feat=es5)。\n\nVue.js 提供一个[官方命令行工具](https://github.com/vuejs/vue-cli)，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需几分钟即可创建并启动一个带热重载、保存时静态检查以及可用于生产环境的构建配置的项目，运行如下命令安装:\n\n```Shell\n# 全局安装 vue-cli\n$ npm install --global vue-cli\n# 创建一个基于 webpack 模板的新项目\n$ vue init webpack 你的项目名\n# 安装依赖，走你\n$ cd 你的项目名\n$ npm install\n```\n\n在这里，如果显示`npm`命令`command not found`请安装一下[node.js](https://nodejs.org/en/download/)\n\n如果觉得运行`npm install`慢，请打开终端运行如下界面，让`npm`走淘宝镜像。\n\n```Shell\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n\n之后凡遇到`npm`命令的时候换成`cnpm`代替，就会快很多。\n\n👉[✨镜像网址✨](http://npm.taobao.org)👈\n\n安装成功运行\n\n```Shell\nnpm run dev\n```\n\n浏览器出现如下页面\n\n![Markdown](http://i4.buimg.com/1949/88ed3c8b8f0ccffd.png)\n\n至此就安装成功了，接下来可以一步一步开发一个TodoList项目了。项目实时更新于[我的GitHub](https://github.com/Jimmy9876/TodoList)\n\n","source":"_posts/用vue-js开发一个TodoList-1.md","raw":"---\ntitle: 用vue.js开发一个TodoList(1)\ncopyright: true\ndate: 2017-05-27 12:26:09\ntags: vue.js\n---\n\n> 这几天，开始静下心来学习下vue.js，准备用vue.js开发一个TodoList，在学习的过程中把学习进度实时记录下来\n\n## 介绍\n\nVue.js（读音 /vjuː/，类似于 **view**） 是一套构建用户界面的**渐进式框架**。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与[单文件组件](https://cn.vuejs.org/v2/guide/single-file-components.html)和 [Vue 生态系统支持的库](https://github.com/vuejs/awesome-vue#libraries--plugins)结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。\n\n## 安装\n\n### 兼容性\n\nVue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。 Vue.js 支持所有[兼容 ECMAScript 5 的浏览器](http://caniuse.com/#feat=es5)。\n\nVue.js 提供一个[官方命令行工具](https://github.com/vuejs/vue-cli)，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需几分钟即可创建并启动一个带热重载、保存时静态检查以及可用于生产环境的构建配置的项目，运行如下命令安装:\n\n```Shell\n# 全局安装 vue-cli\n$ npm install --global vue-cli\n# 创建一个基于 webpack 模板的新项目\n$ vue init webpack 你的项目名\n# 安装依赖，走你\n$ cd 你的项目名\n$ npm install\n```\n\n在这里，如果显示`npm`命令`command not found`请安装一下[node.js](https://nodejs.org/en/download/)\n\n如果觉得运行`npm install`慢，请打开终端运行如下界面，让`npm`走淘宝镜像。\n\n```Shell\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n\n之后凡遇到`npm`命令的时候换成`cnpm`代替，就会快很多。\n\n👉[✨镜像网址✨](http://npm.taobao.org)👈\n\n安装成功运行\n\n```Shell\nnpm run dev\n```\n\n浏览器出现如下页面\n\n![Markdown](http://i4.buimg.com/1949/88ed3c8b8f0ccffd.png)\n\n至此就安装成功了，接下来可以一步一步开发一个TodoList项目了。项目实时更新于[我的GitHub](https://github.com/Jimmy9876/TodoList)\n\n","slug":"用vue-js开发一个TodoList-1","published":1,"updated":"2017-10-16T07:16:33.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28i000xq0faogcrlxop","content":"<blockquote>\n<p>这几天，开始静下心来学习下vue.js，准备用vue.js开发一个TodoList，在学习的过程中把学习进度实时记录下来</p>\n</blockquote>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Vue.js（读音 /vjuː/，类似于 <strong>view</strong>） 是一套构建用户界面的<strong>渐进式框架</strong>。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与<a href=\"https://cn.vuejs.org/v2/guide/single-file-components.html\" target=\"_blank\" rel=\"external\">单文件组件</a>和 <a href=\"https://github.com/vuejs/awesome-vue#libraries--plugins\" target=\"_blank\" rel=\"external\">Vue 生态系统支持的库</a>结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><p>Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。 Vue.js 支持所有<a href=\"http://caniuse.com/#feat=es5\" target=\"_blank\" rel=\"external\">兼容 ECMAScript 5 的浏览器</a>。</p>\n<p>Vue.js 提供一个<a href=\"https://github.com/vuejs/vue-cli\" target=\"_blank\" rel=\"external\">官方命令行工具</a>，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需几分钟即可创建并启动一个带热重载、保存时静态检查以及可用于生产环境的构建配置的项目，运行如下命令安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> 全局安装 vue-cli</div><div class=\"line\"><span class=\"meta\">$</span> npm install --global vue-cli</div><div class=\"line\"><span class=\"meta\">#</span> 创建一个基于 webpack 模板的新项目</div><div class=\"line\"><span class=\"meta\">$</span> vue init webpack 你的项目名</div><div class=\"line\"><span class=\"meta\">#</span> 安装依赖，走你</div><div class=\"line\"><span class=\"meta\">$</span> cd 你的项目名</div><div class=\"line\"><span class=\"meta\">$</span> npm install</div></pre></td></tr></table></figure>\n<p>在这里，如果显示<code>npm</code>命令<code>command not found</code>请安装一下<a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">node.js</a></p>\n<p>如果觉得运行<code>npm install</code>慢，请打开终端运行如下界面，让<code>npm</code>走淘宝镜像。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>\n<p>之后凡遇到<code>npm</code>命令的时候换成<code>cnpm</code>代替，就会快很多。</p>\n<p>👉<a href=\"http://npm.taobao.org\" target=\"_blank\" rel=\"external\">✨镜像网址✨</a>👈</p>\n<p>安装成功运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<p>浏览器出现如下页面</p>\n<p><img src=\"http://i4.buimg.com/1949/88ed3c8b8f0ccffd.png\" alt=\"Markdown\"></p>\n<p>至此就安装成功了，接下来可以一步一步开发一个TodoList项目了。项目实时更新于<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">我的GitHub</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>这几天，开始静下心来学习下vue.js，准备用vue.js开发一个TodoList，在学习的过程中把学习进度实时记录下来</p>\n</blockquote>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>Vue.js（读音 /vjuː/，类似于 <strong>view</strong>） 是一套构建用户界面的<strong>渐进式框架</strong>。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，它不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与<a href=\"https://cn.vuejs.org/v2/guide/single-file-components.html\" target=\"_blank\" rel=\"external\">单文件组件</a>和 <a href=\"https://github.com/vuejs/awesome-vue#libraries--plugins\" target=\"_blank\" rel=\"external\">Vue 生态系统支持的库</a>结合使用时，Vue 也完全能够为复杂的单页应用程序提供驱动。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h3><p>Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。 Vue.js 支持所有<a href=\"http://caniuse.com/#feat=es5\" target=\"_blank\" rel=\"external\">兼容 ECMAScript 5 的浏览器</a>。</p>\n<p>Vue.js 提供一个<a href=\"https://github.com/vuejs/vue-cli\" target=\"_blank\" rel=\"external\">官方命令行工具</a>，可用于快速搭建大型单页应用。该工具提供开箱即用的构建工具配置，带来现代化的前端开发流程。只需几分钟即可创建并启动一个带热重载、保存时静态检查以及可用于生产环境的构建配置的项目，运行如下命令安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#</span> 全局安装 vue-cli</div><div class=\"line\"><span class=\"meta\">$</span> npm install --global vue-cli</div><div class=\"line\"><span class=\"meta\">#</span> 创建一个基于 webpack 模板的新项目</div><div class=\"line\"><span class=\"meta\">$</span> vue init webpack 你的项目名</div><div class=\"line\"><span class=\"meta\">#</span> 安装依赖，走你</div><div class=\"line\"><span class=\"meta\">$</span> cd 你的项目名</div><div class=\"line\"><span class=\"meta\">$</span> npm install</div></pre></td></tr></table></figure>\n<p>在这里，如果显示<code>npm</code>命令<code>command not found</code>请安装一下<a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"external\">node.js</a></p>\n<p>如果觉得运行<code>npm install</code>慢，请打开终端运行如下界面，让<code>npm</code>走淘宝镜像。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>\n<p>之后凡遇到<code>npm</code>命令的时候换成<code>cnpm</code>代替，就会快很多。</p>\n<p>👉<a href=\"http://npm.taobao.org\" target=\"_blank\" rel=\"external\">✨镜像网址✨</a>👈</p>\n<p>安装成功运行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm run dev</div></pre></td></tr></table></figure>\n<p>浏览器出现如下页面</p>\n<p><img src=\"http://i4.buimg.com/1949/88ed3c8b8f0ccffd.png\" alt=\"Markdown\"></p>\n<p>至此就安装成功了，接下来可以一步一步开发一个TodoList项目了。项目实时更新于<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">我的GitHub</a></p>\n"},{"title":"用vue.js开发一个TodoList(3)","copyright":true,"date":"2017-05-29T12:55:16.000Z","_content":"\n> 前两次开发的没有加入存储功能，一刷新页面，todolist也会随之消失\n\n为了让todolist刷新页面仍然存在于页面中，这里用到localstorage。\n\n下面是代码:\n\n文件`Hello.vue`\n\n\n\n```\n<template>\n  <div id=\"app\">\n    <h1 v-html=\"title\"></h1>\n    <input v-model=\"newItem\" v-on:keyup.enter=\"addNew\"></input>\n    <ul>\n      <li v-for=\"item in items\" v-bind:class=\"{finished:item.isFinished}\" v-on:click=\"toggleFinish(item)\">{{item.label}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport Store from './store'\nexport default {\n  data: function () {\n    return {\n      title: 'This Is A Todolist',\n      items: Store.fetch(),\n      newItem: ''\n    }\n  },\n  watch: {\n    items: {\n      handler: function (items) {\n        Store.save(items)\n      },\n      deep: true\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    },\n    addNew: function () {\n      this.items.push({\n        label: this.newItem,\n        isFinished: false\n      })\n      this.newItem = ''\n    }\n  }\n}\n</script>\n\n<style>\n.finished {\n  text-decoration: underline;\n}\n\nli {\n  list-style: none;\n  font-size: 1.6em;\n  margin-top: 10px;\n}\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ninput {\n  width: 230px;\n  height: 40px;\n  border-radius: 20px;\n  padding: 0.4em 0.35em;\n  border: 3px solid #CFCFCF;\n  font-size: 1.55em;\n}\n</style>\n```\n\n文件`store.js`\n\n```javascript\nconst STORAGE_KEY = 'todos-vuejs'\nexport default {\n  fetch: function () {\n    return JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]')\n  },\n  save: function (items) {\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(items))\n  }\n}\n\n```\n\n两个方法：一个设置，一个获取，将两个方法加入到`Hello.vue`中去,代码已放到[github](https://github.com/Jimmy9876/TodoList)欢迎持续关注，如有问题欢迎留言交流","source":"_posts/用vue-js开发一个TodoList-3.md","raw":"---\ntitle: 用vue.js开发一个TodoList(3)\ncopyright: true\ndate: 2017-05-29 20:55:16\ntags: vue.js\n---\n\n> 前两次开发的没有加入存储功能，一刷新页面，todolist也会随之消失\n\n为了让todolist刷新页面仍然存在于页面中，这里用到localstorage。\n\n下面是代码:\n\n文件`Hello.vue`\n\n\n\n```\n<template>\n  <div id=\"app\">\n    <h1 v-html=\"title\"></h1>\n    <input v-model=\"newItem\" v-on:keyup.enter=\"addNew\"></input>\n    <ul>\n      <li v-for=\"item in items\" v-bind:class=\"{finished:item.isFinished}\" v-on:click=\"toggleFinish(item)\">{{item.label}}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport Store from './store'\nexport default {\n  data: function () {\n    return {\n      title: 'This Is A Todolist',\n      items: Store.fetch(),\n      newItem: ''\n    }\n  },\n  watch: {\n    items: {\n      handler: function (items) {\n        Store.save(items)\n      },\n      deep: true\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    },\n    addNew: function () {\n      this.items.push({\n        label: this.newItem,\n        isFinished: false\n      })\n      this.newItem = ''\n    }\n  }\n}\n</script>\n\n<style>\n.finished {\n  text-decoration: underline;\n}\n\nli {\n  list-style: none;\n  font-size: 1.6em;\n  margin-top: 10px;\n}\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ninput {\n  width: 230px;\n  height: 40px;\n  border-radius: 20px;\n  padding: 0.4em 0.35em;\n  border: 3px solid #CFCFCF;\n  font-size: 1.55em;\n}\n</style>\n```\n\n文件`store.js`\n\n```javascript\nconst STORAGE_KEY = 'todos-vuejs'\nexport default {\n  fetch: function () {\n    return JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '[]')\n  },\n  save: function (items) {\n    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(items))\n  }\n}\n\n```\n\n两个方法：一个设置，一个获取，将两个方法加入到`Hello.vue`中去,代码已放到[github](https://github.com/Jimmy9876/TodoList)欢迎持续关注，如有问题欢迎留言交流","slug":"用vue-js开发一个TodoList-3","published":1,"updated":"2017-10-16T07:16:33.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28j000zq0fafuvkq3m7","content":"<blockquote>\n<p>前两次开发的没有加入存储功能，一刷新页面，todolist也会随之消失</p>\n</blockquote>\n<p>为了让todolist刷新页面仍然存在于页面中，这里用到localstorage。</p>\n<p>下面是代码:</p>\n<p>文件<code>Hello.vue</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div id=&quot;app&quot;&gt;</div><div class=\"line\">    &lt;h1 v-html=&quot;title&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">    &lt;input v-model=&quot;newItem&quot; v-on:keyup.enter=&quot;addNew&quot;&gt;&lt;/input&gt;</div><div class=\"line\">    &lt;ul&gt;</div><div class=\"line\">      &lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished:item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;&#123;&#123;item.label&#125;&#125;&lt;/li&gt;</div><div class=\"line\">    &lt;/ul&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import Store from &apos;./store&apos;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data: function () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This Is A Todolist&apos;,</div><div class=\"line\">      items: Store.fetch(),</div><div class=\"line\">      newItem: &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    items: &#123;</div><div class=\"line\">      handler: function (items) &#123;</div><div class=\"line\">        Store.save(items)</div><div class=\"line\">      &#125;,</div><div class=\"line\">      deep: true</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;,</div><div class=\"line\">    addNew: function () &#123;</div><div class=\"line\">      this.items.push(&#123;</div><div class=\"line\">        label: this.newItem,</div><div class=\"line\">        isFinished: false</div><div class=\"line\">      &#125;)</div><div class=\"line\">      this.newItem = &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">.finished &#123;</div><div class=\"line\">  text-decoration: underline;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">li &#123;</div><div class=\"line\">  list-style: none;</div><div class=\"line\">  font-size: 1.6em;</div><div class=\"line\">  margin-top: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#app &#123;</div><div class=\"line\">  font-family: &apos;Avenir&apos;, Helvetica, Arial, sans-serif;</div><div class=\"line\">  -webkit-font-smoothing: antialiased;</div><div class=\"line\">  -moz-osx-font-smoothing: grayscale;</div><div class=\"line\">  text-align: center;</div><div class=\"line\">  color: #2c3e50;</div><div class=\"line\">  margin-top: 60px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">input &#123;</div><div class=\"line\">  width: 230px;</div><div class=\"line\">  height: 40px;</div><div class=\"line\">  border-radius: 20px;</div><div class=\"line\">  padding: 0.4em 0.35em;</div><div class=\"line\">  border: 3px solid #CFCFCF;</div><div class=\"line\">  font-size: 1.55em;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<p>文件<code>store.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> STORAGE_KEY = <span class=\"string\">'todos-vuejs'</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  fetch: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">window</span>.localStorage.getItem(STORAGE_KEY) || <span class=\"string\">'[]'</span>)</div><div class=\"line\">  &#125;,</div><div class=\"line\">  save: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">items</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.localStorage.setItem(STORAGE_KEY, <span class=\"built_in\">JSON</span>.stringify(items))</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>两个方法：一个设置，一个获取，将两个方法加入到<code>Hello.vue</code>中去,代码已放到<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">github</a>欢迎持续关注，如有问题欢迎留言交流</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>前两次开发的没有加入存储功能，一刷新页面，todolist也会随之消失</p>\n</blockquote>\n<p>为了让todolist刷新页面仍然存在于页面中，这里用到localstorage。</p>\n<p>下面是代码:</p>\n<p>文件<code>Hello.vue</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div id=&quot;app&quot;&gt;</div><div class=\"line\">    &lt;h1 v-html=&quot;title&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">    &lt;input v-model=&quot;newItem&quot; v-on:keyup.enter=&quot;addNew&quot;&gt;&lt;/input&gt;</div><div class=\"line\">    &lt;ul&gt;</div><div class=\"line\">      &lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished:item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;&#123;&#123;item.label&#125;&#125;&lt;/li&gt;</div><div class=\"line\">    &lt;/ul&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">import Store from &apos;./store&apos;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data: function () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This Is A Todolist&apos;,</div><div class=\"line\">      items: Store.fetch(),</div><div class=\"line\">      newItem: &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  watch: &#123;</div><div class=\"line\">    items: &#123;</div><div class=\"line\">      handler: function (items) &#123;</div><div class=\"line\">        Store.save(items)</div><div class=\"line\">      &#125;,</div><div class=\"line\">      deep: true</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;,</div><div class=\"line\">    addNew: function () &#123;</div><div class=\"line\">      this.items.push(&#123;</div><div class=\"line\">        label: this.newItem,</div><div class=\"line\">        isFinished: false</div><div class=\"line\">      &#125;)</div><div class=\"line\">      this.newItem = &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;style&gt;</div><div class=\"line\">.finished &#123;</div><div class=\"line\">  text-decoration: underline;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">li &#123;</div><div class=\"line\">  list-style: none;</div><div class=\"line\">  font-size: 1.6em;</div><div class=\"line\">  margin-top: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#app &#123;</div><div class=\"line\">  font-family: &apos;Avenir&apos;, Helvetica, Arial, sans-serif;</div><div class=\"line\">  -webkit-font-smoothing: antialiased;</div><div class=\"line\">  -moz-osx-font-smoothing: grayscale;</div><div class=\"line\">  text-align: center;</div><div class=\"line\">  color: #2c3e50;</div><div class=\"line\">  margin-top: 60px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">input &#123;</div><div class=\"line\">  width: 230px;</div><div class=\"line\">  height: 40px;</div><div class=\"line\">  border-radius: 20px;</div><div class=\"line\">  padding: 0.4em 0.35em;</div><div class=\"line\">  border: 3px solid #CFCFCF;</div><div class=\"line\">  font-size: 1.55em;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<p>文件<code>store.js</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> STORAGE_KEY = <span class=\"string\">'todos-vuejs'</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  fetch: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">JSON</span>.parse(<span class=\"built_in\">window</span>.localStorage.getItem(STORAGE_KEY) || <span class=\"string\">'[]'</span>)</div><div class=\"line\">  &#125;,</div><div class=\"line\">  save: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">items</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">window</span>.localStorage.setItem(STORAGE_KEY, <span class=\"built_in\">JSON</span>.stringify(items))</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>两个方法：一个设置，一个获取，将两个方法加入到<code>Hello.vue</code>中去,代码已放到<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">github</a>欢迎持续关注，如有问题欢迎留言交流</p>\n"},{"title":"用vue.js开发一个TodoList(2)","copyright":true,"date":"2017-05-29T04:43:54.000Z","_content":"\n上次搭建完了环境，这次开始学习如何写一个TodoList。\n\n首先打开文件\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fg24w7vy6cj305704o0sw.jpg)\n\n`Hello.vue`\n\n打开之后，删除`<template>`  ,`<script>` 内的与`HelloWorld`相关的代码。\n\n之后，在文件中写入代码\n\n```vue\n<template>\n  <div class=\"hello\">\n    <h1 v-text=\"title\"></h1>\n      <ul>\n        <li v-for=\"item in items\" v-bind:class=\"{finished: item.isFinished}\" v-on:click=\"toggleFinish(item)\">\n          {{ item.label }}\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      title: 'This is a todolist.',\n      items: [\n        {\n          label: 'coding',\n          isFinished: false\n        },\n        {\n          label: 'walking',\n          isFinished: true\n        }\n      ],\n      liClass: 'ThisisliClass'\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.finished{\n  text-decoration: underline;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n```\n\n其中\n\n```Vue\n <li v-for=\"item in items\" v-bind:class=\"{finished: item.isFinished}\" v-on:click=\"toggleFinish(item)\">\n          {{ item.label }}\n        </li>\n```\n\n`vue-for`用来渲染items里面的内容，items是一个数组，用来存放待完成的任务以及是否完成，里面的`vue-on`是绑定事件，绑定了一个click事件，点击即触发，触发的方法是method里面的function，这个function实现了点击去除下划线的功能。\n\n接下来使用v-model实现一个双向绑定，构建一个input输入框，实现输入按回车就能将数据存放到数组里展示到页面上\n\n```Vue\n <input v-model=\"newItem\" @keyup.enter=\"addNew\">\n\n<script>\nexport default {\n  data () {\n    return {\n      title: 'This is a todolist.',\n      items: [\n      ],\n      newItem: ''\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    },\n    addNew: function () {\n      this.items.push({\n        label: this.newItem,\n        isFinished: false\n      })\n      this.newItem = ''\n    }\n  }\n}\n</script>\n```\n\n具体项目源码已上传至[github](https://github.com/Jimmy9876/TodoList)\n\n至此实现了一个简单的todolist。\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fg25pjbu7nj30at0emaab.jpg)\n\n#  \n\n\n\n# 未完待续...\n\n","source":"_posts/用vue-js开发一个TodoList-2.md","raw":"---\ntitle: 用vue.js开发一个TodoList(2)\ncopyright: true\ndate: 2017-05-29 12:43:54\ntags: vue.js\n---\n\n上次搭建完了环境，这次开始学习如何写一个TodoList。\n\n首先打开文件\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fg24w7vy6cj305704o0sw.jpg)\n\n`Hello.vue`\n\n打开之后，删除`<template>`  ,`<script>` 内的与`HelloWorld`相关的代码。\n\n之后，在文件中写入代码\n\n```vue\n<template>\n  <div class=\"hello\">\n    <h1 v-text=\"title\"></h1>\n      <ul>\n        <li v-for=\"item in items\" v-bind:class=\"{finished: item.isFinished}\" v-on:click=\"toggleFinish(item)\">\n          {{ item.label }}\n        </li>\n      </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      title: 'This is a todolist.',\n      items: [\n        {\n          label: 'coding',\n          isFinished: false\n        },\n        {\n          label: 'walking',\n          isFinished: true\n        }\n      ],\n      liClass: 'ThisisliClass'\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.finished{\n  text-decoration: underline;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n```\n\n其中\n\n```Vue\n <li v-for=\"item in items\" v-bind:class=\"{finished: item.isFinished}\" v-on:click=\"toggleFinish(item)\">\n          {{ item.label }}\n        </li>\n```\n\n`vue-for`用来渲染items里面的内容，items是一个数组，用来存放待完成的任务以及是否完成，里面的`vue-on`是绑定事件，绑定了一个click事件，点击即触发，触发的方法是method里面的function，这个function实现了点击去除下划线的功能。\n\n接下来使用v-model实现一个双向绑定，构建一个input输入框，实现输入按回车就能将数据存放到数组里展示到页面上\n\n```Vue\n <input v-model=\"newItem\" @keyup.enter=\"addNew\">\n\n<script>\nexport default {\n  data () {\n    return {\n      title: 'This is a todolist.',\n      items: [\n      ],\n      newItem: ''\n    }\n  },\n  methods: {\n    toggleFinish: function (item) {\n      item.isFinished = !item.isFinished\n    },\n    addNew: function () {\n      this.items.push({\n        label: this.newItem,\n        isFinished: false\n      })\n      this.newItem = ''\n    }\n  }\n}\n</script>\n```\n\n具体项目源码已上传至[github](https://github.com/Jimmy9876/TodoList)\n\n至此实现了一个简单的todolist。\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fg25pjbu7nj30at0emaab.jpg)\n\n#  \n\n\n\n# 未完待续...\n\n","slug":"用vue-js开发一个TodoList-2","published":1,"updated":"2017-10-16T07:16:33.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28k0011q0faakt5rz51","content":"<p>上次搭建完了环境，这次开始学习如何写一个TodoList。</p>\n<p>首先打开文件</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fg24w7vy6cj305704o0sw.jpg\" alt=\"\"></p>\n<p><code>Hello.vue</code></p>\n<p>打开之后，删除<code>&lt;template&gt;</code>  ,<code>&lt;script&gt;</code> 内的与<code>HelloWorld</code>相关的代码。</p>\n<p>之后，在文件中写入代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div class=&quot;hello&quot;&gt;</div><div class=\"line\">    &lt;h1 v-text=&quot;title&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">      &lt;ul&gt;</div><div class=\"line\">        &lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished: item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;</div><div class=\"line\">          &#123;&#123; item.label &#125;&#125;</div><div class=\"line\">        &lt;/li&gt;</div><div class=\"line\">      &lt;/ul&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This is a todolist.&apos;,</div><div class=\"line\">      items: [</div><div class=\"line\">        &#123;</div><div class=\"line\">          label: &apos;coding&apos;,</div><div class=\"line\">          isFinished: false</div><div class=\"line\">        &#125;,</div><div class=\"line\">        &#123;</div><div class=\"line\">          label: &apos;walking&apos;,</div><div class=\"line\">          isFinished: true</div><div class=\"line\">        &#125;</div><div class=\"line\">      ],</div><div class=\"line\">      liClass: &apos;ThisisliClass&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</div><div class=\"line\">&lt;style scoped&gt;</div><div class=\"line\">.finished&#123;</div><div class=\"line\">  text-decoration: underline;</div><div class=\"line\">&#125;</div><div class=\"line\">h1, h2 &#123;</div><div class=\"line\">  font-weight: normal;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ul &#123;</div><div class=\"line\">  list-style-type: none;</div><div class=\"line\">  padding: 0;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">li &#123;</div><div class=\"line\">  display: inline-block;</div><div class=\"line\">  margin: 0 10px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">a &#123;</div><div class=\"line\">  color: #42b983;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<p>其中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished: item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;</div><div class=\"line\">         &#123;&#123; item.label &#125;&#125;</div><div class=\"line\">       &lt;/li&gt;</div></pre></td></tr></table></figure>\n<p><code>vue-for</code>用来渲染items里面的内容，items是一个数组，用来存放待完成的任务以及是否完成，里面的<code>vue-on</code>是绑定事件，绑定了一个click事件，点击即触发，触发的方法是method里面的function，这个function实现了点击去除下划线的功能。</p>\n<p>接下来使用v-model实现一个双向绑定，构建一个input输入框，实现输入按回车就能将数据存放到数组里展示到页面上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;input v-model=&quot;newItem&quot; @keyup.enter=&quot;addNew&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This is a todolist.&apos;,</div><div class=\"line\">      items: [</div><div class=\"line\">      ],</div><div class=\"line\">      newItem: &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;,</div><div class=\"line\">    addNew: function () &#123;</div><div class=\"line\">      this.items.push(&#123;</div><div class=\"line\">        label: this.newItem,</div><div class=\"line\">        isFinished: false</div><div class=\"line\">      &#125;)</div><div class=\"line\">      this.newItem = &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>具体项目源码已上传至<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">github</a></p>\n<p>至此实现了一个简单的todolist。</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fg25pjbu7nj30at0emaab.jpg\" alt=\"\"></p>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h1><h1 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h1>","site":{"data":{}},"excerpt":"","more":"<p>上次搭建完了环境，这次开始学习如何写一个TodoList。</p>\n<p>首先打开文件</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fg24w7vy6cj305704o0sw.jpg\" alt=\"\"></p>\n<p><code>Hello.vue</code></p>\n<p>打开之后，删除<code>&lt;template&gt;</code>  ,<code>&lt;script&gt;</code> 内的与<code>HelloWorld</code>相关的代码。</p>\n<p>之后，在文件中写入代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">  &lt;div class=&quot;hello&quot;&gt;</div><div class=\"line\">    &lt;h1 v-text=&quot;title&quot;&gt;&lt;/h1&gt;</div><div class=\"line\">      &lt;ul&gt;</div><div class=\"line\">        &lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished: item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;</div><div class=\"line\">          &#123;&#123; item.label &#125;&#125;</div><div class=\"line\">        &lt;/li&gt;</div><div class=\"line\">      &lt;/ul&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This is a todolist.&apos;,</div><div class=\"line\">      items: [</div><div class=\"line\">        &#123;</div><div class=\"line\">          label: &apos;coding&apos;,</div><div class=\"line\">          isFinished: false</div><div class=\"line\">        &#125;,</div><div class=\"line\">        &#123;</div><div class=\"line\">          label: &apos;walking&apos;,</div><div class=\"line\">          isFinished: true</div><div class=\"line\">        &#125;</div><div class=\"line\">      ],</div><div class=\"line\">      liClass: &apos;ThisisliClass&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- Add &quot;scoped&quot; attribute to limit CSS to this component only --&gt;</div><div class=\"line\">&lt;style scoped&gt;</div><div class=\"line\">.finished&#123;</div><div class=\"line\">  text-decoration: underline;</div><div class=\"line\">&#125;</div><div class=\"line\">h1, h2 &#123;</div><div class=\"line\">  font-weight: normal;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ul &#123;</div><div class=\"line\">  list-style-type: none;</div><div class=\"line\">  padding: 0;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">li &#123;</div><div class=\"line\">  display: inline-block;</div><div class=\"line\">  margin: 0 10px;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">a &#123;</div><div class=\"line\">  color: #42b983;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<p>其中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li v-for=&quot;item in items&quot; v-bind:class=&quot;&#123;finished: item.isFinished&#125;&quot; v-on:click=&quot;toggleFinish(item)&quot;&gt;</div><div class=\"line\">         &#123;&#123; item.label &#125;&#125;</div><div class=\"line\">       &lt;/li&gt;</div></pre></td></tr></table></figure>\n<p><code>vue-for</code>用来渲染items里面的内容，items是一个数组，用来存放待完成的任务以及是否完成，里面的<code>vue-on</code>是绑定事件，绑定了一个click事件，点击即触发，触发的方法是method里面的function，这个function实现了点击去除下划线的功能。</p>\n<p>接下来使用v-model实现一个双向绑定，构建一个input输入框，实现输入按回车就能将数据存放到数组里展示到页面上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;input v-model=&quot;newItem&quot; @keyup.enter=&quot;addNew&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">export default &#123;</div><div class=\"line\">  data () &#123;</div><div class=\"line\">    return &#123;</div><div class=\"line\">      title: &apos;This is a todolist.&apos;,</div><div class=\"line\">      items: [</div><div class=\"line\">      ],</div><div class=\"line\">      newItem: &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  methods: &#123;</div><div class=\"line\">    toggleFinish: function (item) &#123;</div><div class=\"line\">      item.isFinished = !item.isFinished</div><div class=\"line\">    &#125;,</div><div class=\"line\">    addNew: function () &#123;</div><div class=\"line\">      this.items.push(&#123;</div><div class=\"line\">        label: this.newItem,</div><div class=\"line\">        isFinished: false</div><div class=\"line\">      &#125;)</div><div class=\"line\">      this.newItem = &apos;&apos;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>具体项目源码已上传至<a href=\"https://github.com/Jimmy9876/TodoList\" target=\"_blank\" rel=\"external\">github</a></p>\n<p>至此实现了一个简单的todolist。</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fg25pjbu7nj30at0emaab.jpg\" alt=\"\"></p>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\" \"></a> </h1><h1 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h1>"},{"title":"让你的hexo博客支持LaTex数学公式","copyright":true,"date":"2017-06-11T08:21:20.000Z","mathjax":true,"_content":"\n## 利用MathJax来渲染LaTeX数学公式\n\n<!--more-->\n\n经过一番google之后，发现有位高手已经写好了一个自动部署MathJax的hexo插件 \n[http://catx.me/2014/03/09/hexo-mathjax-plugin/](http://catx.me/2014/03/09/hexo-mathjax-plugin/) \n安装方式也很简单，在你的博客文件夹下执行\n\n```shell\nnpm install hexo-math --save\nhexo math install\n```\n\n**这里npm如果缓慢，请自行换成淘宝镜像源**\n\n**关于淘宝镜像源，在之前文章中有提到，请自行查阅**\n\n然后在新建的博文中写上一个查看LaTeX效果\n\n```latex\n\\begin{align}\n\\theta\\_0 & := \\theta\\_0 - \\alpha\\frac{\\partial}{\\partial\\theta\\_0}J(\\theta\\_0,\\theta\\_1) \\\\\\\\\n& = \\theta\\_0 - \\alpha\\frac{\\partial}{\\partial\\theta\\_0} \\frac{1}{2m} \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})^2 \\\\\\\\\n& = \\theta\\_0 - (\\alpha \\frac{1}{2m} \\* 2 \\* \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})) \\* \\frac{\\partial}{\\partial\\theta\\_0}(h\\_\\theta(x^{(i)}) - y^{(i)}) \\\\\\\\\n& = \\theta\\_0 - \\frac{\\alpha}{m}  * \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})\n\\end{align}\n```\n\n$$\nR_{m \\times n} = U_{m \\times m} S_{m \\times n} V_{n \\times n}'\n$$\n\n嗯，发现一切显示完美...","source":"_posts/让你的hexo博客支持LaTex数学公式.md","raw":"---\ntitle: 让你的hexo博客支持LaTex数学公式\ncopyright: true\ndate: 2017-06-11 16:21:20\nmathjax: true\ntags: hexo\n---\n\n## 利用MathJax来渲染LaTeX数学公式\n\n<!--more-->\n\n经过一番google之后，发现有位高手已经写好了一个自动部署MathJax的hexo插件 \n[http://catx.me/2014/03/09/hexo-mathjax-plugin/](http://catx.me/2014/03/09/hexo-mathjax-plugin/) \n安装方式也很简单，在你的博客文件夹下执行\n\n```shell\nnpm install hexo-math --save\nhexo math install\n```\n\n**这里npm如果缓慢，请自行换成淘宝镜像源**\n\n**关于淘宝镜像源，在之前文章中有提到，请自行查阅**\n\n然后在新建的博文中写上一个查看LaTeX效果\n\n```latex\n\\begin{align}\n\\theta\\_0 & := \\theta\\_0 - \\alpha\\frac{\\partial}{\\partial\\theta\\_0}J(\\theta\\_0,\\theta\\_1) \\\\\\\\\n& = \\theta\\_0 - \\alpha\\frac{\\partial}{\\partial\\theta\\_0} \\frac{1}{2m} \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})^2 \\\\\\\\\n& = \\theta\\_0 - (\\alpha \\frac{1}{2m} \\* 2 \\* \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})) \\* \\frac{\\partial}{\\partial\\theta\\_0}(h\\_\\theta(x^{(i)}) - y^{(i)}) \\\\\\\\\n& = \\theta\\_0 - \\frac{\\alpha}{m}  * \\sum\\_{i=1}^{m}(h\\_\\theta(x^{(i)}) - y^{(i)})\n\\end{align}\n```\n\n$$\nR_{m \\times n} = U_{m \\times m} S_{m \\times n} V_{n \\times n}'\n$$\n\n嗯，发现一切显示完美...","slug":"让你的hexo博客支持LaTex数学公式","published":1,"updated":"2017-10-16T08:02:07.580Z","_id":"cj8tuk28l0013q0famocqeuaa","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"利用mathjax来渲染latex数学公式\"><a class=\"markdownIt-Anchor\" href=\"#利用mathjax来渲染latex数学公式\"></a> 利用MathJax来渲染LaTeX数学公式</h2>\n<a id=\"more\"></a>\n<p>经过一番google之后，发现有位高手已经写好了一个自动部署MathJax的hexo插件<br>\n<a href=\"http://catx.me/2014/03/09/hexo-mathjax-plugin/\" target=\"_blank\" rel=\"external\">http://catx.me/2014/03/09/hexo-mathjax-plugin/</a><br>\n安装方式也很简单，在你的博客文件夹下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-math --save</div><div class=\"line\">hexo math install</div></pre></td></tr></table></figure>\n<p><strong>这里npm如果缓慢，请自行换成淘宝镜像源</strong></p>\n<p><strong>关于淘宝镜像源，在之前文章中有提到，请自行查阅</strong></p>\n<p>然后在新建的博文中写上一个查看LaTeX效果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;align&#125;</div><div class=\"line\">\\theta\\_0 &amp; := \\theta\\_0 - \\alpha\\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125;J(\\theta\\_0,\\theta\\_1) \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - \\alpha\\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125; \\frac&#123;1&#125;&#123;2m&#125; \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)^2 \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - (\\alpha \\frac&#123;1&#125;&#123;2m&#125; \\* 2 \\* \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)) \\* \\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;) \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - \\frac&#123;\\alpha&#125;&#123;m&#125;  * \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)</div><div class=\"line\">\\end&#123;align&#125;</div></pre></td></tr></table></figure>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>U</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><msub><mi>S</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><msubsup><mi>V</mi><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><mrow><mi mathvariant=\"normal\">′</mi></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">R_{m \\times n} = U_{m \\times m} S_{m \\times n} V_{n \\times n}&#x27;\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.801892em;\"></span><span class=\"strut bottom\" style=\"height:1.107223em;vertical-align:-0.305331em;\"></span><span class=\"base displaystyle textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.00773em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">U</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.10903em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">V</span><span class=\"vlist\"><span style=\"top:0.24700000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">n</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span style=\"top:-0.41300000000000003em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathrm\">′</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span></span></span></span></span></p>\n<p>嗯，发现一切显示完美…</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"Jimmy的技术乐园":{"link":"http://aimpeter.xyz/","avatar":"https://ws4.sinaimg.cn/large/006tNc79gy1fhkma5ei3pj30ak0akt8w.jpg","desc":"个人blog"}}}},"excerpt":"<h2 id=\"利用mathjax来渲染latex数学公式\"><a class=\"markdownIt-Anchor\" href=\"#利用mathjax来渲染latex数学公式\"></a> 利用MathJax来渲染LaTeX数学公式</h2>","more":"<p>经过一番google之后，发现有位高手已经写好了一个自动部署MathJax的hexo插件<br>\n<a href=\"http://catx.me/2014/03/09/hexo-mathjax-plugin/\" target=\"_blank\" rel=\"external\">http://catx.me/2014/03/09/hexo-mathjax-plugin/</a><br>\n安装方式也很简单，在你的博客文件夹下执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-math --save</div><div class=\"line\">hexo math install</div></pre></td></tr></table></figure>\n<p><strong>这里npm如果缓慢，请自行换成淘宝镜像源</strong></p>\n<p><strong>关于淘宝镜像源，在之前文章中有提到，请自行查阅</strong></p>\n<p>然后在新建的博文中写上一个查看LaTeX效果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;align&#125;</div><div class=\"line\">\\theta\\_0 &amp; := \\theta\\_0 - \\alpha\\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125;J(\\theta\\_0,\\theta\\_1) \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - \\alpha\\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125; \\frac&#123;1&#125;&#123;2m&#125; \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)^2 \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - (\\alpha \\frac&#123;1&#125;&#123;2m&#125; \\* 2 \\* \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)) \\* \\frac&#123;\\partial&#125;&#123;\\partial\\theta\\_0&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;) \\\\\\\\</div><div class=\"line\">&amp; = \\theta\\_0 - \\frac&#123;\\alpha&#125;&#123;m&#125;  * \\sum\\_&#123;i=1&#125;^&#123;m&#125;(h\\_\\theta(x^&#123;(i)&#125;) - y^&#123;(i)&#125;)</div><div class=\"line\">\\end&#123;align&#125;</div></pre></td></tr></table></figure>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>U</mi><mrow><mi>m</mi><mo>×</mo><mi>m</mi></mrow></msub><msub><mi>S</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msub><msubsup><mi>V</mi><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow><mrow><mi mathvariant=\"normal\">′</mi></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">R_{m \\times n} = U_{m \\times m} S_{m \\times n} V_{n \\times n}&#x27;\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.801892em;\"></span><span class=\"strut bottom\" style=\"height:1.107223em;vertical-align:-0.305331em;\"></span><span class=\"base displaystyle textstyle uncramped\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.00773em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mrel\">=</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">U</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.10903em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">m</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:-0.05764em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">m</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">V</span><span class=\"vlist\"><span style=\"top:0.24700000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord scriptstyle cramped\"><span class=\"mord mathit\">n</span><span class=\"mbin\">×</span><span class=\"mord mathit\">n</span></span></span></span><span style=\"top:-0.41300000000000003em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord scriptstyle uncramped\"><span class=\"mord mathrm\">′</span></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span></span></span></span></span></p>\n<p>嗯，发现一切显示完美…</p>"},{"title":"软件测试习题（更新ing）","copyright":true,"date":"2017-06-11T06:21:57.000Z","password":"helloworld!","mathjax":true,"_content":"\n# 软件测试复习\n\n> 软件测试复习题\n\n<!--more-->\n\n# 软件测试复习\n\n## 判断题\n\n1a、软件测试的目的仅仅是尽可能多的找出软件中的缺陷（ ）\n\n1b、没有检测出错误的测试用例是低质量的测试用例（ ）\n\n2、自适应随机测试的错误检测效率高于随机测试（ ）\n\n3a、回归测试是由最终用户来实施的（ ）\n\n3b、回归测试中，必须运行前次测试中的所有测试用例（ ）\n\n4、需求规格说明书确定后，软件实现的额外功能越多越好（ ）\n\n5a、大多数软件缺陷是在程序编码阶段导致的（ ）\n\n5b、编码开始前的活动不会导致软件缺陷（ ）\n\n5c、大多数软件缺陷是在需求分析阶段导致的（ ）\n\n6a、白盒测试中，满足判定覆盖标准的测试用例集，其错误检测能力强于满足条件覆盖标准的测试用例集（ ）\n\n6b、白盒测试中，满足判定覆盖标准的测试用例集，其对逻辑表达式的覆盖能力强于满足条件覆盖标准的测试用例集（ ）\n\n7a、自底向上集成需要测试员编写驱动模块（ ）\n\n7b、自底向上集成需要测试员编写桩模块（ ）\n\n7c、自顶向下集成需要测试员编写驱动模块（ ）\n\n7d、自顶向下集成需要测试员编写桩模块（ ）\n\n8、负载测试是验证要检验的系统的能力最高能达到什么程度（ ）\n\n9、测试人员要坚持原则，缺陷未修复完坚决不予通过（ ）\n\n10、发现错误多的模块，残留在模块中的错误也多（ ）\n\n11a、编码完成之前测试人员不需要提交任何工作（ ）\n\n11b、编码完成之前测试人员不需要开展任何工作（ ）\n\n12a、软件测试只能发现错误，但不能保证测试后的软件没有错误（ ）\n\n12b、测试计划中指定的所有测试用例运行均通过，说明软件没有错误（ ）\n\n12c、软件项目进入需求分析阶段，测试人员就应该开始介入其中（ ）\n\n13、在设计测试用例时，应包括合理的输入和不合理的输入（ ）\n\n14、在进行软件测试时，只要故障代码在执行某条测试用例时被覆盖，则该测试用例的运行结果就一定是失败（ ）\n\n15a、白盒测试中，可以通过大量设计测试用例的方式，使得这些测试用例的语句覆盖率达到100%（ ）\n\n15b、白盒测试中，满足条件组合覆盖的测试用例集，一定能保证判定语句取真取假的情况出现至少各一次（ ）\n\n16、决策表中条件的数量为n，则最终决策表中规则的数量一定是$2^n$（ ）\n\n17、自适应随机测试的错误检测效率高于随机测试（ ）\n\n## 选择题\n1a、系统测试通常使用_______技术，主要测试被测应用的高级互操作性需求，而无需考虑被测试应用的内部结构。\n\n1b、单元测试的主要测试技术不包括（ ）\nA、白盒测试          B、压力测试\nC、静态测试          D、结构化测试\n\n2、软件生命周期中所花费用最多的阶段是______\n\n3、软件确认测试合格通过的准则是___________________\n\n4a、根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为_______\n\n5、下列关于Alpha测试时的描述中正确的是__\nA、Alpha测试是集成测试的一种   B、Alpha测试不需要用户代表参加\nC、Alpha测试不需要测试人员参加  D、Alpha测试需要用户代表参加\n\n6a、关于软件测试目的的描述，以下哪些是正确的（ ）\nA、评价软件的质量   B、更正软件的错误\nC、找出软件中的所有错误    D、证明软件是正确的\n\n6b、关于软件测试目的的描述，以下哪些是错误的（ ）\nA、评价软件的质量   B、更正软件的错误\nC、找出软件中的所有错误    D、证明软件是正确的\n\n7a、下列方法中，不属于黑盒测试的是（ ）\nA、基本路径测试法   B、等价类测试法\nC、边界值分析法    D、基于场景的测试方法\n\n7b、以下不属于白盒测试的技术的是（ ）\nA、逻辑覆盖  B、基本路径测试\nC、循环覆盖测试 D、等价类划分\n\n8a、使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。\nA、使用说明书 B、程序的代码及结构\nC、需求说明书 D、程序的功能\n\n8b、使用黑盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。\nA、程序的内部逻辑   B、程序的复杂结构\nC、程序的源代码    D、程序的功能\n\n9、测试结束的标准可能包括（ ）\nA、运行完指定的所有测试用例  B、覆盖率达到给定的标准\nC、检测到所有的错误  D、时间及其他资源耗尽\n\n10a、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的条件覆盖率，至少需要设计__个测试用例\n\n10b、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的判定条件覆盖率，至少需要设计__个测试用例\n\n10c、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的条件组合覆盖率，至少需要设计__个测试用例\n\n## 简答题\n一、在列出等价类表后确定测试用例的具体步骤\n（1）首先为等价类表中的每一个等价类分别规定一个唯一的编号\n（2）设计一个新的测试用例，使它能够尽量覆盖尚未覆盖的有效等价类，重复这个步骤，直到所有的有效等价类均被测试用例所覆盖\n（3）设计一个新的测试用例，使它仅覆盖一个尚未覆盖的无效等价类，重复这一步骤，直到所有的无效等价类均被测试用例所覆盖\n\n二、为什么使用自适应随机测试\n自适应随机测试(Adaptive Random Testing,ART)是一种增强的随机测试,比随机测试更有效。自适应随机测试（Adaptive Random Testing）是一种更加平滑的测试用例生成技术。在给定的测试用例集中，随机选取第一个测试用例，并从集合中删除。\n\n三、自适应随机测试（Adaptive Random Testing）相对于随机测试（Random Testing）具有什么优势？\n自适应随机测试的检查错误的效率高于随机测试。自适应随机测试吸取随机测试的优点，并在选取测试用例时按照一定的规则，保证测试用例均匀分布在整个解空间中，提升其检测出错误的能力。\n\n四、为什么使用边界值分析法？\n无数的测试实践表明，大量的故障往往发生在输入定义域或输出值域的边界上，而不是在其内部，因此，针对各种边界情况设计测试用例，通常会取得很好的测试效果。\n\n五、怎样用边界值分析法设计测试用例？\n（1）首先确定边界情况，通常输入或输出等价类的边界就是应该着重测试的边界情况\n（2）选取正好等于、刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值\n\n六、白盒测试中什么是判定／条件覆盖？它与判定覆盖和条件覆盖的关系？\n设计足够多的测试用例，使得程序中每个判定包含的每个条件的所有情况（真／假）至少出现一次，并且每个判定本身的判定结果（真／假）也至少出现一次\n——满足判定／条件覆盖的测试用例一定同时满足判定覆盖和条件覆盖\n\n七、采用因果图法设计测试用例的步骤\n（1）根据程序规格说明书描述，分析并确定因（输入条件）和果（输出结果或程序状态的改变），画出因果图\n（2）将得到的因果图转换为判定表\n（3）为判定表中每一列所表示的情况设计一个测试用例\n\n八、使用因果图法的优点\n（1）考虑到了输入情况的各种组合以及各个输入情况之间的相互制约关系\n（2）能够帮助测试人员按照一定的步骤，高效率的开发测试用例\n（3）因果图法是将自然语言规格说明转化成形式语言规格说明的一种严格的方法，可以指出规格说明存在的不完整性和二义性\n\n九、构造决策表的五个步骤\n（1）确定规则的个数（有n个条件的决策表有2n个规则（每个条件取真、假值））\n（2）列出所有的条件桩和动作桩\n（3）填入条件项\n（4）填入动作项，得到初始决策表\n（5）简化决策表，合并相似规则\n\n十、 适用于使用决策表设计测试用例的条件：\n规格说明以决策表形式给出，或较容易转换为决策表\n条件的排列顺序不会也不应影响执行的操作\n规则的排列顺序不会也不应影响执行的操作\n当某一规则的条件已经满足，并确定要执行的操作后，不必检验别的规则\n如果某一规则的条件要执行多个操作，这些操作的执行顺序无关紧要\n\n十一、简述负载测试、压力测试、性能测试的联系与区别\n性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。通过负载测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时系统各指标的变化情况。压力测试是通过确定一个系统的瓶颈或者不能接受的性能点，来获得系统能提供的最大服务级别的测试。\n\n十二、软件测试的自动化包含哪些内容？为什么要使用自动化测试？\n标识、设计、建立、执行、比较\n可以执行一些手工测试困难或者难以完成的测试，例如并发测试；更好的利用资源，可以利用整晚或周末空闲机器时间进行测试；通过较少的可以获得更彻底的测试，以及提高产品的质量\n\n十三、假设程序中存在一行错误的代码，根据PIE模型，测试用例运行‘失败’需要满足哪些条件，请给出一个简单的例子，测试用例覆盖错误代码，但测试用例运行结果‘通过’。\n（1）执行／可达性：必须包含程序中包含故障的位置\n（2）感染：程序的状态必须是不正确的\n（3）传播：受感染的状态必须传播导致一些输出的程序是不正确的\n例子：\n\n```java\npublic static void CSta(int []numbers)\n{\n    int length = numbers.length;\n    double mean, sum;\n    sum = 0.0;\n    for(int i = 1; i<length; i++)//i=0\n    {\n        sum += numbers[i];\n    }\n    mean = sum / (double) length;\n    System.out.println(\"mean: \" + mean);\n}\nTest Input:[0,4,5] sum=0+4+5 sum=4+5 mean=3 mean=3\n```\n\n十四、假设存在两个串行循环，且两者的循环无约束关系，如何进行测试？逻辑覆盖测试（循环测试）\n（1）如果串行循环的循环体是彼此之间独立的话，可以使用简单循环的测试方法\n循环变量的初值是否正确\n循环变量的最大值是否正确\n何时退出循环，循环变量的增量是否正确\n（2）两个循环串接起来，则考虑使用嵌套循环：\n当外循环变量为最小值，内层循环也为最小值时，运算结果\n当外循环变量为最小值，内层循环也为最大值时，运算结果\n当外循环变量为最大值，内层循环也为最小值时，运算结果\n当外循环变量为最大值，内层循环也为最大值时，运算结果\n循环变量的增量是否正确\n何时退出内循环\n何时退出外循环\n\n十五、为什么需要进行组合测试？\n输入输出测试、配置测试、兼容性测试等因素间的存在复杂关系，不容易简单测试，而组合测试能够在保证错误检出率的前提下采用较少的测试用例测试系统。\n\n十六、用等价类划分法设计下面的测试用例\n输入三个整数a、b、c，分别作为三角形的三条边，现通过程序判断由三条边构成的三角形的类型为等边三角形，等腰三角形，一般三角形（特殊的还有直角三角形），以及构不成三角形\n    现在要求输入三个整数a，b，c，必须满足以下条件\n    条件1： 1≤a≤100    条件4： a<b+c\n    条件2： 1≤b≤100    条件5： b<a+c\n    条件3： 1≤c≤100    条件6： c<a+b\n如果输入值a、b、c不满足条件1、条件2和条件3，程序会给出“非法输入”的信息，如果输入值a、b、c满足条件1、条件2和条件3，则输入下列四种情况之一：\n（1）如果不满足条件4、条件5和条件6中的一个，则程序输出为“非三角形”。\n（2）如果三条边相等，则程序输出为”等边三角形“。\n（3）如果恰好有两条边相等，则程序输出为”等腰三角形“。\n（4）如果三条边都不相等，则程序输出为“一般三角形”。\n要求：\n（1）分析程序的规格说明，列出等价类表（有效等价类、无效等价类）；\n（2）设计若干条测试用用例以覆盖所有等价类。\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fgjsrgh2pqj30hx0rwaj9.jpg)\n\n\n\n十七、c语言中的字符串拷贝函数声明如下：\n`extern char *strcpy(char *dest, const char *src)`\n头文件： `#include <string.h>`\n功能： 把从src地址开始且含有NULL结束符的字符串复制到以dest开始的地址空间\n说明： 指针src和dest所指内存不重叠，dest有足够的空间，返回指向dest的指针\n请：（1）尝试给出函数的实现；（2）针对该函数的功能编写测试用例；（3）将这些测试用例用gTest（或CppUnit、或JUnit）测试代码的形式给出。\n\n```c\n  char* strcpy(char* Dest, const char* Src)      {       assert((Dest != NULL)&&(Src != NULL));        if(Dest == Src)return Dest;         char* tempStr = Dest;       while((*(Dest++) = *(Src++)) != '/0')             NULL;                                              return tempStr;                          }void main(){   clrscr();Char* strDest,*strSrc,*str;strDest=\"ABCD\";strSrc=\"EFG\";str = strcpy(strDest, strSrc);Printf(\"%s\",str);}输出：EFG\n```\n\n未完待续、、、","source":"_posts/软件测试习题（更新ing）.md","raw":"---\ntitle: 软件测试习题（更新ing）\ncopyright: true\ndate: 2017-06-11 14:21:57\npassword: helloworld!\ntags: 软件测试\nmathjax: true\n---\n\n# 软件测试复习\n\n> 软件测试复习题\n\n<!--more-->\n\n# 软件测试复习\n\n## 判断题\n\n1a、软件测试的目的仅仅是尽可能多的找出软件中的缺陷（ ）\n\n1b、没有检测出错误的测试用例是低质量的测试用例（ ）\n\n2、自适应随机测试的错误检测效率高于随机测试（ ）\n\n3a、回归测试是由最终用户来实施的（ ）\n\n3b、回归测试中，必须运行前次测试中的所有测试用例（ ）\n\n4、需求规格说明书确定后，软件实现的额外功能越多越好（ ）\n\n5a、大多数软件缺陷是在程序编码阶段导致的（ ）\n\n5b、编码开始前的活动不会导致软件缺陷（ ）\n\n5c、大多数软件缺陷是在需求分析阶段导致的（ ）\n\n6a、白盒测试中，满足判定覆盖标准的测试用例集，其错误检测能力强于满足条件覆盖标准的测试用例集（ ）\n\n6b、白盒测试中，满足判定覆盖标准的测试用例集，其对逻辑表达式的覆盖能力强于满足条件覆盖标准的测试用例集（ ）\n\n7a、自底向上集成需要测试员编写驱动模块（ ）\n\n7b、自底向上集成需要测试员编写桩模块（ ）\n\n7c、自顶向下集成需要测试员编写驱动模块（ ）\n\n7d、自顶向下集成需要测试员编写桩模块（ ）\n\n8、负载测试是验证要检验的系统的能力最高能达到什么程度（ ）\n\n9、测试人员要坚持原则，缺陷未修复完坚决不予通过（ ）\n\n10、发现错误多的模块，残留在模块中的错误也多（ ）\n\n11a、编码完成之前测试人员不需要提交任何工作（ ）\n\n11b、编码完成之前测试人员不需要开展任何工作（ ）\n\n12a、软件测试只能发现错误，但不能保证测试后的软件没有错误（ ）\n\n12b、测试计划中指定的所有测试用例运行均通过，说明软件没有错误（ ）\n\n12c、软件项目进入需求分析阶段，测试人员就应该开始介入其中（ ）\n\n13、在设计测试用例时，应包括合理的输入和不合理的输入（ ）\n\n14、在进行软件测试时，只要故障代码在执行某条测试用例时被覆盖，则该测试用例的运行结果就一定是失败（ ）\n\n15a、白盒测试中，可以通过大量设计测试用例的方式，使得这些测试用例的语句覆盖率达到100%（ ）\n\n15b、白盒测试中，满足条件组合覆盖的测试用例集，一定能保证判定语句取真取假的情况出现至少各一次（ ）\n\n16、决策表中条件的数量为n，则最终决策表中规则的数量一定是$2^n$（ ）\n\n17、自适应随机测试的错误检测效率高于随机测试（ ）\n\n## 选择题\n1a、系统测试通常使用_______技术，主要测试被测应用的高级互操作性需求，而无需考虑被测试应用的内部结构。\n\n1b、单元测试的主要测试技术不包括（ ）\nA、白盒测试          B、压力测试\nC、静态测试          D、结构化测试\n\n2、软件生命周期中所花费用最多的阶段是______\n\n3、软件确认测试合格通过的准则是___________________\n\n4a、根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为_______\n\n5、下列关于Alpha测试时的描述中正确的是__\nA、Alpha测试是集成测试的一种   B、Alpha测试不需要用户代表参加\nC、Alpha测试不需要测试人员参加  D、Alpha测试需要用户代表参加\n\n6a、关于软件测试目的的描述，以下哪些是正确的（ ）\nA、评价软件的质量   B、更正软件的错误\nC、找出软件中的所有错误    D、证明软件是正确的\n\n6b、关于软件测试目的的描述，以下哪些是错误的（ ）\nA、评价软件的质量   B、更正软件的错误\nC、找出软件中的所有错误    D、证明软件是正确的\n\n7a、下列方法中，不属于黑盒测试的是（ ）\nA、基本路径测试法   B、等价类测试法\nC、边界值分析法    D、基于场景的测试方法\n\n7b、以下不属于白盒测试的技术的是（ ）\nA、逻辑覆盖  B、基本路径测试\nC、循环覆盖测试 D、等价类划分\n\n8a、使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。\nA、使用说明书 B、程序的代码及结构\nC、需求说明书 D、程序的功能\n\n8b、使用黑盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。\nA、程序的内部逻辑   B、程序的复杂结构\nC、程序的源代码    D、程序的功能\n\n9、测试结束的标准可能包括（ ）\nA、运行完指定的所有测试用例  B、覆盖率达到给定的标准\nC、检测到所有的错误  D、时间及其他资源耗尽\n\n10a、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的条件覆盖率，至少需要设计__个测试用例\n\n10b、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的判定条件覆盖率，至少需要设计__个测试用例\n\n10c、如果一个判定中的谓词为（A>1）or（B<=3），则为了达到100%的条件组合覆盖率，至少需要设计__个测试用例\n\n## 简答题\n一、在列出等价类表后确定测试用例的具体步骤\n（1）首先为等价类表中的每一个等价类分别规定一个唯一的编号\n（2）设计一个新的测试用例，使它能够尽量覆盖尚未覆盖的有效等价类，重复这个步骤，直到所有的有效等价类均被测试用例所覆盖\n（3）设计一个新的测试用例，使它仅覆盖一个尚未覆盖的无效等价类，重复这一步骤，直到所有的无效等价类均被测试用例所覆盖\n\n二、为什么使用自适应随机测试\n自适应随机测试(Adaptive Random Testing,ART)是一种增强的随机测试,比随机测试更有效。自适应随机测试（Adaptive Random Testing）是一种更加平滑的测试用例生成技术。在给定的测试用例集中，随机选取第一个测试用例，并从集合中删除。\n\n三、自适应随机测试（Adaptive Random Testing）相对于随机测试（Random Testing）具有什么优势？\n自适应随机测试的检查错误的效率高于随机测试。自适应随机测试吸取随机测试的优点，并在选取测试用例时按照一定的规则，保证测试用例均匀分布在整个解空间中，提升其检测出错误的能力。\n\n四、为什么使用边界值分析法？\n无数的测试实践表明，大量的故障往往发生在输入定义域或输出值域的边界上，而不是在其内部，因此，针对各种边界情况设计测试用例，通常会取得很好的测试效果。\n\n五、怎样用边界值分析法设计测试用例？\n（1）首先确定边界情况，通常输入或输出等价类的边界就是应该着重测试的边界情况\n（2）选取正好等于、刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值\n\n六、白盒测试中什么是判定／条件覆盖？它与判定覆盖和条件覆盖的关系？\n设计足够多的测试用例，使得程序中每个判定包含的每个条件的所有情况（真／假）至少出现一次，并且每个判定本身的判定结果（真／假）也至少出现一次\n——满足判定／条件覆盖的测试用例一定同时满足判定覆盖和条件覆盖\n\n七、采用因果图法设计测试用例的步骤\n（1）根据程序规格说明书描述，分析并确定因（输入条件）和果（输出结果或程序状态的改变），画出因果图\n（2）将得到的因果图转换为判定表\n（3）为判定表中每一列所表示的情况设计一个测试用例\n\n八、使用因果图法的优点\n（1）考虑到了输入情况的各种组合以及各个输入情况之间的相互制约关系\n（2）能够帮助测试人员按照一定的步骤，高效率的开发测试用例\n（3）因果图法是将自然语言规格说明转化成形式语言规格说明的一种严格的方法，可以指出规格说明存在的不完整性和二义性\n\n九、构造决策表的五个步骤\n（1）确定规则的个数（有n个条件的决策表有2n个规则（每个条件取真、假值））\n（2）列出所有的条件桩和动作桩\n（3）填入条件项\n（4）填入动作项，得到初始决策表\n（5）简化决策表，合并相似规则\n\n十、 适用于使用决策表设计测试用例的条件：\n规格说明以决策表形式给出，或较容易转换为决策表\n条件的排列顺序不会也不应影响执行的操作\n规则的排列顺序不会也不应影响执行的操作\n当某一规则的条件已经满足，并确定要执行的操作后，不必检验别的规则\n如果某一规则的条件要执行多个操作，这些操作的执行顺序无关紧要\n\n十一、简述负载测试、压力测试、性能测试的联系与区别\n性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。通过负载测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时系统各指标的变化情况。压力测试是通过确定一个系统的瓶颈或者不能接受的性能点，来获得系统能提供的最大服务级别的测试。\n\n十二、软件测试的自动化包含哪些内容？为什么要使用自动化测试？\n标识、设计、建立、执行、比较\n可以执行一些手工测试困难或者难以完成的测试，例如并发测试；更好的利用资源，可以利用整晚或周末空闲机器时间进行测试；通过较少的可以获得更彻底的测试，以及提高产品的质量\n\n十三、假设程序中存在一行错误的代码，根据PIE模型，测试用例运行‘失败’需要满足哪些条件，请给出一个简单的例子，测试用例覆盖错误代码，但测试用例运行结果‘通过’。\n（1）执行／可达性：必须包含程序中包含故障的位置\n（2）感染：程序的状态必须是不正确的\n（3）传播：受感染的状态必须传播导致一些输出的程序是不正确的\n例子：\n\n```java\npublic static void CSta(int []numbers)\n{\n    int length = numbers.length;\n    double mean, sum;\n    sum = 0.0;\n    for(int i = 1; i<length; i++)//i=0\n    {\n        sum += numbers[i];\n    }\n    mean = sum / (double) length;\n    System.out.println(\"mean: \" + mean);\n}\nTest Input:[0,4,5] sum=0+4+5 sum=4+5 mean=3 mean=3\n```\n\n十四、假设存在两个串行循环，且两者的循环无约束关系，如何进行测试？逻辑覆盖测试（循环测试）\n（1）如果串行循环的循环体是彼此之间独立的话，可以使用简单循环的测试方法\n循环变量的初值是否正确\n循环变量的最大值是否正确\n何时退出循环，循环变量的增量是否正确\n（2）两个循环串接起来，则考虑使用嵌套循环：\n当外循环变量为最小值，内层循环也为最小值时，运算结果\n当外循环变量为最小值，内层循环也为最大值时，运算结果\n当外循环变量为最大值，内层循环也为最小值时，运算结果\n当外循环变量为最大值，内层循环也为最大值时，运算结果\n循环变量的增量是否正确\n何时退出内循环\n何时退出外循环\n\n十五、为什么需要进行组合测试？\n输入输出测试、配置测试、兼容性测试等因素间的存在复杂关系，不容易简单测试，而组合测试能够在保证错误检出率的前提下采用较少的测试用例测试系统。\n\n十六、用等价类划分法设计下面的测试用例\n输入三个整数a、b、c，分别作为三角形的三条边，现通过程序判断由三条边构成的三角形的类型为等边三角形，等腰三角形，一般三角形（特殊的还有直角三角形），以及构不成三角形\n    现在要求输入三个整数a，b，c，必须满足以下条件\n    条件1： 1≤a≤100    条件4： a<b+c\n    条件2： 1≤b≤100    条件5： b<a+c\n    条件3： 1≤c≤100    条件6： c<a+b\n如果输入值a、b、c不满足条件1、条件2和条件3，程序会给出“非法输入”的信息，如果输入值a、b、c满足条件1、条件2和条件3，则输入下列四种情况之一：\n（1）如果不满足条件4、条件5和条件6中的一个，则程序输出为“非三角形”。\n（2）如果三条边相等，则程序输出为”等边三角形“。\n（3）如果恰好有两条边相等，则程序输出为”等腰三角形“。\n（4）如果三条边都不相等，则程序输出为“一般三角形”。\n要求：\n（1）分析程序的规格说明，列出等价类表（有效等价类、无效等价类）；\n（2）设计若干条测试用用例以覆盖所有等价类。\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fgjsrgh2pqj30hx0rwaj9.jpg)\n\n\n\n十七、c语言中的字符串拷贝函数声明如下：\n`extern char *strcpy(char *dest, const char *src)`\n头文件： `#include <string.h>`\n功能： 把从src地址开始且含有NULL结束符的字符串复制到以dest开始的地址空间\n说明： 指针src和dest所指内存不重叠，dest有足够的空间，返回指向dest的指针\n请：（1）尝试给出函数的实现；（2）针对该函数的功能编写测试用例；（3）将这些测试用例用gTest（或CppUnit、或JUnit）测试代码的形式给出。\n\n```c\n  char* strcpy(char* Dest, const char* Src)      {       assert((Dest != NULL)&&(Src != NULL));        if(Dest == Src)return Dest;         char* tempStr = Dest;       while((*(Dest++) = *(Src++)) != '/0')             NULL;                                              return tempStr;                          }void main(){   clrscr();Char* strDest,*strSrc,*str;strDest=\"ABCD\";strSrc=\"EFG\";str = strcpy(strDest, strSrc);Printf(\"%s\",str);}输出：EFG\n```\n\n未完待续、、、","slug":"软件测试习题（更新ing）","published":1,"updated":"2017-10-16T07:16:33.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28m0014q0fahby09osg","content":"<h1 id=\"软件测试复习\"><a href=\"#软件测试复习\" class=\"headerlink\" title=\"软件测试复习\"></a>软件测试复习</h1><blockquote>\n<p>软件测试复习题</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"软件测试复习-1\"><a href=\"#软件测试复习-1\" class=\"headerlink\" title=\"软件测试复习\"></a>软件测试复习</h1><h2 id=\"判断题\"><a href=\"#判断题\" class=\"headerlink\" title=\"判断题\"></a>判断题</h2><p>1a、软件测试的目的仅仅是尽可能多的找出软件中的缺陷（ ）</p>\n<p>1b、没有检测出错误的测试用例是低质量的测试用例（ ）</p>\n<p>2、自适应随机测试的错误检测效率高于随机测试（ ）</p>\n<p>3a、回归测试是由最终用户来实施的（ ）</p>\n<p>3b、回归测试中，必须运行前次测试中的所有测试用例（ ）</p>\n<p>4、需求规格说明书确定后，软件实现的额外功能越多越好（ ）</p>\n<p>5a、大多数软件缺陷是在程序编码阶段导致的（ ）</p>\n<p>5b、编码开始前的活动不会导致软件缺陷（ ）</p>\n<p>5c、大多数软件缺陷是在需求分析阶段导致的（ ）</p>\n<p>6a、白盒测试中，满足判定覆盖标准的测试用例集，其错误检测能力强于满足条件覆盖标准的测试用例集（ ）</p>\n<p>6b、白盒测试中，满足判定覆盖标准的测试用例集，其对逻辑表达式的覆盖能力强于满足条件覆盖标准的测试用例集（ ）</p>\n<p>7a、自底向上集成需要测试员编写驱动模块（ ）</p>\n<p>7b、自底向上集成需要测试员编写桩模块（ ）</p>\n<p>7c、自顶向下集成需要测试员编写驱动模块（ ）</p>\n<p>7d、自顶向下集成需要测试员编写桩模块（ ）</p>\n<p>8、负载测试是验证要检验的系统的能力最高能达到什么程度（ ）</p>\n<p>9、测试人员要坚持原则，缺陷未修复完坚决不予通过（ ）</p>\n<p>10、发现错误多的模块，残留在模块中的错误也多（ ）</p>\n<p>11a、编码完成之前测试人员不需要提交任何工作（ ）</p>\n<p>11b、编码完成之前测试人员不需要开展任何工作（ ）</p>\n<p>12a、软件测试只能发现错误，但不能保证测试后的软件没有错误（ ）</p>\n<p>12b、测试计划中指定的所有测试用例运行均通过，说明软件没有错误（ ）</p>\n<p>12c、软件项目进入需求分析阶段，测试人员就应该开始介入其中（ ）</p>\n<p>13、在设计测试用例时，应包括合理的输入和不合理的输入（ ）</p>\n<p>14、在进行软件测试时，只要故障代码在执行某条测试用例时被覆盖，则该测试用例的运行结果就一定是失败（ ）</p>\n<p>15a、白盒测试中，可以通过大量设计测试用例的方式，使得这些测试用例的语句覆盖率达到100%（ ）</p>\n<p>15b、白盒测试中，满足条件组合覆盖的测试用例集，一定能保证判定语句取真取假的情况出现至少各一次（ ）</p>\n<p>16、决策表中条件的数量为n，则最终决策表中规则的数量一定是$2^n$（ ）</p>\n<p>17、自适应随机测试的错误检测效率高于随机测试（ ）</p>\n<h2 id=\"选择题\"><a href=\"#选择题\" class=\"headerlink\" title=\"选择题\"></a>选择题</h2><p>1a、系统测试通常使用<strong>___</strong>技术，主要测试被测应用的高级互操作性需求，而无需考虑被测试应用的内部结构。</p>\n<p>1b、单元测试的主要测试技术不包括（ ）<br>A、白盒测试          B、压力测试<br>C、静态测试          D、结构化测试</p>\n<p>2、软件生命周期中所花费用最多的阶段是<strong>__</strong></p>\n<p>3、软件确认测试合格通过的准则是<strong><strong><strong><strong>___</strong></strong></strong></strong></p>\n<p>4a、根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为<strong>___</strong></p>\n<p>5、下列关于Alpha测试时的描述中正确的是__<br>A、Alpha测试是集成测试的一种   B、Alpha测试不需要用户代表参加<br>C、Alpha测试不需要测试人员参加  D、Alpha测试需要用户代表参加</p>\n<p>6a、关于软件测试目的的描述，以下哪些是正确的（ ）<br>A、评价软件的质量   B、更正软件的错误<br>C、找出软件中的所有错误    D、证明软件是正确的</p>\n<p>6b、关于软件测试目的的描述，以下哪些是错误的（ ）<br>A、评价软件的质量   B、更正软件的错误<br>C、找出软件中的所有错误    D、证明软件是正确的</p>\n<p>7a、下列方法中，不属于黑盒测试的是（ ）<br>A、基本路径测试法   B、等价类测试法<br>C、边界值分析法    D、基于场景的测试方法</p>\n<p>7b、以下不属于白盒测试的技术的是（ ）<br>A、逻辑覆盖  B、基本路径测试<br>C、循环覆盖测试 D、等价类划分</p>\n<p>8a、使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。<br>A、使用说明书 B、程序的代码及结构<br>C、需求说明书 D、程序的功能</p>\n<p>8b、使用黑盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。<br>A、程序的内部逻辑   B、程序的复杂结构<br>C、程序的源代码    D、程序的功能</p>\n<p>9、测试结束的标准可能包括（ ）<br>A、运行完指定的所有测试用例  B、覆盖率达到给定的标准<br>C、检测到所有的错误  D、时间及其他资源耗尽</p>\n<p>10a、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的条件覆盖率，至少需要设计__个测试用例</p>\n<p>10b、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的判定条件覆盖率，至少需要设计__个测试用例</p>\n<p>10c、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的条件组合覆盖率，至少需要设计__个测试用例</p>\n<h2 id=\"简答题\"><a href=\"#简答题\" class=\"headerlink\" title=\"简答题\"></a>简答题</h2><p>一、在列出等价类表后确定测试用例的具体步骤<br>（1）首先为等价类表中的每一个等价类分别规定一个唯一的编号<br>（2）设计一个新的测试用例，使它能够尽量覆盖尚未覆盖的有效等价类，重复这个步骤，直到所有的有效等价类均被测试用例所覆盖<br>（3）设计一个新的测试用例，使它仅覆盖一个尚未覆盖的无效等价类，重复这一步骤，直到所有的无效等价类均被测试用例所覆盖</p>\n<p>二、为什么使用自适应随机测试<br>自适应随机测试(Adaptive Random Testing,ART)是一种增强的随机测试,比随机测试更有效。自适应随机测试（Adaptive Random Testing）是一种更加平滑的测试用例生成技术。在给定的测试用例集中，随机选取第一个测试用例，并从集合中删除。</p>\n<p>三、自适应随机测试（Adaptive Random Testing）相对于随机测试（Random Testing）具有什么优势？<br>自适应随机测试的检查错误的效率高于随机测试。自适应随机测试吸取随机测试的优点，并在选取测试用例时按照一定的规则，保证测试用例均匀分布在整个解空间中，提升其检测出错误的能力。</p>\n<p>四、为什么使用边界值分析法？<br>无数的测试实践表明，大量的故障往往发生在输入定义域或输出值域的边界上，而不是在其内部，因此，针对各种边界情况设计测试用例，通常会取得很好的测试效果。</p>\n<p>五、怎样用边界值分析法设计测试用例？<br>（1）首先确定边界情况，通常输入或输出等价类的边界就是应该着重测试的边界情况<br>（2）选取正好等于、刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值</p>\n<p>六、白盒测试中什么是判定／条件覆盖？它与判定覆盖和条件覆盖的关系？<br>设计足够多的测试用例，使得程序中每个判定包含的每个条件的所有情况（真／假）至少出现一次，并且每个判定本身的判定结果（真／假）也至少出现一次<br>——满足判定／条件覆盖的测试用例一定同时满足判定覆盖和条件覆盖</p>\n<p>七、采用因果图法设计测试用例的步骤<br>（1）根据程序规格说明书描述，分析并确定因（输入条件）和果（输出结果或程序状态的改变），画出因果图<br>（2）将得到的因果图转换为判定表<br>（3）为判定表中每一列所表示的情况设计一个测试用例</p>\n<p>八、使用因果图法的优点<br>（1）考虑到了输入情况的各种组合以及各个输入情况之间的相互制约关系<br>（2）能够帮助测试人员按照一定的步骤，高效率的开发测试用例<br>（3）因果图法是将自然语言规格说明转化成形式语言规格说明的一种严格的方法，可以指出规格说明存在的不完整性和二义性</p>\n<p>九、构造决策表的五个步骤<br>（1）确定规则的个数（有n个条件的决策表有2n个规则（每个条件取真、假值））<br>（2）列出所有的条件桩和动作桩<br>（3）填入条件项<br>（4）填入动作项，得到初始决策表<br>（5）简化决策表，合并相似规则</p>\n<p>十、 适用于使用决策表设计测试用例的条件：<br>规格说明以决策表形式给出，或较容易转换为决策表<br>条件的排列顺序不会也不应影响执行的操作<br>规则的排列顺序不会也不应影响执行的操作<br>当某一规则的条件已经满足，并确定要执行的操作后，不必检验别的规则<br>如果某一规则的条件要执行多个操作，这些操作的执行顺序无关紧要</p>\n<p>十一、简述负载测试、压力测试、性能测试的联系与区别<br>性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。通过负载测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时系统各指标的变化情况。压力测试是通过确定一个系统的瓶颈或者不能接受的性能点，来获得系统能提供的最大服务级别的测试。</p>\n<p>十二、软件测试的自动化包含哪些内容？为什么要使用自动化测试？<br>标识、设计、建立、执行、比较<br>可以执行一些手工测试困难或者难以完成的测试，例如并发测试；更好的利用资源，可以利用整晚或周末空闲机器时间进行测试；通过较少的可以获得更彻底的测试，以及提高产品的质量</p>\n<p>十三、假设程序中存在一行错误的代码，根据PIE模型，测试用例运行‘失败’需要满足哪些条件，请给出一个简单的例子，测试用例覆盖错误代码，但测试用例运行结果‘通过’。<br>（1）执行／可达性：必须包含程序中包含故障的位置<br>（2）感染：程序的状态必须是不正确的<br>（3）传播：受感染的状态必须传播导致一些输出的程序是不正确的<br>例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CSta</span><span class=\"params\">(<span class=\"keyword\">int</span> []numbers)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> length = numbers.length;</div><div class=\"line\">    <span class=\"keyword\">double</span> mean, sum;</div><div class=\"line\">    sum = <span class=\"number\">0.0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i&lt;length; i++)<span class=\"comment\">//i=0</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        sum += numbers[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    mean = sum / (<span class=\"keyword\">double</span>) length;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"mean: \"</span> + mean);</div><div class=\"line\">&#125;</div><div class=\"line\">Test Input:[<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>] sum=<span class=\"number\">0</span>+<span class=\"number\">4</span>+<span class=\"number\">5</span> sum=<span class=\"number\">4</span>+<span class=\"number\">5</span> mean=<span class=\"number\">3</span> mean=<span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>十四、假设存在两个串行循环，且两者的循环无约束关系，如何进行测试？逻辑覆盖测试（循环测试）<br>（1）如果串行循环的循环体是彼此之间独立的话，可以使用简单循环的测试方法<br>循环变量的初值是否正确<br>循环变量的最大值是否正确<br>何时退出循环，循环变量的增量是否正确<br>（2）两个循环串接起来，则考虑使用嵌套循环：<br>当外循环变量为最小值，内层循环也为最小值时，运算结果<br>当外循环变量为最小值，内层循环也为最大值时，运算结果<br>当外循环变量为最大值，内层循环也为最小值时，运算结果<br>当外循环变量为最大值，内层循环也为最大值时，运算结果<br>循环变量的增量是否正确<br>何时退出内循环<br>何时退出外循环</p>\n<p>十五、为什么需要进行组合测试？<br>输入输出测试、配置测试、兼容性测试等因素间的存在复杂关系，不容易简单测试，而组合测试能够在保证错误检出率的前提下采用较少的测试用例测试系统。</p>\n<p>十六、用等价类划分法设计下面的测试用例<br>输入三个整数a、b、c，分别作为三角形的三条边，现通过程序判断由三条边构成的三角形的类型为等边三角形，等腰三角形，一般三角形（特殊的还有直角三角形），以及构不成三角形<br>    现在要求输入三个整数a，b，c，必须满足以下条件<br>    条件1： 1≤a≤100    条件4： a&lt;b+c<br>    条件2： 1≤b≤100    条件5： b&lt;a+c<br>    条件3： 1≤c≤100    条件6： c&lt;a+b<br>如果输入值a、b、c不满足条件1、条件2和条件3，程序会给出“非法输入”的信息，如果输入值a、b、c满足条件1、条件2和条件3，则输入下列四种情况之一：<br>（1）如果不满足条件4、条件5和条件6中的一个，则程序输出为“非三角形”。<br>（2）如果三条边相等，则程序输出为”等边三角形“。<br>（3）如果恰好有两条边相等，则程序输出为”等腰三角形“。<br>（4）如果三条边都不相等，则程序输出为“一般三角形”。<br>要求：<br>（1）分析程序的规格说明，列出等价类表（有效等价类、无效等价类）；<br>（2）设计若干条测试用用例以覆盖所有等价类。<br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fgjsrgh2pqj30hx0rwaj9.jpg\" alt=\"\"></p>\n<p>十七、c语言中的字符串拷贝函数声明如下：<br><code>extern char *strcpy(char *dest, const char *src)</code><br>头文件： <code>#include &lt;string.h&gt;</code><br>功能： 把从src地址开始且含有NULL结束符的字符串复制到以dest开始的地址空间<br>说明： 指针src和dest所指内存不重叠，dest有足够的空间，返回指向dest的指针<br>请：（1）尝试给出函数的实现；（2）针对该函数的功能编写测试用例；（3）将这些测试用例用gTest（或CppUnit、或JUnit）测试代码的形式给出。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* strcpy(char* Dest, const char* Src)      &#123;       assert((Dest != NULL)&amp;&amp;(Src != NULL));        if(Dest == Src)return Dest;         char* tempStr = Dest;       while((*(Dest++) = *(Src++)) != '/0')             NULL;                                              return tempStr;                          &#125;void main()&#123;   clrscr();Char* strDest,*strSrc,*str;strDest=\"ABCD\";strSrc=\"EFG\";str = strcpy(strDest, strSrc);Printf(\"%s\",str);&#125;输出：EFG</div></pre></td></tr></table></figure>\n<p>未完待续、、、</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"软件测试复习\"><a href=\"#软件测试复习\" class=\"headerlink\" title=\"软件测试复习\"></a>软件测试复习</h1><blockquote>\n<p>软件测试复习题</p>\n</blockquote>","more":"<h1 id=\"软件测试复习-1\"><a href=\"#软件测试复习-1\" class=\"headerlink\" title=\"软件测试复习\"></a>软件测试复习</h1><h2 id=\"判断题\"><a href=\"#判断题\" class=\"headerlink\" title=\"判断题\"></a>判断题</h2><p>1a、软件测试的目的仅仅是尽可能多的找出软件中的缺陷（ ）</p>\n<p>1b、没有检测出错误的测试用例是低质量的测试用例（ ）</p>\n<p>2、自适应随机测试的错误检测效率高于随机测试（ ）</p>\n<p>3a、回归测试是由最终用户来实施的（ ）</p>\n<p>3b、回归测试中，必须运行前次测试中的所有测试用例（ ）</p>\n<p>4、需求规格说明书确定后，软件实现的额外功能越多越好（ ）</p>\n<p>5a、大多数软件缺陷是在程序编码阶段导致的（ ）</p>\n<p>5b、编码开始前的活动不会导致软件缺陷（ ）</p>\n<p>5c、大多数软件缺陷是在需求分析阶段导致的（ ）</p>\n<p>6a、白盒测试中，满足判定覆盖标准的测试用例集，其错误检测能力强于满足条件覆盖标准的测试用例集（ ）</p>\n<p>6b、白盒测试中，满足判定覆盖标准的测试用例集，其对逻辑表达式的覆盖能力强于满足条件覆盖标准的测试用例集（ ）</p>\n<p>7a、自底向上集成需要测试员编写驱动模块（ ）</p>\n<p>7b、自底向上集成需要测试员编写桩模块（ ）</p>\n<p>7c、自顶向下集成需要测试员编写驱动模块（ ）</p>\n<p>7d、自顶向下集成需要测试员编写桩模块（ ）</p>\n<p>8、负载测试是验证要检验的系统的能力最高能达到什么程度（ ）</p>\n<p>9、测试人员要坚持原则，缺陷未修复完坚决不予通过（ ）</p>\n<p>10、发现错误多的模块，残留在模块中的错误也多（ ）</p>\n<p>11a、编码完成之前测试人员不需要提交任何工作（ ）</p>\n<p>11b、编码完成之前测试人员不需要开展任何工作（ ）</p>\n<p>12a、软件测试只能发现错误，但不能保证测试后的软件没有错误（ ）</p>\n<p>12b、测试计划中指定的所有测试用例运行均通过，说明软件没有错误（ ）</p>\n<p>12c、软件项目进入需求分析阶段，测试人员就应该开始介入其中（ ）</p>\n<p>13、在设计测试用例时，应包括合理的输入和不合理的输入（ ）</p>\n<p>14、在进行软件测试时，只要故障代码在执行某条测试用例时被覆盖，则该测试用例的运行结果就一定是失败（ ）</p>\n<p>15a、白盒测试中，可以通过大量设计测试用例的方式，使得这些测试用例的语句覆盖率达到100%（ ）</p>\n<p>15b、白盒测试中，满足条件组合覆盖的测试用例集，一定能保证判定语句取真取假的情况出现至少各一次（ ）</p>\n<p>16、决策表中条件的数量为n，则最终决策表中规则的数量一定是$2^n$（ ）</p>\n<p>17、自适应随机测试的错误检测效率高于随机测试（ ）</p>\n<h2 id=\"选择题\"><a href=\"#选择题\" class=\"headerlink\" title=\"选择题\"></a>选择题</h2><p>1a、系统测试通常使用<strong>___</strong>技术，主要测试被测应用的高级互操作性需求，而无需考虑被测试应用的内部结构。</p>\n<p>1b、单元测试的主要测试技术不包括（ ）<br>A、白盒测试          B、压力测试<br>C、静态测试          D、结构化测试</p>\n<p>2、软件生命周期中所花费用最多的阶段是<strong>__</strong></p>\n<p>3、软件确认测试合格通过的准则是<strong><strong><strong><strong>___</strong></strong></strong></strong></p>\n<p>4a、根据用户在软件使用过程中提出的建设性意见而进行的维护活动称为<strong>___</strong></p>\n<p>5、下列关于Alpha测试时的描述中正确的是__<br>A、Alpha测试是集成测试的一种   B、Alpha测试不需要用户代表参加<br>C、Alpha测试不需要测试人员参加  D、Alpha测试需要用户代表参加</p>\n<p>6a、关于软件测试目的的描述，以下哪些是正确的（ ）<br>A、评价软件的质量   B、更正软件的错误<br>C、找出软件中的所有错误    D、证明软件是正确的</p>\n<p>6b、关于软件测试目的的描述，以下哪些是错误的（ ）<br>A、评价软件的质量   B、更正软件的错误<br>C、找出软件中的所有错误    D、证明软件是正确的</p>\n<p>7a、下列方法中，不属于黑盒测试的是（ ）<br>A、基本路径测试法   B、等价类测试法<br>C、边界值分析法    D、基于场景的测试方法</p>\n<p>7b、以下不属于白盒测试的技术的是（ ）<br>A、逻辑覆盖  B、基本路径测试<br>C、循环覆盖测试 D、等价类划分</p>\n<p>8a、使用白盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。<br>A、使用说明书 B、程序的代码及结构<br>C、需求说明书 D、程序的功能</p>\n<p>8b、使用黑盒测试方法时，确定测试数据应根据（ ）和指定的覆盖标准。<br>A、程序的内部逻辑   B、程序的复杂结构<br>C、程序的源代码    D、程序的功能</p>\n<p>9、测试结束的标准可能包括（ ）<br>A、运行完指定的所有测试用例  B、覆盖率达到给定的标准<br>C、检测到所有的错误  D、时间及其他资源耗尽</p>\n<p>10a、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的条件覆盖率，至少需要设计__个测试用例</p>\n<p>10b、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的判定条件覆盖率，至少需要设计__个测试用例</p>\n<p>10c、如果一个判定中的谓词为（A&gt;1）or（B&lt;=3），则为了达到100%的条件组合覆盖率，至少需要设计__个测试用例</p>\n<h2 id=\"简答题\"><a href=\"#简答题\" class=\"headerlink\" title=\"简答题\"></a>简答题</h2><p>一、在列出等价类表后确定测试用例的具体步骤<br>（1）首先为等价类表中的每一个等价类分别规定一个唯一的编号<br>（2）设计一个新的测试用例，使它能够尽量覆盖尚未覆盖的有效等价类，重复这个步骤，直到所有的有效等价类均被测试用例所覆盖<br>（3）设计一个新的测试用例，使它仅覆盖一个尚未覆盖的无效等价类，重复这一步骤，直到所有的无效等价类均被测试用例所覆盖</p>\n<p>二、为什么使用自适应随机测试<br>自适应随机测试(Adaptive Random Testing,ART)是一种增强的随机测试,比随机测试更有效。自适应随机测试（Adaptive Random Testing）是一种更加平滑的测试用例生成技术。在给定的测试用例集中，随机选取第一个测试用例，并从集合中删除。</p>\n<p>三、自适应随机测试（Adaptive Random Testing）相对于随机测试（Random Testing）具有什么优势？<br>自适应随机测试的检查错误的效率高于随机测试。自适应随机测试吸取随机测试的优点，并在选取测试用例时按照一定的规则，保证测试用例均匀分布在整个解空间中，提升其检测出错误的能力。</p>\n<p>四、为什么使用边界值分析法？<br>无数的测试实践表明，大量的故障往往发生在输入定义域或输出值域的边界上，而不是在其内部，因此，针对各种边界情况设计测试用例，通常会取得很好的测试效果。</p>\n<p>五、怎样用边界值分析法设计测试用例？<br>（1）首先确定边界情况，通常输入或输出等价类的边界就是应该着重测试的边界情况<br>（2）选取正好等于、刚刚大于或刚刚小于边界的值作为测试数据，而不是选取等价类中的典型值或任意值</p>\n<p>六、白盒测试中什么是判定／条件覆盖？它与判定覆盖和条件覆盖的关系？<br>设计足够多的测试用例，使得程序中每个判定包含的每个条件的所有情况（真／假）至少出现一次，并且每个判定本身的判定结果（真／假）也至少出现一次<br>——满足判定／条件覆盖的测试用例一定同时满足判定覆盖和条件覆盖</p>\n<p>七、采用因果图法设计测试用例的步骤<br>（1）根据程序规格说明书描述，分析并确定因（输入条件）和果（输出结果或程序状态的改变），画出因果图<br>（2）将得到的因果图转换为判定表<br>（3）为判定表中每一列所表示的情况设计一个测试用例</p>\n<p>八、使用因果图法的优点<br>（1）考虑到了输入情况的各种组合以及各个输入情况之间的相互制约关系<br>（2）能够帮助测试人员按照一定的步骤，高效率的开发测试用例<br>（3）因果图法是将自然语言规格说明转化成形式语言规格说明的一种严格的方法，可以指出规格说明存在的不完整性和二义性</p>\n<p>九、构造决策表的五个步骤<br>（1）确定规则的个数（有n个条件的决策表有2n个规则（每个条件取真、假值））<br>（2）列出所有的条件桩和动作桩<br>（3）填入条件项<br>（4）填入动作项，得到初始决策表<br>（5）简化决策表，合并相似规则</p>\n<p>十、 适用于使用决策表设计测试用例的条件：<br>规格说明以决策表形式给出，或较容易转换为决策表<br>条件的排列顺序不会也不应影响执行的操作<br>规则的排列顺序不会也不应影响执行的操作<br>当某一规则的条件已经满足，并确定要执行的操作后，不必检验别的规则<br>如果某一规则的条件要执行多个操作，这些操作的执行顺序无关紧要</p>\n<p>十一、简述负载测试、压力测试、性能测试的联系与区别<br>性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。负载测试和压力测试都属于性能测试，两者可以结合进行。通过负载测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时系统各指标的变化情况。压力测试是通过确定一个系统的瓶颈或者不能接受的性能点，来获得系统能提供的最大服务级别的测试。</p>\n<p>十二、软件测试的自动化包含哪些内容？为什么要使用自动化测试？<br>标识、设计、建立、执行、比较<br>可以执行一些手工测试困难或者难以完成的测试，例如并发测试；更好的利用资源，可以利用整晚或周末空闲机器时间进行测试；通过较少的可以获得更彻底的测试，以及提高产品的质量</p>\n<p>十三、假设程序中存在一行错误的代码，根据PIE模型，测试用例运行‘失败’需要满足哪些条件，请给出一个简单的例子，测试用例覆盖错误代码，但测试用例运行结果‘通过’。<br>（1）执行／可达性：必须包含程序中包含故障的位置<br>（2）感染：程序的状态必须是不正确的<br>（3）传播：受感染的状态必须传播导致一些输出的程序是不正确的<br>例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CSta</span><span class=\"params\">(<span class=\"keyword\">int</span> []numbers)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> length = numbers.length;</div><div class=\"line\">    <span class=\"keyword\">double</span> mean, sum;</div><div class=\"line\">    sum = <span class=\"number\">0.0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i&lt;length; i++)<span class=\"comment\">//i=0</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        sum += numbers[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    mean = sum / (<span class=\"keyword\">double</span>) length;</div><div class=\"line\">    System.out.println(<span class=\"string\">\"mean: \"</span> + mean);</div><div class=\"line\">&#125;</div><div class=\"line\">Test Input:[<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>] sum=<span class=\"number\">0</span>+<span class=\"number\">4</span>+<span class=\"number\">5</span> sum=<span class=\"number\">4</span>+<span class=\"number\">5</span> mean=<span class=\"number\">3</span> mean=<span class=\"number\">3</span></div></pre></td></tr></table></figure>\n<p>十四、假设存在两个串行循环，且两者的循环无约束关系，如何进行测试？逻辑覆盖测试（循环测试）<br>（1）如果串行循环的循环体是彼此之间独立的话，可以使用简单循环的测试方法<br>循环变量的初值是否正确<br>循环变量的最大值是否正确<br>何时退出循环，循环变量的增量是否正确<br>（2）两个循环串接起来，则考虑使用嵌套循环：<br>当外循环变量为最小值，内层循环也为最小值时，运算结果<br>当外循环变量为最小值，内层循环也为最大值时，运算结果<br>当外循环变量为最大值，内层循环也为最小值时，运算结果<br>当外循环变量为最大值，内层循环也为最大值时，运算结果<br>循环变量的增量是否正确<br>何时退出内循环<br>何时退出外循环</p>\n<p>十五、为什么需要进行组合测试？<br>输入输出测试、配置测试、兼容性测试等因素间的存在复杂关系，不容易简单测试，而组合测试能够在保证错误检出率的前提下采用较少的测试用例测试系统。</p>\n<p>十六、用等价类划分法设计下面的测试用例<br>输入三个整数a、b、c，分别作为三角形的三条边，现通过程序判断由三条边构成的三角形的类型为等边三角形，等腰三角形，一般三角形（特殊的还有直角三角形），以及构不成三角形<br>    现在要求输入三个整数a，b，c，必须满足以下条件<br>    条件1： 1≤a≤100    条件4： a&lt;b+c<br>    条件2： 1≤b≤100    条件5： b&lt;a+c<br>    条件3： 1≤c≤100    条件6： c&lt;a+b<br>如果输入值a、b、c不满足条件1、条件2和条件3，程序会给出“非法输入”的信息，如果输入值a、b、c满足条件1、条件2和条件3，则输入下列四种情况之一：<br>（1）如果不满足条件4、条件5和条件6中的一个，则程序输出为“非三角形”。<br>（2）如果三条边相等，则程序输出为”等边三角形“。<br>（3）如果恰好有两条边相等，则程序输出为”等腰三角形“。<br>（4）如果三条边都不相等，则程序输出为“一般三角形”。<br>要求：<br>（1）分析程序的规格说明，列出等价类表（有效等价类、无效等价类）；<br>（2）设计若干条测试用用例以覆盖所有等价类。<br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fgjsrgh2pqj30hx0rwaj9.jpg\" alt=\"\"></p>\n<p>十七、c语言中的字符串拷贝函数声明如下：<br><code>extern char *strcpy(char *dest, const char *src)</code><br>头文件： <code>#include &lt;string.h&gt;</code><br>功能： 把从src地址开始且含有NULL结束符的字符串复制到以dest开始的地址空间<br>说明： 指针src和dest所指内存不重叠，dest有足够的空间，返回指向dest的指针<br>请：（1）尝试给出函数的实现；（2）针对该函数的功能编写测试用例；（3）将这些测试用例用gTest（或CppUnit、或JUnit）测试代码的形式给出。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">char* strcpy(char* Dest, const char* Src)      &#123;       assert((Dest != NULL)&amp;&amp;(Src != NULL));        if(Dest == Src)return Dest;         char* tempStr = Dest;       while((*(Dest++) = *(Src++)) != '/0')             NULL;                                              return tempStr;                          &#125;void main()&#123;   clrscr();Char* strDest,*strSrc,*str;strDest=\"ABCD\";strSrc=\"EFG\";str = strcpy(strDest, strSrc);Printf(\"%s\",str);&#125;输出：EFG</div></pre></td></tr></table></figure>\n<p>未完待续、、、</p>"},{"title":"进程与线程的一个简单解释","copyright":true,"date":"2017-06-05T13:36:31.000Z","_content":"\n# 进程与线程的一个简单解释\n\n> [进程](https://zh.wikipedia.org/zh-cn/%E8%BF%9B%E7%A8%8B)（process）和[线程](https://zh.wikipedia.org/zh-cn/%E7%BA%BF%E7%A8%8B)（thread）是操作系统的基本概念，但是它们比较抽象，不容易掌握。\n\n今天看到一篇[文章](http://www.qnx.com/developers/docs/6.4.1/neutrino/getting_started/s1_procs.html)，发现有一个很好的类比，可以把它们解释地清晰易懂。\n\n1.\n\n![img](http://image.beekka.com/blog/201304/bg2013042401.jpg)\n\n计算机的核心是CPU，它承担了所有的计算任务。它就像一座工厂，时刻在运行。\n\n2.\n\n![img](http://image.beekka.com/blog/201304/bg2013042402.png)\n\n假定工厂的电力有限，一次只能供给一个车间使用。也就是说，一个车间开工的时候，其他车间都必须停工。背后的含义就是，单个CPU一次只能运行一个任务。\n\n3.\n\n![img](http://image.beekka.com/blog/201304/bg2013042403.jpg)\n\n进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。\n\n4.\n\n![img](http://image.beekka.com/blog/201304/bg2013042404.jpg)\n\n一个车间里，可以有很多工人。他们协同完成一个任务。\n\n5.\n\n![img](http://image.beekka.com/blog/201304/bg2013042405.jpg)\n\n线程就好比车间里的工人。一个进程可以包括多个线程。\n\n6.\n\n![img](http://image.beekka.com/blog/201304/bg2013042406.png)\n\n车间的空间是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享内存。\n\n7.\n\n![img](http://image.beekka.com/blog/201304/bg2013042407.jpg)\n\n可是，每间房间的大小不同，有些房间最多只能容纳一个人，比如厕所。里面有人的时候，其他人就不能进去了。这代表一个线程使用某些共享内存时，其他线程必须等它结束，才能使用这一块内存。\n\n8.\n\n![img](http://image.beekka.com/blog/201304/bg2013042408.jpg)\n\n一个防止他人进入的简单方法，就是门口加一把锁。先到的人锁上门，后到的人看到上锁，就在门口排队，等锁打开再进去。这就叫[\"互斥锁\"](http://zh.wikipedia.org/wiki/%E4%BA%92%E6%96%A5%E9%94%81)（Mutual exclusion，缩写 Mutex），防止多个线程同时读写某一块内存区域。\n\n9.\n\n![img](http://image.beekka.com/blog/201304/bg2013042409.jpg)\n\n还有些房间，可以同时容纳n个人，比如厨房。也就是说，如果人数大于n，多出来的人只能在外面等着。这好比某些内存区域，只能供给固定数目的线程使用。\n\n10.\n\n![img](http://image.beekka.com/blog/201304/bg2013042410.jpg)\n\n这时的解决方法，就是在门口挂n把钥匙。进去的人就取一把钥匙，出来时再把钥匙挂回原处。后到的人发现钥匙架空了，就知道必须在门口排队等着了。这种做法叫做[\"信号量\"](http://en.wikipedia.org/wiki/Semaphore_(programming))（Semaphore），用来保证多个线程不会互相冲突。\n\n不难看出，mutex是semaphore的一种特殊情况（n=1时）。也就是说，完全可以用后者替代前者。但是，因为mutex较为简单，且效率高，所以在必须保证资源独占的情况下，还是采用这种设计。\n\n11.\n\n![img](http://image.beekka.com/blog/201304/bg2013042411.png)\n\n操作系统的设计，因此可以归结为三点：\n\n（1）以多进程形式，允许多个任务同时运行；\n\n（2）以多线程形式，允许单个任务分成不同的部分运行；\n\n（3）提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。","source":"_posts/进程与线程的一个简单解释.md","raw":"---\ntitle: 进程与线程的一个简单解释\ncopyright: true\ndate: 2017-06-05 21:36:31\ntags: 操作系统\n---\n\n# 进程与线程的一个简单解释\n\n> [进程](https://zh.wikipedia.org/zh-cn/%E8%BF%9B%E7%A8%8B)（process）和[线程](https://zh.wikipedia.org/zh-cn/%E7%BA%BF%E7%A8%8B)（thread）是操作系统的基本概念，但是它们比较抽象，不容易掌握。\n\n今天看到一篇[文章](http://www.qnx.com/developers/docs/6.4.1/neutrino/getting_started/s1_procs.html)，发现有一个很好的类比，可以把它们解释地清晰易懂。\n\n1.\n\n![img](http://image.beekka.com/blog/201304/bg2013042401.jpg)\n\n计算机的核心是CPU，它承担了所有的计算任务。它就像一座工厂，时刻在运行。\n\n2.\n\n![img](http://image.beekka.com/blog/201304/bg2013042402.png)\n\n假定工厂的电力有限，一次只能供给一个车间使用。也就是说，一个车间开工的时候，其他车间都必须停工。背后的含义就是，单个CPU一次只能运行一个任务。\n\n3.\n\n![img](http://image.beekka.com/blog/201304/bg2013042403.jpg)\n\n进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。\n\n4.\n\n![img](http://image.beekka.com/blog/201304/bg2013042404.jpg)\n\n一个车间里，可以有很多工人。他们协同完成一个任务。\n\n5.\n\n![img](http://image.beekka.com/blog/201304/bg2013042405.jpg)\n\n线程就好比车间里的工人。一个进程可以包括多个线程。\n\n6.\n\n![img](http://image.beekka.com/blog/201304/bg2013042406.png)\n\n车间的空间是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享内存。\n\n7.\n\n![img](http://image.beekka.com/blog/201304/bg2013042407.jpg)\n\n可是，每间房间的大小不同，有些房间最多只能容纳一个人，比如厕所。里面有人的时候，其他人就不能进去了。这代表一个线程使用某些共享内存时，其他线程必须等它结束，才能使用这一块内存。\n\n8.\n\n![img](http://image.beekka.com/blog/201304/bg2013042408.jpg)\n\n一个防止他人进入的简单方法，就是门口加一把锁。先到的人锁上门，后到的人看到上锁，就在门口排队，等锁打开再进去。这就叫[\"互斥锁\"](http://zh.wikipedia.org/wiki/%E4%BA%92%E6%96%A5%E9%94%81)（Mutual exclusion，缩写 Mutex），防止多个线程同时读写某一块内存区域。\n\n9.\n\n![img](http://image.beekka.com/blog/201304/bg2013042409.jpg)\n\n还有些房间，可以同时容纳n个人，比如厨房。也就是说，如果人数大于n，多出来的人只能在外面等着。这好比某些内存区域，只能供给固定数目的线程使用。\n\n10.\n\n![img](http://image.beekka.com/blog/201304/bg2013042410.jpg)\n\n这时的解决方法，就是在门口挂n把钥匙。进去的人就取一把钥匙，出来时再把钥匙挂回原处。后到的人发现钥匙架空了，就知道必须在门口排队等着了。这种做法叫做[\"信号量\"](http://en.wikipedia.org/wiki/Semaphore_(programming))（Semaphore），用来保证多个线程不会互相冲突。\n\n不难看出，mutex是semaphore的一种特殊情况（n=1时）。也就是说，完全可以用后者替代前者。但是，因为mutex较为简单，且效率高，所以在必须保证资源独占的情况下，还是采用这种设计。\n\n11.\n\n![img](http://image.beekka.com/blog/201304/bg2013042411.png)\n\n操作系统的设计，因此可以归结为三点：\n\n（1）以多进程形式，允许多个任务同时运行；\n\n（2）以多线程形式，允许单个任务分成不同的部分运行；\n\n（3）提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。","slug":"进程与线程的一个简单解释","published":1,"updated":"2017-10-16T07:16:33.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28o0017q0fapiffhure","content":"<h1 id=\"进程与线程的一个简单解释\"><a href=\"#进程与线程的一个简单解释\" class=\"headerlink\" title=\"进程与线程的一个简单解释\"></a>进程与线程的一个简单解释</h1><blockquote>\n<p><a href=\"https://zh.wikipedia.org/zh-cn/%E8%BF%9B%E7%A8%8B\" target=\"_blank\" rel=\"external\">进程</a>（process）和<a href=\"https://zh.wikipedia.org/zh-cn/%E7%BA%BF%E7%A8%8B\" target=\"_blank\" rel=\"external\">线程</a>（thread）是操作系统的基本概念，但是它们比较抽象，不容易掌握。</p>\n</blockquote>\n<p>今天看到一篇<a href=\"http://www.qnx.com/developers/docs/6.4.1/neutrino/getting_started/s1_procs.html\" target=\"_blank\" rel=\"external\">文章</a>，发现有一个很好的类比，可以把它们解释地清晰易懂。</p>\n<p>1.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042401.jpg\" alt=\"img\"></p>\n<p>计算机的核心是CPU，它承担了所有的计算任务。它就像一座工厂，时刻在运行。</p>\n<p>2.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042402.png\" alt=\"img\"></p>\n<p>假定工厂的电力有限，一次只能供给一个车间使用。也就是说，一个车间开工的时候，其他车间都必须停工。背后的含义就是，单个CPU一次只能运行一个任务。</p>\n<p>3.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042403.jpg\" alt=\"img\"></p>\n<p>进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。</p>\n<p>4.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042404.jpg\" alt=\"img\"></p>\n<p>一个车间里，可以有很多工人。他们协同完成一个任务。</p>\n<p>5.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042405.jpg\" alt=\"img\"></p>\n<p>线程就好比车间里的工人。一个进程可以包括多个线程。</p>\n<p>6.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042406.png\" alt=\"img\"></p>\n<p>车间的空间是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享内存。</p>\n<p>7.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042407.jpg\" alt=\"img\"></p>\n<p>可是，每间房间的大小不同，有些房间最多只能容纳一个人，比如厕所。里面有人的时候，其他人就不能进去了。这代表一个线程使用某些共享内存时，其他线程必须等它结束，才能使用这一块内存。</p>\n<p>8.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042408.jpg\" alt=\"img\"></p>\n<p>一个防止他人进入的简单方法，就是门口加一把锁。先到的人锁上门，后到的人看到上锁，就在门口排队，等锁打开再进去。这就叫<a href=\"http://zh.wikipedia.org/wiki/%E4%BA%92%E6%96%A5%E9%94%81\" target=\"_blank\" rel=\"external\">“互斥锁”</a>（Mutual exclusion，缩写 Mutex），防止多个线程同时读写某一块内存区域。</p>\n<p>9.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042409.jpg\" alt=\"img\"></p>\n<p>还有些房间，可以同时容纳n个人，比如厨房。也就是说，如果人数大于n，多出来的人只能在外面等着。这好比某些内存区域，只能供给固定数目的线程使用。</p>\n<p>10.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042410.jpg\" alt=\"img\"></p>\n<p>这时的解决方法，就是在门口挂n把钥匙。进去的人就取一把钥匙，出来时再把钥匙挂回原处。后到的人发现钥匙架空了，就知道必须在门口排队等着了。这种做法叫做<a href=\"http://en.wikipedia.org/wiki/Semaphore_(programming\" target=\"_blank\" rel=\"external\">“信号量”</a>)（Semaphore），用来保证多个线程不会互相冲突。</p>\n<p>不难看出，mutex是semaphore的一种特殊情况（n=1时）。也就是说，完全可以用后者替代前者。但是，因为mutex较为简单，且效率高，所以在必须保证资源独占的情况下，还是采用这种设计。</p>\n<p>11.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042411.png\" alt=\"img\"></p>\n<p>操作系统的设计，因此可以归结为三点：</p>\n<p>（1）以多进程形式，允许多个任务同时运行；</p>\n<p>（2）以多线程形式，允许单个任务分成不同的部分运行；</p>\n<p>（3）提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"进程与线程的一个简单解释\"><a href=\"#进程与线程的一个简单解释\" class=\"headerlink\" title=\"进程与线程的一个简单解释\"></a>进程与线程的一个简单解释</h1><blockquote>\n<p><a href=\"https://zh.wikipedia.org/zh-cn/%E8%BF%9B%E7%A8%8B\" target=\"_blank\" rel=\"external\">进程</a>（process）和<a href=\"https://zh.wikipedia.org/zh-cn/%E7%BA%BF%E7%A8%8B\" target=\"_blank\" rel=\"external\">线程</a>（thread）是操作系统的基本概念，但是它们比较抽象，不容易掌握。</p>\n</blockquote>\n<p>今天看到一篇<a href=\"http://www.qnx.com/developers/docs/6.4.1/neutrino/getting_started/s1_procs.html\" target=\"_blank\" rel=\"external\">文章</a>，发现有一个很好的类比，可以把它们解释地清晰易懂。</p>\n<p>1.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042401.jpg\" alt=\"img\"></p>\n<p>计算机的核心是CPU，它承担了所有的计算任务。它就像一座工厂，时刻在运行。</p>\n<p>2.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042402.png\" alt=\"img\"></p>\n<p>假定工厂的电力有限，一次只能供给一个车间使用。也就是说，一个车间开工的时候，其他车间都必须停工。背后的含义就是，单个CPU一次只能运行一个任务。</p>\n<p>3.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042403.jpg\" alt=\"img\"></p>\n<p>进程就好比工厂的车间，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。</p>\n<p>4.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042404.jpg\" alt=\"img\"></p>\n<p>一个车间里，可以有很多工人。他们协同完成一个任务。</p>\n<p>5.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042405.jpg\" alt=\"img\"></p>\n<p>线程就好比车间里的工人。一个进程可以包括多个线程。</p>\n<p>6.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042406.png\" alt=\"img\"></p>\n<p>车间的空间是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享内存。</p>\n<p>7.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042407.jpg\" alt=\"img\"></p>\n<p>可是，每间房间的大小不同，有些房间最多只能容纳一个人，比如厕所。里面有人的时候，其他人就不能进去了。这代表一个线程使用某些共享内存时，其他线程必须等它结束，才能使用这一块内存。</p>\n<p>8.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042408.jpg\" alt=\"img\"></p>\n<p>一个防止他人进入的简单方法，就是门口加一把锁。先到的人锁上门，后到的人看到上锁，就在门口排队，等锁打开再进去。这就叫<a href=\"http://zh.wikipedia.org/wiki/%E4%BA%92%E6%96%A5%E9%94%81\" target=\"_blank\" rel=\"external\">“互斥锁”</a>（Mutual exclusion，缩写 Mutex），防止多个线程同时读写某一块内存区域。</p>\n<p>9.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042409.jpg\" alt=\"img\"></p>\n<p>还有些房间，可以同时容纳n个人，比如厨房。也就是说，如果人数大于n，多出来的人只能在外面等着。这好比某些内存区域，只能供给固定数目的线程使用。</p>\n<p>10.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042410.jpg\" alt=\"img\"></p>\n<p>这时的解决方法，就是在门口挂n把钥匙。进去的人就取一把钥匙，出来时再把钥匙挂回原处。后到的人发现钥匙架空了，就知道必须在门口排队等着了。这种做法叫做<a href=\"http://en.wikipedia.org/wiki/Semaphore_(programming\" target=\"_blank\" rel=\"external\">“信号量”</a>)（Semaphore），用来保证多个线程不会互相冲突。</p>\n<p>不难看出，mutex是semaphore的一种特殊情况（n=1时）。也就是说，完全可以用后者替代前者。但是，因为mutex较为简单，且效率高，所以在必须保证资源独占的情况下，还是采用这种设计。</p>\n<p>11.</p>\n<p><img src=\"http://image.beekka.com/blog/201304/bg2013042411.png\" alt=\"img\"></p>\n<p>操作系统的设计，因此可以归结为三点：</p>\n<p>（1）以多进程形式，允许多个任务同时运行；</p>\n<p>（2）以多线程形式，允许单个任务分成不同的部分运行；</p>\n<p>（3）提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。</p>\n"},{"title":"阿里云ECS部署：nginx+MySQL+Laravel+PHP7+Redis+Node.js","date":"2017-05-25T09:59:11.000Z","copyright":true,"top":true,"thumbnail":"http://img.sccnn.com/bimg/338/39305.jpg","_content":"\n版本：ubuntu 14.04（64位）\n\n# 1.安装\nNginx（version：1.9）\n\n## 1、首先添加nginx_signing.key\n\n\n```\nwget http://nginx.org/keys/nginx_signing.key\n\nsudo apt-key add nginx_signing.key\n```\n\n## 2、添加Nginx官方提供的源\n\n\n```\necho \"deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx\">> /etc/apt/sources.list\n\necho \"deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx\">> /etc/apt/sources.list\n```\n\n## 3、更新源并安装Nginx\n\n```\nsudo apt-get update\n\nsudo apt-get install nginx\n```\n\n## 4、Nginx配置\n\n打开配置文件。\n\n```\nvim /etc/nginx/nginx.conf\n```\n\n修改user：\n\n```\nuser  www-data;\n```\n\n增加server：\n\n```\nserver {\n\n    listen 80 default_server;\n\n    listen [::]:80 default_server ipv6only=on;\n\n    root /var/www/laravel/public;\n\n    index index.php index.html index.htm;\n\n    server_name server_domain_or_IP;\n\n    location / {\n\n        try_files $uri $uri/ /index.php?$query_string;\n\n    }\n\n    location ~ \\.php$ {\n\n        try_files $uri /index.php =404;\n\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n\n        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;\n\n        fastcgi_index index.php;\n\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\n        include fastcgi_params;\n\n    }\n\n}\n```\n\n注意：root中的laravel应为你的项目名称，server_name应为你的服务器公网IP。\n\n配置完之后重启Nginx，使上面的配置项生效。\n\n```\nsudo service nginx restart\n```\n\n# 2.安装PHP（version：7.0x）\n\n## 1、添加PPA，添加过程中需要按一次回车（Enter）键\n\n```\nsudo apt-get install python-software-properties software-properties-common\n\nsudo add-apt-repository ppa:ondrej/php\n\nsudo apt-get update\n```\n\n## 2、安装PHP7以及所需的一些扩展\n\n```\nsudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-curl php7.0-cli php7.0-mcrypt php7.0-mbstring php7.0-dom php7.0-gd\n```\n\n## 3、配置PHP7\n\n打开php.ini配置文件:\n\n```\nsudo vim /etc/php/7.0/fpm/php.ini\n```\n\n找到cgi.fix_pathinfo选项，去掉注释;，然后将值设置为0  **（这个操作是为了避免PHP7的一个漏洞，PS：vim使用“/”进入查找模式）**\n\n```\ncgi.fix_pathinfo=0\n```\n\n启用php7.0-mcrypt\n\n```\nsudo phpenmod mcrypt\n```\n\n重启php7.0-fpm\n\n```\nsudo service php7.0-fpm restart\n```\n\n# 3.安装Mysql（version：5.6）\n\n```\nsudo apt-get install mysql-server-5.6 mysql-client-5.6\n```\n\n途中会提示设置MySQL的密码，安装好后：\n\n```\nmysql -uroot -p\n```\n\n然后输入刚刚设置的密码，能成功进入即成功安装。\n\n# 4.安装Laravel（version：latest）\n\n## 1、安装composer，分别执行以下语句\n\n```\nsudo apt-get install curl\n\ncd ~\n\ncurl -sS https://getcomposer.org/installer| php\n\nsudo mv composer.phar /usr/local/bin/composer\n```\n\n## 2、安装压缩、解压缩程序\n\n```\nsudo apt-get install zip unzip\n```\n\n## 3、安装git\n\n```\nsudo apt-get install git\n```\n\n然后在Coding上创建一个私有项目laravel，里面包含所有该Laravel项目所需代码。\n\n## 4、使用git将代码clone到服务器上\n\n```\ncd /var\n\nmkdir www\n\ncd www\n\ngit clone your-project-git-link\n```\n\n注意：git clone 的地址应是你自己Coding仓库中的项目SSL链接地址\n\n## 5、修改laravel项目的访问权限\n\n```\nsudo chown -R :www-data /var/www/laravel\n\nsudo chmod -R 775 /var/www/laravel/storage\n```\n\n## 6、导入laravel 的vendor目录\n\n```\ncd /var/www/laravel\n\ncomposer install\n```\n\n注意：5，6两部操作中的“laravel” 应该是你自己项目的的名称。\n\n# 5.安装Redis（version：3.0.7）\n\n最新版地址：http://redis.io/download\n\n```\ncd ~\n\nwget http://download.redis.io/releases/redis-3.0.7.tar.gz\n\ntar xzf redis-3.0.7.tar.gz\n```\n\n配置并启动Redis\n\n```\ncd redis-3.0.7\n\nvi redis.conf\n```\n\n搜索bind，将# bind 127.0.0.1的注释去掉后保存（这样做后只有本地服务可以访问Redis，不然就有安全隐患）\n\n```\nmake\n\nsrc/redis-server\n```\n\n看到redis的运行提示即完成。\n\n# 6.安装nodeJS\n\n添加下面链接中的源，然后安装\n\n```\nhttps://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n```\n\n\n# 番外：安装ZSH shell\n\n```\ngithub：sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\nsudo apt-get install zsh\n\nchsh -s $(which zsh)\n\nsh -c\"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n### 如果已经下了5.0想升级成7.0的朋友可执行以下代码\n\n    sudo apt-get install python-software-properties software-properties-common \n    sudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php \n    sudo apt-get update\n\n#### 把之前的PHP5.0remove掉\n\n    sudo apt-get remove php5-common -y\n    sudo apt-get purge php5-common -y\n\n#### 安装现在的7.0\n\n    sudo apt-get install php7.0 php7.0-fpm php7.0-mysql -y\n    sudo apt-get --purge autoremove -y\n","source":"_posts/阿里云-ECS-部署：nginx-MySQL-Laravel-PHP7-Redis-Node-js.md","raw":"---\ntitle: 阿里云ECS部署：nginx+MySQL+Laravel+PHP7+Redis+Node.js\ndate: 2017-05-25 17:59:11\ntags: 阿里云ECS\ncopyright: true\ntop: true\nthumbnail: http://img.sccnn.com/bimg/338/39305.jpg\n---\n\n版本：ubuntu 14.04（64位）\n\n# 1.安装\nNginx（version：1.9）\n\n## 1、首先添加nginx_signing.key\n\n\n```\nwget http://nginx.org/keys/nginx_signing.key\n\nsudo apt-key add nginx_signing.key\n```\n\n## 2、添加Nginx官方提供的源\n\n\n```\necho \"deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx\">> /etc/apt/sources.list\n\necho \"deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx\">> /etc/apt/sources.list\n```\n\n## 3、更新源并安装Nginx\n\n```\nsudo apt-get update\n\nsudo apt-get install nginx\n```\n\n## 4、Nginx配置\n\n打开配置文件。\n\n```\nvim /etc/nginx/nginx.conf\n```\n\n修改user：\n\n```\nuser  www-data;\n```\n\n增加server：\n\n```\nserver {\n\n    listen 80 default_server;\n\n    listen [::]:80 default_server ipv6only=on;\n\n    root /var/www/laravel/public;\n\n    index index.php index.html index.htm;\n\n    server_name server_domain_or_IP;\n\n    location / {\n\n        try_files $uri $uri/ /index.php?$query_string;\n\n    }\n\n    location ~ \\.php$ {\n\n        try_files $uri /index.php =404;\n\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n\n        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;\n\n        fastcgi_index index.php;\n\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\n        include fastcgi_params;\n\n    }\n\n}\n```\n\n注意：root中的laravel应为你的项目名称，server_name应为你的服务器公网IP。\n\n配置完之后重启Nginx，使上面的配置项生效。\n\n```\nsudo service nginx restart\n```\n\n# 2.安装PHP（version：7.0x）\n\n## 1、添加PPA，添加过程中需要按一次回车（Enter）键\n\n```\nsudo apt-get install python-software-properties software-properties-common\n\nsudo add-apt-repository ppa:ondrej/php\n\nsudo apt-get update\n```\n\n## 2、安装PHP7以及所需的一些扩展\n\n```\nsudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-curl php7.0-cli php7.0-mcrypt php7.0-mbstring php7.0-dom php7.0-gd\n```\n\n## 3、配置PHP7\n\n打开php.ini配置文件:\n\n```\nsudo vim /etc/php/7.0/fpm/php.ini\n```\n\n找到cgi.fix_pathinfo选项，去掉注释;，然后将值设置为0  **（这个操作是为了避免PHP7的一个漏洞，PS：vim使用“/”进入查找模式）**\n\n```\ncgi.fix_pathinfo=0\n```\n\n启用php7.0-mcrypt\n\n```\nsudo phpenmod mcrypt\n```\n\n重启php7.0-fpm\n\n```\nsudo service php7.0-fpm restart\n```\n\n# 3.安装Mysql（version：5.6）\n\n```\nsudo apt-get install mysql-server-5.6 mysql-client-5.6\n```\n\n途中会提示设置MySQL的密码，安装好后：\n\n```\nmysql -uroot -p\n```\n\n然后输入刚刚设置的密码，能成功进入即成功安装。\n\n# 4.安装Laravel（version：latest）\n\n## 1、安装composer，分别执行以下语句\n\n```\nsudo apt-get install curl\n\ncd ~\n\ncurl -sS https://getcomposer.org/installer| php\n\nsudo mv composer.phar /usr/local/bin/composer\n```\n\n## 2、安装压缩、解压缩程序\n\n```\nsudo apt-get install zip unzip\n```\n\n## 3、安装git\n\n```\nsudo apt-get install git\n```\n\n然后在Coding上创建一个私有项目laravel，里面包含所有该Laravel项目所需代码。\n\n## 4、使用git将代码clone到服务器上\n\n```\ncd /var\n\nmkdir www\n\ncd www\n\ngit clone your-project-git-link\n```\n\n注意：git clone 的地址应是你自己Coding仓库中的项目SSL链接地址\n\n## 5、修改laravel项目的访问权限\n\n```\nsudo chown -R :www-data /var/www/laravel\n\nsudo chmod -R 775 /var/www/laravel/storage\n```\n\n## 6、导入laravel 的vendor目录\n\n```\ncd /var/www/laravel\n\ncomposer install\n```\n\n注意：5，6两部操作中的“laravel” 应该是你自己项目的的名称。\n\n# 5.安装Redis（version：3.0.7）\n\n最新版地址：http://redis.io/download\n\n```\ncd ~\n\nwget http://download.redis.io/releases/redis-3.0.7.tar.gz\n\ntar xzf redis-3.0.7.tar.gz\n```\n\n配置并启动Redis\n\n```\ncd redis-3.0.7\n\nvi redis.conf\n```\n\n搜索bind，将# bind 127.0.0.1的注释去掉后保存（这样做后只有本地服务可以访问Redis，不然就有安全隐患）\n\n```\nmake\n\nsrc/redis-server\n```\n\n看到redis的运行提示即完成。\n\n# 6.安装nodeJS\n\n添加下面链接中的源，然后安装\n\n```\nhttps://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\n```\n\n\n# 番外：安装ZSH shell\n\n```\ngithub：sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\nsudo apt-get install zsh\n\nchsh -s $(which zsh)\n\nsh -c\"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n### 如果已经下了5.0想升级成7.0的朋友可执行以下代码\n\n    sudo apt-get install python-software-properties software-properties-common \n    sudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php \n    sudo apt-get update\n\n#### 把之前的PHP5.0remove掉\n\n    sudo apt-get remove php5-common -y\n    sudo apt-get purge php5-common -y\n\n#### 安装现在的7.0\n\n    sudo apt-get install php7.0 php7.0-fpm php7.0-mysql -y\n    sudo apt-get --purge autoremove -y\n","slug":"阿里云-ECS-部署：nginx-MySQL-Laravel-PHP7-Redis-Node-js","published":1,"updated":"2017-10-16T07:16:33.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28p0019q0faf2tx5bz3","content":"<p>版本：ubuntu 14.04（64位）</p>\n<h1 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h1><p>Nginx（version：1.9）</p>\n<h2 id=\"1、首先添加nginx-signing-key\"><a href=\"#1、首先添加nginx-signing-key\" class=\"headerlink\" title=\"1、首先添加nginx_signing.key\"></a>1、首先添加nginx_signing.key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/keys/nginx_signing.key</div><div class=\"line\"></div><div class=\"line\">sudo apt-key add nginx_signing.key</div></pre></td></tr></table></figure>\n<h2 id=\"2、添加Nginx官方提供的源\"><a href=\"#2、添加Nginx官方提供的源\" class=\"headerlink\" title=\"2、添加Nginx官方提供的源\"></a>2、添加Nginx官方提供的源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx&quot;&gt;&gt; /etc/apt/sources.list</div><div class=\"line\"></div><div class=\"line\">echo &quot;deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx&quot;&gt;&gt; /etc/apt/sources.list</div></pre></td></tr></table></figure>\n<h2 id=\"3、更新源并安装Nginx\"><a href=\"#3、更新源并安装Nginx\" class=\"headerlink\" title=\"3、更新源并安装Nginx\"></a>3、更新源并安装Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<h2 id=\"4、Nginx配置\"><a href=\"#4、Nginx配置\" class=\"headerlink\" title=\"4、Nginx配置\"></a>4、Nginx配置</h2><p>打开配置文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>\n<p>修改user：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">user  www-data;</div></pre></td></tr></table></figure>\n<p>增加server：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">    listen 80 default_server;</div><div class=\"line\"></div><div class=\"line\">    listen [::]:80 default_server ipv6only=on;</div><div class=\"line\"></div><div class=\"line\">    root /var/www/laravel/public;</div><div class=\"line\"></div><div class=\"line\">    index index.php index.html index.htm;</div><div class=\"line\"></div><div class=\"line\">    server_name server_domain_or_IP;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\"></div><div class=\"line\">        try_files $uri $uri/ /index.php?$query_string;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ \\.php$ &#123;</div><div class=\"line\"></div><div class=\"line\">        try_files $uri /index.php =404;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_split_path_info ^(.+\\.php)(/.+)$;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_index index.php;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</div><div class=\"line\"></div><div class=\"line\">        include fastcgi_params;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意：root中的laravel应为你的项目名称，server_name应为你的服务器公网IP。</p>\n<p>配置完之后重启Nginx，使上面的配置项生效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service nginx restart</div></pre></td></tr></table></figure>\n<h1 id=\"2-安装PHP（version：7-0x）\"><a href=\"#2-安装PHP（version：7-0x）\" class=\"headerlink\" title=\"2.安装PHP（version：7.0x）\"></a>2.安装PHP（version：7.0x）</h1><h2 id=\"1、添加PPA，添加过程中需要按一次回车（Enter）键\"><a href=\"#1、添加PPA，添加过程中需要按一次回车（Enter）键\" class=\"headerlink\" title=\"1、添加PPA，添加过程中需要按一次回车（Enter）键\"></a>1、添加PPA，添加过程中需要按一次回车（Enter）键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-software-properties software-properties-common</div><div class=\"line\"></div><div class=\"line\">sudo add-apt-repository ppa:ondrej/php</div><div class=\"line\"></div><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h2 id=\"2、安装PHP7以及所需的一些扩展\"><a href=\"#2、安装PHP7以及所需的一些扩展\" class=\"headerlink\" title=\"2、安装PHP7以及所需的一些扩展\"></a>2、安装PHP7以及所需的一些扩展</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-curl php7.0-cli php7.0-mcrypt php7.0-mbstring php7.0-dom php7.0-gd</div></pre></td></tr></table></figure>\n<h2 id=\"3、配置PHP7\"><a href=\"#3、配置PHP7\" class=\"headerlink\" title=\"3、配置PHP7\"></a>3、配置PHP7</h2><p>打开php.ini配置文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/php/7.0/fpm/php.ini</div></pre></td></tr></table></figure>\n<p>找到cgi.fix_pathinfo选项，去掉注释;，然后将值设置为0  <strong>（这个操作是为了避免PHP7的一个漏洞，PS：vim使用“/”进入查找模式）</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cgi.fix_pathinfo=0</div></pre></td></tr></table></figure>\n<p>启用php7.0-mcrypt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo phpenmod mcrypt</div></pre></td></tr></table></figure>\n<p>重启php7.0-fpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service php7.0-fpm restart</div></pre></td></tr></table></figure>\n<h1 id=\"3-安装Mysql（version：5-6）\"><a href=\"#3-安装Mysql（version：5-6）\" class=\"headerlink\" title=\"3.安装Mysql（version：5.6）\"></a>3.安装Mysql（version：5.6）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mysql-server-5.6 mysql-client-5.6</div></pre></td></tr></table></figure>\n<p>途中会提示设置MySQL的密码，安装好后：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p</div></pre></td></tr></table></figure>\n<p>然后输入刚刚设置的密码，能成功进入即成功安装。</p>\n<h1 id=\"4-安装Laravel（version：latest）\"><a href=\"#4-安装Laravel（version：latest）\" class=\"headerlink\" title=\"4.安装Laravel（version：latest）\"></a>4.安装Laravel（version：latest）</h1><h2 id=\"1、安装composer，分别执行以下语句\"><a href=\"#1、安装composer，分别执行以下语句\" class=\"headerlink\" title=\"1、安装composer，分别执行以下语句\"></a>1、安装composer，分别执行以下语句</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install curl</div><div class=\"line\"></div><div class=\"line\">cd ~</div><div class=\"line\"></div><div class=\"line\">curl -sS https://getcomposer.org/installer| php</div><div class=\"line\"></div><div class=\"line\">sudo mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<h2 id=\"2、安装压缩、解压缩程序\"><a href=\"#2、安装压缩、解压缩程序\" class=\"headerlink\" title=\"2、安装压缩、解压缩程序\"></a>2、安装压缩、解压缩程序</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install zip unzip</div></pre></td></tr></table></figure>\n<h2 id=\"3、安装git\"><a href=\"#3、安装git\" class=\"headerlink\" title=\"3、安装git\"></a>3、安装git</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>然后在Coding上创建一个私有项目laravel，里面包含所有该Laravel项目所需代码。</p>\n<h2 id=\"4、使用git将代码clone到服务器上\"><a href=\"#4、使用git将代码clone到服务器上\" class=\"headerlink\" title=\"4、使用git将代码clone到服务器上\"></a>4、使用git将代码clone到服务器上</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var</div><div class=\"line\"></div><div class=\"line\">mkdir www</div><div class=\"line\"></div><div class=\"line\">cd www</div><div class=\"line\"></div><div class=\"line\">git clone your-project-git-link</div></pre></td></tr></table></figure>\n<p>注意：git clone 的地址应是你自己Coding仓库中的项目SSL链接地址</p>\n<h2 id=\"5、修改laravel项目的访问权限\"><a href=\"#5、修改laravel项目的访问权限\" class=\"headerlink\" title=\"5、修改laravel项目的访问权限\"></a>5、修改laravel项目的访问权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R :www-data /var/www/laravel</div><div class=\"line\"></div><div class=\"line\">sudo chmod -R 775 /var/www/laravel/storage</div></pre></td></tr></table></figure>\n<h2 id=\"6、导入laravel-的vendor目录\"><a href=\"#6、导入laravel-的vendor目录\" class=\"headerlink\" title=\"6、导入laravel 的vendor目录\"></a>6、导入laravel 的vendor目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var/www/laravel</div><div class=\"line\"></div><div class=\"line\">composer install</div></pre></td></tr></table></figure>\n<p>注意：5，6两部操作中的“laravel” 应该是你自己项目的的名称。</p>\n<h1 id=\"5-安装Redis（version：3-0-7）\"><a href=\"#5-安装Redis（version：3-0-7）\" class=\"headerlink\" title=\"5.安装Redis（version：3.0.7）\"></a>5.安装Redis（version：3.0.7）</h1><p>最新版地址：<a href=\"http://redis.io/download\" target=\"_blank\" rel=\"external\">http://redis.io/download</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\"></div><div class=\"line\">wget http://download.redis.io/releases/redis-3.0.7.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzf redis-3.0.7.tar.gz</div></pre></td></tr></table></figure>\n<p>配置并启动Redis</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd redis-3.0.7</div><div class=\"line\"></div><div class=\"line\">vi redis.conf</div></pre></td></tr></table></figure>\n<p>搜索bind，将# bind 127.0.0.1的注释去掉后保存（这样做后只有本地服务可以访问Redis，不然就有安全隐患）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div><div class=\"line\"></div><div class=\"line\">src/redis-server</div></pre></td></tr></table></figure>\n<p>看到redis的运行提示即完成。</p>\n<h1 id=\"6-安装nodeJS\"><a href=\"#6-安装nodeJS\" class=\"headerlink\" title=\"6.安装nodeJS\"></a>6.安装nodeJS</h1><p>添加下面链接中的源，然后安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions</div></pre></td></tr></table></figure>\n<h1 id=\"番外：安装ZSH-shell\"><a href=\"#番外：安装ZSH-shell\" class=\"headerlink\" title=\"番外：安装ZSH shell\"></a>番外：安装ZSH shell</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">github：sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install zsh</div><div class=\"line\"></div><div class=\"line\">chsh -s $(which zsh)</div><div class=\"line\"></div><div class=\"line\">sh -c&quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<h3 id=\"如果已经下了5-0想升级成7-0的朋友可执行以下代码\"><a href=\"#如果已经下了5-0想升级成7-0的朋友可执行以下代码\" class=\"headerlink\" title=\"如果已经下了5.0想升级成7.0的朋友可执行以下代码\"></a>如果已经下了5.0想升级成7.0的朋友可执行以下代码</h3><pre><code>sudo apt-get install python-software-properties software-properties-common \nsudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php \nsudo apt-get update\n</code></pre><h4 id=\"把之前的PHP5-0remove掉\"><a href=\"#把之前的PHP5-0remove掉\" class=\"headerlink\" title=\"把之前的PHP5.0remove掉\"></a>把之前的PHP5.0remove掉</h4><pre><code>sudo apt-get remove php5-common -y\nsudo apt-get purge php5-common -y\n</code></pre><h4 id=\"安装现在的7-0\"><a href=\"#安装现在的7-0\" class=\"headerlink\" title=\"安装现在的7.0\"></a>安装现在的7.0</h4><pre><code>sudo apt-get install php7.0 php7.0-fpm php7.0-mysql -y\nsudo apt-get --purge autoremove -y\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>版本：ubuntu 14.04（64位）</p>\n<h1 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1.安装\"></a>1.安装</h1><p>Nginx（version：1.9）</p>\n<h2 id=\"1、首先添加nginx-signing-key\"><a href=\"#1、首先添加nginx-signing-key\" class=\"headerlink\" title=\"1、首先添加nginx_signing.key\"></a>1、首先添加nginx_signing.key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/keys/nginx_signing.key</div><div class=\"line\"></div><div class=\"line\">sudo apt-key add nginx_signing.key</div></pre></td></tr></table></figure>\n<h2 id=\"2、添加Nginx官方提供的源\"><a href=\"#2、添加Nginx官方提供的源\" class=\"headerlink\" title=\"2、添加Nginx官方提供的源\"></a>2、添加Nginx官方提供的源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx&quot;&gt;&gt; /etc/apt/sources.list</div><div class=\"line\"></div><div class=\"line\">echo &quot;deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx&quot;&gt;&gt; /etc/apt/sources.list</div></pre></td></tr></table></figure>\n<h2 id=\"3、更新源并安装Nginx\"><a href=\"#3、更新源并安装Nginx\" class=\"headerlink\" title=\"3、更新源并安装Nginx\"></a>3、更新源并安装Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<h2 id=\"4、Nginx配置\"><a href=\"#4、Nginx配置\" class=\"headerlink\" title=\"4、Nginx配置\"></a>4、Nginx配置</h2><p>打开配置文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>\n<p>修改user：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">user  www-data;</div></pre></td></tr></table></figure>\n<p>增加server：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">    listen 80 default_server;</div><div class=\"line\"></div><div class=\"line\">    listen [::]:80 default_server ipv6only=on;</div><div class=\"line\"></div><div class=\"line\">    root /var/www/laravel/public;</div><div class=\"line\"></div><div class=\"line\">    index index.php index.html index.htm;</div><div class=\"line\"></div><div class=\"line\">    server_name server_domain_or_IP;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\"></div><div class=\"line\">        try_files $uri $uri/ /index.php?$query_string;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ \\.php$ &#123;</div><div class=\"line\"></div><div class=\"line\">        try_files $uri /index.php =404;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_split_path_info ^(.+\\.php)(/.+)$;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_index index.php;</div><div class=\"line\"></div><div class=\"line\">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</div><div class=\"line\"></div><div class=\"line\">        include fastcgi_params;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意：root中的laravel应为你的项目名称，server_name应为你的服务器公网IP。</p>\n<p>配置完之后重启Nginx，使上面的配置项生效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service nginx restart</div></pre></td></tr></table></figure>\n<h1 id=\"2-安装PHP（version：7-0x）\"><a href=\"#2-安装PHP（version：7-0x）\" class=\"headerlink\" title=\"2.安装PHP（version：7.0x）\"></a>2.安装PHP（version：7.0x）</h1><h2 id=\"1、添加PPA，添加过程中需要按一次回车（Enter）键\"><a href=\"#1、添加PPA，添加过程中需要按一次回车（Enter）键\" class=\"headerlink\" title=\"1、添加PPA，添加过程中需要按一次回车（Enter）键\"></a>1、添加PPA，添加过程中需要按一次回车（Enter）键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-software-properties software-properties-common</div><div class=\"line\"></div><div class=\"line\">sudo add-apt-repository ppa:ondrej/php</div><div class=\"line\"></div><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<h2 id=\"2、安装PHP7以及所需的一些扩展\"><a href=\"#2、安装PHP7以及所需的一些扩展\" class=\"headerlink\" title=\"2、安装PHP7以及所需的一些扩展\"></a>2、安装PHP7以及所需的一些扩展</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install php7.0-fpm php7.0-mysql php7.0-common php7.0-curl php7.0-cli php7.0-mcrypt php7.0-mbstring php7.0-dom php7.0-gd</div></pre></td></tr></table></figure>\n<h2 id=\"3、配置PHP7\"><a href=\"#3、配置PHP7\" class=\"headerlink\" title=\"3、配置PHP7\"></a>3、配置PHP7</h2><p>打开php.ini配置文件:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/php/7.0/fpm/php.ini</div></pre></td></tr></table></figure>\n<p>找到cgi.fix_pathinfo选项，去掉注释;，然后将值设置为0  <strong>（这个操作是为了避免PHP7的一个漏洞，PS：vim使用“/”进入查找模式）</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cgi.fix_pathinfo=0</div></pre></td></tr></table></figure>\n<p>启用php7.0-mcrypt</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo phpenmod mcrypt</div></pre></td></tr></table></figure>\n<p>重启php7.0-fpm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service php7.0-fpm restart</div></pre></td></tr></table></figure>\n<h1 id=\"3-安装Mysql（version：5-6）\"><a href=\"#3-安装Mysql（version：5-6）\" class=\"headerlink\" title=\"3.安装Mysql（version：5.6）\"></a>3.安装Mysql（version：5.6）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mysql-server-5.6 mysql-client-5.6</div></pre></td></tr></table></figure>\n<p>途中会提示设置MySQL的密码，安装好后：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -uroot -p</div></pre></td></tr></table></figure>\n<p>然后输入刚刚设置的密码，能成功进入即成功安装。</p>\n<h1 id=\"4-安装Laravel（version：latest）\"><a href=\"#4-安装Laravel（version：latest）\" class=\"headerlink\" title=\"4.安装Laravel（version：latest）\"></a>4.安装Laravel（version：latest）</h1><h2 id=\"1、安装composer，分别执行以下语句\"><a href=\"#1、安装composer，分别执行以下语句\" class=\"headerlink\" title=\"1、安装composer，分别执行以下语句\"></a>1、安装composer，分别执行以下语句</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install curl</div><div class=\"line\"></div><div class=\"line\">cd ~</div><div class=\"line\"></div><div class=\"line\">curl -sS https://getcomposer.org/installer| php</div><div class=\"line\"></div><div class=\"line\">sudo mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<h2 id=\"2、安装压缩、解压缩程序\"><a href=\"#2、安装压缩、解压缩程序\" class=\"headerlink\" title=\"2、安装压缩、解压缩程序\"></a>2、安装压缩、解压缩程序</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install zip unzip</div></pre></td></tr></table></figure>\n<h2 id=\"3、安装git\"><a href=\"#3、安装git\" class=\"headerlink\" title=\"3、安装git\"></a>3、安装git</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<p>然后在Coding上创建一个私有项目laravel，里面包含所有该Laravel项目所需代码。</p>\n<h2 id=\"4、使用git将代码clone到服务器上\"><a href=\"#4、使用git将代码clone到服务器上\" class=\"headerlink\" title=\"4、使用git将代码clone到服务器上\"></a>4、使用git将代码clone到服务器上</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var</div><div class=\"line\"></div><div class=\"line\">mkdir www</div><div class=\"line\"></div><div class=\"line\">cd www</div><div class=\"line\"></div><div class=\"line\">git clone your-project-git-link</div></pre></td></tr></table></figure>\n<p>注意：git clone 的地址应是你自己Coding仓库中的项目SSL链接地址</p>\n<h2 id=\"5、修改laravel项目的访问权限\"><a href=\"#5、修改laravel项目的访问权限\" class=\"headerlink\" title=\"5、修改laravel项目的访问权限\"></a>5、修改laravel项目的访问权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R :www-data /var/www/laravel</div><div class=\"line\"></div><div class=\"line\">sudo chmod -R 775 /var/www/laravel/storage</div></pre></td></tr></table></figure>\n<h2 id=\"6、导入laravel-的vendor目录\"><a href=\"#6、导入laravel-的vendor目录\" class=\"headerlink\" title=\"6、导入laravel 的vendor目录\"></a>6、导入laravel 的vendor目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var/www/laravel</div><div class=\"line\"></div><div class=\"line\">composer install</div></pre></td></tr></table></figure>\n<p>注意：5，6两部操作中的“laravel” 应该是你自己项目的的名称。</p>\n<h1 id=\"5-安装Redis（version：3-0-7）\"><a href=\"#5-安装Redis（version：3-0-7）\" class=\"headerlink\" title=\"5.安装Redis（version：3.0.7）\"></a>5.安装Redis（version：3.0.7）</h1><p>最新版地址：<a href=\"http://redis.io/download\" target=\"_blank\" rel=\"external\">http://redis.io/download</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\"></div><div class=\"line\">wget http://download.redis.io/releases/redis-3.0.7.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar xzf redis-3.0.7.tar.gz</div></pre></td></tr></table></figure>\n<p>配置并启动Redis</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd redis-3.0.7</div><div class=\"line\"></div><div class=\"line\">vi redis.conf</div></pre></td></tr></table></figure>\n<p>搜索bind，将# bind 127.0.0.1的注释去掉后保存（这样做后只有本地服务可以访问Redis，不然就有安全隐患）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">make</div><div class=\"line\"></div><div class=\"line\">src/redis-server</div></pre></td></tr></table></figure>\n<p>看到redis的运行提示即完成。</p>\n<h1 id=\"6-安装nodeJS\"><a href=\"#6-安装nodeJS\" class=\"headerlink\" title=\"6.安装nodeJS\"></a>6.安装nodeJS</h1><p>添加下面链接中的源，然后安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions</div></pre></td></tr></table></figure>\n<h1 id=\"番外：安装ZSH-shell\"><a href=\"#番外：安装ZSH-shell\" class=\"headerlink\" title=\"番外：安装ZSH shell\"></a>番外：安装ZSH shell</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">github：sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install zsh</div><div class=\"line\"></div><div class=\"line\">chsh -s $(which zsh)</div><div class=\"line\"></div><div class=\"line\">sh -c&quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<h3 id=\"如果已经下了5-0想升级成7-0的朋友可执行以下代码\"><a href=\"#如果已经下了5-0想升级成7-0的朋友可执行以下代码\" class=\"headerlink\" title=\"如果已经下了5.0想升级成7.0的朋友可执行以下代码\"></a>如果已经下了5.0想升级成7.0的朋友可执行以下代码</h3><pre><code>sudo apt-get install python-software-properties software-properties-common \nsudo LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php \nsudo apt-get update\n</code></pre><h4 id=\"把之前的PHP5-0remove掉\"><a href=\"#把之前的PHP5-0remove掉\" class=\"headerlink\" title=\"把之前的PHP5.0remove掉\"></a>把之前的PHP5.0remove掉</h4><pre><code>sudo apt-get remove php5-common -y\nsudo apt-get purge php5-common -y\n</code></pre><h4 id=\"安装现在的7-0\"><a href=\"#安装现在的7-0\" class=\"headerlink\" title=\"安装现在的7.0\"></a>安装现在的7.0</h4><pre><code>sudo apt-get install php7.0 php7.0-fpm php7.0-mysql -y\nsudo apt-get --purge autoremove -y\n</code></pre>"},{"title":"阿里云vps搭建自己的hexo博客","copyright":true,"date":"2017-06-16T11:44:20.000Z","top":true,"thumbnail":"http://img.sccnn.com/bimg/338/39306.jpg","_content":"\n\n\n> 阿里云vps搭建自己的hexo博客\n\n<!--more-->\n\n## 1. 博客的架构\n\n先搞明白Hexo博客从搭建到自动发布的架构，才能更好的理解我们每一步进行的操作。不然只跟着步骤过了一遍，却不知道为什么这么做。\n\n首先看这张架构图：\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fgnaetp3qfj30m80dct9o.jpg)\n\n整个流程就是本地将 `*.md` 渲染成静态文件，然后Git推送到服务器的`repository`,服务器再通过 `git-hooks` 同步网站根目录。\n\n## 2. 整个搭建流程\n\n**第一部分**: 服务器环境搭建，包括安装 `Git` 、`Nginx`配置 、创建 `git` 用户 。\n\n**第二部分**: 本地`Hexo`初始化， 包括安装 `NodeJS` 、`hexo-cli`, 生成本地静态网站\n\n**第三部分**: 使用Git自动化部署发布博客\n\n## 3. 服务器环境搭建\n\n#### 3-1.安装Git和NodeJS (CentOS 环境)\n\n```\nyum install git\n#安装NodeJS\ncurl --silent --location https://rpm.nodesource.com/setup_5.x | bash -\n```\n\nNodeJS 安装可以参考： [Linux安装NodeJS](https://nodejs.org/en/download/package-manager)\n\n#### 3-2. 创建git用户\n\n```\nadduser git\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n找到以下内容\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)     ALL\n```\n\n在下面添加一行\n\n```\ngit  ALL=(ALL)  ALL\n```\n\n保存退出后改回权限\n\n```\nchmod 400 /etc/sudoers\n```\n\n随后设置Git用户的密码，\n\n```\n#需要root权限\nsudo passwd git\n```\n\n切换至git用户，创建 `~/.ssh` 文件夹和 `~/.ssh/authorized_keys `文件，并赋予相应的权限\n\n```\nsu git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys\n#然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys\nchmod 600 ~/.ssh/authorzied_keys\nchmod 700 ~/.ssh\n```\n\n然后就可以执行ssh 命令测试是否可以免密登录\n\n```\nssh -v git@SERVER\n```\n\n至此，Git用户添加完成\n\n#### 3-3. Nginx安装和配置\n\n我是用的是lnmp 一键安装包，nginx安装教程一大堆，就不再叙述。主要看nginx配置。找到nginx的配置文件，修改配置如下：\n\n```\nserver\n{\n    listen 80;\n    #listen [::]:80;\n    server_name www.seekbetter.me seekbetter.me;\n    index index.html index.htm index.php default.html default.htm default.php;\n    #这里要改成网站的根目录\n    root  /path/to/www;  \n\n    include other.conf;\n    #error_page   404   /404.html;\n    location ~ .*\\.(ico|gif|jpg|jpeg|png|bmp|swf)$\n    {\n        access_log   off;\n        expires      1d;\n    }\n\n    location ~ .*\\.(js|css|txt|xml)?$\n    {\n        access_log   off;\n        expires      12h;\n    }\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    access_log  /home/wwwlogs/blog.log  access;\n}\n```\n\n## 4. 本地Hexo程序\n\n#### 4-1：初始化Hexo博客\n\n首先要安装 `hexo-cli`，安装`hexo-cli` 需要 root 权限，使用 `sudo` 运行\n\n```\nsudo npm install -g hexo-cli\n```\n\n然后初始化Hexo程序\n\n```\ncd ~/Documents/code\nhexo init blog\n```\n\n等执行成功以后安装两个插件， `hexo-deployer-git` 和 `hexo-server` ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。\n\n[hexo-deployer-git帮助文档](https://github.com/hexojs/hexo-deployer-git)\n[hexo-server帮助文档](https://hexo.io/zh-cn/docs/server.html)\n\n```\ncd blog\nnpm install hexo-deployer-git --save\nnpm install hero-server\n```\n\n#### 4-2. 生成自己的第一篇文章 hello world !\n\n使用 `hexo new <文章名称>` 来新建文章，该命令会成成一个 `.md`文件放置在 `sources/_posts`文件夹。\n\n```\nhexo new \"hello Hexo\"\nvim sources/_posts/hello-hexo.md\n```\n\n编辑完毕以后， 使用`hexo g`将 `.md`文件渲染成静态文件，然后启动`hexo-server`：\n\n```\nhexo g\nhexo server\n```\n\n现在便可以打开浏览器访问 `http://localhost:4000` 来查看我们的博客了！\n\n## 5. 自动化部署\n\n#### 5-1：服务器上建立git裸库\n\n创建一个裸仓库，裸仓库就是只保存`git`信息的`Repository`, 首先切换到`git`用户确保`git`用户拥有仓库所有权\n一定要加 `--bare`，这样才是一个裸库。\n\n```\nsu git\ncd ~\ngit init --bare blog.git\n```\n\n#### 5-2. 使用 git-hooks 同步网站根目录\n\n在这里我们使用的是 `post-receive`这个钩子，当git有收发的时候就会调用这个钩子。 在 `~/blog.git` 裸库的 `hooks`文件夹中，\n新建`post-receive`文件。\n\n```\nvim ~/blog.git/hooks/post-receive\n\n#!/bin/sh\ngit --work-tree=/path/to/www --git-dir=~/blog.git checkout -f\n```\n\n保存后，要赋予这个文件可执行权限\n\n```\nchmod +x post-receive\n```\n\n#### 5-3. 配置`_config.yml`,完成自动化部署\n\n然后打开 `_config.yml`, 找到 `deploy`\n\n```\ndeploy:\n    type: git\n    repo: git@SERVER:/home/git/blog.git    //<repository url>\n    branch: master            //这里填写分支   [branch]\n    message: 提交的信息         //自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n保存后，尝试将我们刚才写的\"hello hexo\"部署到服务器\n\n```\nhexo clean\nhexo generate --deploy\n```\n\n访问服务器地址，就可以看到我们写的文章\"Hello hexo\",以后写文章只需要：\n\n```\nhexo new \"Blog article name\"\n···写文章\nhexo clean && hexo generate --deploy\n```\n\n博客就更新咯！~\n\n#### 参考资料：\n\n[使用 Git Hook 自动部署 Hexo 到个人 VPS](http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/)\n[Hexo 文档](https://hexo.io/zh-cn/docs/)","source":"_posts/阿里云vps搭建自己的hexo博客.md","raw":"---\ntitle: 阿里云vps搭建自己的hexo博客\ncopyright: true\ndate: 2017-06-16 19:44:20\ntags: hexo\ntop: true\nthumbnail: http://img.sccnn.com/bimg/338/39306.jpg\n---\n\n\n\n> 阿里云vps搭建自己的hexo博客\n\n<!--more-->\n\n## 1. 博客的架构\n\n先搞明白Hexo博客从搭建到自动发布的架构，才能更好的理解我们每一步进行的操作。不然只跟着步骤过了一遍，却不知道为什么这么做。\n\n首先看这张架构图：\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fgnaetp3qfj30m80dct9o.jpg)\n\n整个流程就是本地将 `*.md` 渲染成静态文件，然后Git推送到服务器的`repository`,服务器再通过 `git-hooks` 同步网站根目录。\n\n## 2. 整个搭建流程\n\n**第一部分**: 服务器环境搭建，包括安装 `Git` 、`Nginx`配置 、创建 `git` 用户 。\n\n**第二部分**: 本地`Hexo`初始化， 包括安装 `NodeJS` 、`hexo-cli`, 生成本地静态网站\n\n**第三部分**: 使用Git自动化部署发布博客\n\n## 3. 服务器环境搭建\n\n#### 3-1.安装Git和NodeJS (CentOS 环境)\n\n```\nyum install git\n#安装NodeJS\ncurl --silent --location https://rpm.nodesource.com/setup_5.x | bash -\n```\n\nNodeJS 安装可以参考： [Linux安装NodeJS](https://nodejs.org/en/download/package-manager)\n\n#### 3-2. 创建git用户\n\n```\nadduser git\nchmod 740 /etc/sudoers\nvim /etc/sudoers\n```\n\n找到以下内容\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)     ALL\n```\n\n在下面添加一行\n\n```\ngit  ALL=(ALL)  ALL\n```\n\n保存退出后改回权限\n\n```\nchmod 400 /etc/sudoers\n```\n\n随后设置Git用户的密码，\n\n```\n#需要root权限\nsudo passwd git\n```\n\n切换至git用户，创建 `~/.ssh` 文件夹和 `~/.ssh/authorized_keys `文件，并赋予相应的权限\n\n```\nsu git\nmkdir ~/.ssh\nvim ~/.ssh/authorized_keys\n#然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys\nchmod 600 ~/.ssh/authorzied_keys\nchmod 700 ~/.ssh\n```\n\n然后就可以执行ssh 命令测试是否可以免密登录\n\n```\nssh -v git@SERVER\n```\n\n至此，Git用户添加完成\n\n#### 3-3. Nginx安装和配置\n\n我是用的是lnmp 一键安装包，nginx安装教程一大堆，就不再叙述。主要看nginx配置。找到nginx的配置文件，修改配置如下：\n\n```\nserver\n{\n    listen 80;\n    #listen [::]:80;\n    server_name www.seekbetter.me seekbetter.me;\n    index index.html index.htm index.php default.html default.htm default.php;\n    #这里要改成网站的根目录\n    root  /path/to/www;  \n\n    include other.conf;\n    #error_page   404   /404.html;\n    location ~ .*\\.(ico|gif|jpg|jpeg|png|bmp|swf)$\n    {\n        access_log   off;\n        expires      1d;\n    }\n\n    location ~ .*\\.(js|css|txt|xml)?$\n    {\n        access_log   off;\n        expires      12h;\n    }\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    access_log  /home/wwwlogs/blog.log  access;\n}\n```\n\n## 4. 本地Hexo程序\n\n#### 4-1：初始化Hexo博客\n\n首先要安装 `hexo-cli`，安装`hexo-cli` 需要 root 权限，使用 `sudo` 运行\n\n```\nsudo npm install -g hexo-cli\n```\n\n然后初始化Hexo程序\n\n```\ncd ~/Documents/code\nhexo init blog\n```\n\n等执行成功以后安装两个插件， `hexo-deployer-git` 和 `hexo-server` ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。\n\n[hexo-deployer-git帮助文档](https://github.com/hexojs/hexo-deployer-git)\n[hexo-server帮助文档](https://hexo.io/zh-cn/docs/server.html)\n\n```\ncd blog\nnpm install hexo-deployer-git --save\nnpm install hero-server\n```\n\n#### 4-2. 生成自己的第一篇文章 hello world !\n\n使用 `hexo new <文章名称>` 来新建文章，该命令会成成一个 `.md`文件放置在 `sources/_posts`文件夹。\n\n```\nhexo new \"hello Hexo\"\nvim sources/_posts/hello-hexo.md\n```\n\n编辑完毕以后， 使用`hexo g`将 `.md`文件渲染成静态文件，然后启动`hexo-server`：\n\n```\nhexo g\nhexo server\n```\n\n现在便可以打开浏览器访问 `http://localhost:4000` 来查看我们的博客了！\n\n## 5. 自动化部署\n\n#### 5-1：服务器上建立git裸库\n\n创建一个裸仓库，裸仓库就是只保存`git`信息的`Repository`, 首先切换到`git`用户确保`git`用户拥有仓库所有权\n一定要加 `--bare`，这样才是一个裸库。\n\n```\nsu git\ncd ~\ngit init --bare blog.git\n```\n\n#### 5-2. 使用 git-hooks 同步网站根目录\n\n在这里我们使用的是 `post-receive`这个钩子，当git有收发的时候就会调用这个钩子。 在 `~/blog.git` 裸库的 `hooks`文件夹中，\n新建`post-receive`文件。\n\n```\nvim ~/blog.git/hooks/post-receive\n\n#!/bin/sh\ngit --work-tree=/path/to/www --git-dir=~/blog.git checkout -f\n```\n\n保存后，要赋予这个文件可执行权限\n\n```\nchmod +x post-receive\n```\n\n#### 5-3. 配置`_config.yml`,完成自动化部署\n\n然后打开 `_config.yml`, 找到 `deploy`\n\n```\ndeploy:\n    type: git\n    repo: git@SERVER:/home/git/blog.git    //<repository url>\n    branch: master            //这里填写分支   [branch]\n    message: 提交的信息         //自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})\n```\n\n保存后，尝试将我们刚才写的\"hello hexo\"部署到服务器\n\n```\nhexo clean\nhexo generate --deploy\n```\n\n访问服务器地址，就可以看到我们写的文章\"Hello hexo\",以后写文章只需要：\n\n```\nhexo new \"Blog article name\"\n···写文章\nhexo clean && hexo generate --deploy\n```\n\n博客就更新咯！~\n\n#### 参考资料：\n\n[使用 Git Hook 自动部署 Hexo 到个人 VPS](http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/)\n[Hexo 文档](https://hexo.io/zh-cn/docs/)","slug":"阿里云vps搭建自己的hexo博客","published":1,"updated":"2017-10-16T07:16:33.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28r001bq0fatftdxu5j","content":"<blockquote>\n<p>阿里云vps搭建自己的hexo博客</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"1-博客的架构\"><a href=\"#1-博客的架构\" class=\"headerlink\" title=\"1. 博客的架构\"></a>1. 博客的架构</h2><p>先搞明白Hexo博客从搭建到自动发布的架构，才能更好的理解我们每一步进行的操作。不然只跟着步骤过了一遍，却不知道为什么这么做。</p>\n<p>首先看这张架构图：<br><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fgnaetp3qfj30m80dct9o.jpg\" alt=\"\"></p>\n<p>整个流程就是本地将 <code>*.md</code> 渲染成静态文件，然后Git推送到服务器的<code>repository</code>,服务器再通过 <code>git-hooks</code> 同步网站根目录。</p>\n<h2 id=\"2-整个搭建流程\"><a href=\"#2-整个搭建流程\" class=\"headerlink\" title=\"2. 整个搭建流程\"></a>2. 整个搭建流程</h2><p><strong>第一部分</strong>: 服务器环境搭建，包括安装 <code>Git</code> 、<code>Nginx</code>配置 、创建 <code>git</code> 用户 。</p>\n<p><strong>第二部分</strong>: 本地<code>Hexo</code>初始化， 包括安装 <code>NodeJS</code> 、<code>hexo-cli</code>, 生成本地静态网站</p>\n<p><strong>第三部分</strong>: 使用Git自动化部署发布博客</p>\n<h2 id=\"3-服务器环境搭建\"><a href=\"#3-服务器环境搭建\" class=\"headerlink\" title=\"3. 服务器环境搭建\"></a>3. 服务器环境搭建</h2><h4 id=\"3-1-安装Git和NodeJS-CentOS-环境\"><a href=\"#3-1-安装Git和NodeJS-CentOS-环境\" class=\"headerlink\" title=\"3-1.安装Git和NodeJS (CentOS 环境)\"></a>3-1.安装Git和NodeJS (CentOS 环境)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div><div class=\"line\">#安装NodeJS</div><div class=\"line\">curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -</div></pre></td></tr></table></figure>\n<p>NodeJS 安装可以参考： <a href=\"https://nodejs.org/en/download/package-manager\" target=\"_blank\" rel=\"external\">Linux安装NodeJS</a></p>\n<h4 id=\"3-2-创建git用户\"><a href=\"#3-2-创建git用户\" class=\"headerlink\" title=\"3-2. 创建git用户\"></a>3-2. 创建git用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">adduser git</div><div class=\"line\">chmod 740 /etc/sudoers</div><div class=\"line\">vim /etc/sudoers</div></pre></td></tr></table></figure>\n<p>找到以下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">## Allow root to run any commands anywhere</div><div class=\"line\">root    ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<p>在下面添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git  ALL=(ALL)  ALL</div></pre></td></tr></table></figure>\n<p>保存退出后改回权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 400 /etc/sudoers</div></pre></td></tr></table></figure>\n<p>随后设置Git用户的密码，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#需要root权限</div><div class=\"line\">sudo passwd git</div></pre></td></tr></table></figure>\n<p>切换至git用户，创建 <code>~/.ssh</code> 文件夹和 <code>~/.ssh/authorized_keys</code>文件，并赋予相应的权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">mkdir ~/.ssh</div><div class=\"line\">vim ~/.ssh/authorized_keys</div><div class=\"line\">#然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys</div><div class=\"line\">chmod 600 ~/.ssh/authorzied_keys</div><div class=\"line\">chmod 700 ~/.ssh</div></pre></td></tr></table></figure>\n<p>然后就可以执行ssh 命令测试是否可以免密登录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -v git@SERVER</div></pre></td></tr></table></figure>\n<p>至此，Git用户添加完成</p>\n<h4 id=\"3-3-Nginx安装和配置\"><a href=\"#3-3-Nginx安装和配置\" class=\"headerlink\" title=\"3-3. Nginx安装和配置\"></a>3-3. Nginx安装和配置</h4><p>我是用的是lnmp 一键安装包，nginx安装教程一大堆，就不再叙述。主要看nginx配置。找到nginx的配置文件，修改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">server</div><div class=\"line\">&#123;</div><div class=\"line\">    listen 80;</div><div class=\"line\">    #listen [::]:80;</div><div class=\"line\">    server_name www.seekbetter.me seekbetter.me;</div><div class=\"line\">    index index.html index.htm index.php default.html default.htm default.php;</div><div class=\"line\">    #这里要改成网站的根目录</div><div class=\"line\">    root  /path/to/www;  </div><div class=\"line\"></div><div class=\"line\">    include other.conf;</div><div class=\"line\">    #error_page   404   /404.html;</div><div class=\"line\">    location ~ .*\\.(ico|gif|jpg|jpeg|png|bmp|swf)$</div><div class=\"line\">    &#123;</div><div class=\"line\">        access_log   off;</div><div class=\"line\">        expires      1d;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ .*\\.(js|css|txt|xml)?$</div><div class=\"line\">    &#123;</div><div class=\"line\">        access_log   off;</div><div class=\"line\">        expires      12h;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        try_files $uri $uri/ =404;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    access_log  /home/wwwlogs/blog.log  access;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-本地Hexo程序\"><a href=\"#4-本地Hexo程序\" class=\"headerlink\" title=\"4. 本地Hexo程序\"></a>4. 本地Hexo程序</h2><h4 id=\"4-1：初始化Hexo博客\"><a href=\"#4-1：初始化Hexo博客\" class=\"headerlink\" title=\"4-1：初始化Hexo博客\"></a>4-1：初始化Hexo博客</h4><p>首先要安装 <code>hexo-cli</code>，安装<code>hexo-cli</code> 需要 root 权限，使用 <code>sudo</code> 运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>然后初始化Hexo程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/Documents/code</div><div class=\"line\">hexo init blog</div></pre></td></tr></table></figure>\n<p>等执行成功以后安装两个插件， <code>hexo-deployer-git</code> 和 <code>hexo-server</code> ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。</p>\n<p><a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"external\">hexo-deployer-git帮助文档</a><br><a href=\"https://hexo.io/zh-cn/docs/server.html\" target=\"_blank\" rel=\"external\">hexo-server帮助文档</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd blog</div><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\">npm install hero-server</div></pre></td></tr></table></figure>\n<h4 id=\"4-2-生成自己的第一篇文章-hello-world\"><a href=\"#4-2-生成自己的第一篇文章-hello-world\" class=\"headerlink\" title=\"4-2. 生成自己的第一篇文章 hello world !\"></a>4-2. 生成自己的第一篇文章 hello world !</h4><p>使用 <code>hexo new &lt;文章名称&gt;</code> 来新建文章，该命令会成成一个 <code>.md</code>文件放置在 <code>sources/_posts</code>文件夹。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;hello Hexo&quot;</div><div class=\"line\">vim sources/_posts/hello-hexo.md</div></pre></td></tr></table></figure>\n<p>编辑完毕以后， 使用<code>hexo g</code>将 <code>.md</code>文件渲染成静态文件，然后启动<code>hexo-server</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g</div><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>现在便可以打开浏览器访问 <code>http://localhost:4000</code> 来查看我们的博客了！</p>\n<h2 id=\"5-自动化部署\"><a href=\"#5-自动化部署\" class=\"headerlink\" title=\"5. 自动化部署\"></a>5. 自动化部署</h2><h4 id=\"5-1：服务器上建立git裸库\"><a href=\"#5-1：服务器上建立git裸库\" class=\"headerlink\" title=\"5-1：服务器上建立git裸库\"></a>5-1：服务器上建立git裸库</h4><p>创建一个裸仓库，裸仓库就是只保存<code>git</code>信息的<code>Repository</code>, 首先切换到<code>git</code>用户确保<code>git</code>用户拥有仓库所有权<br>一定要加 <code>--bare</code>，这样才是一个裸库。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">cd ~</div><div class=\"line\">git init --bare blog.git</div></pre></td></tr></table></figure>\n<h4 id=\"5-2-使用-git-hooks-同步网站根目录\"><a href=\"#5-2-使用-git-hooks-同步网站根目录\" class=\"headerlink\" title=\"5-2. 使用 git-hooks 同步网站根目录\"></a>5-2. 使用 git-hooks 同步网站根目录</h4><p>在这里我们使用的是 <code>post-receive</code>这个钩子，当git有收发的时候就会调用这个钩子。 在 <code>~/blog.git</code> 裸库的 <code>hooks</code>文件夹中，<br>新建<code>post-receive</code>文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim ~/blog.git/hooks/post-receive</div><div class=\"line\"></div><div class=\"line\">#!/bin/sh</div><div class=\"line\">git --work-tree=/path/to/www --git-dir=~/blog.git checkout -f</div></pre></td></tr></table></figure>\n<p>保存后，要赋予这个文件可执行权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<h4 id=\"5-3-配置-config-yml-完成自动化部署\"><a href=\"#5-3-配置-config-yml-完成自动化部署\" class=\"headerlink\" title=\"5-3. 配置_config.yml,完成自动化部署\"></a>5-3. 配置<code>_config.yml</code>,完成自动化部署</h4><p>然后打开 <code>_config.yml</code>, 找到 <code>deploy</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">    type: git</div><div class=\"line\">    repo: git@SERVER:/home/git/blog.git    //&lt;repository url&gt;</div><div class=\"line\">    branch: master            //这里填写分支   [branch]</div><div class=\"line\">    message: 提交的信息         //自定义提交信息 (默认为 Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;)</div></pre></td></tr></table></figure>\n<p>保存后，尝试将我们刚才写的”hello hexo”部署到服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo clean</div><div class=\"line\">hexo generate --deploy</div></pre></td></tr></table></figure>\n<p>访问服务器地址，就可以看到我们写的文章”Hello hexo”,以后写文章只需要：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;Blog article name&quot;</div><div class=\"line\">···写文章</div><div class=\"line\">hexo clean &amp;&amp; hexo generate --deploy</div></pre></td></tr></table></figure>\n<p>博客就更新咯！~</p>\n<h4 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h4><p><a href=\"http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/\" target=\"_blank\" rel=\"external\">使用 Git Hook 自动部署 Hexo 到个人 VPS</a><br><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">Hexo 文档</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>阿里云vps搭建自己的hexo博客</p>\n</blockquote>","more":"<h2 id=\"1-博客的架构\"><a href=\"#1-博客的架构\" class=\"headerlink\" title=\"1. 博客的架构\"></a>1. 博客的架构</h2><p>先搞明白Hexo博客从搭建到自动发布的架构，才能更好的理解我们每一步进行的操作。不然只跟着步骤过了一遍，却不知道为什么这么做。</p>\n<p>首先看这张架构图：<br><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fgnaetp3qfj30m80dct9o.jpg\" alt=\"\"></p>\n<p>整个流程就是本地将 <code>*.md</code> 渲染成静态文件，然后Git推送到服务器的<code>repository</code>,服务器再通过 <code>git-hooks</code> 同步网站根目录。</p>\n<h2 id=\"2-整个搭建流程\"><a href=\"#2-整个搭建流程\" class=\"headerlink\" title=\"2. 整个搭建流程\"></a>2. 整个搭建流程</h2><p><strong>第一部分</strong>: 服务器环境搭建，包括安装 <code>Git</code> 、<code>Nginx</code>配置 、创建 <code>git</code> 用户 。</p>\n<p><strong>第二部分</strong>: 本地<code>Hexo</code>初始化， 包括安装 <code>NodeJS</code> 、<code>hexo-cli</code>, 生成本地静态网站</p>\n<p><strong>第三部分</strong>: 使用Git自动化部署发布博客</p>\n<h2 id=\"3-服务器环境搭建\"><a href=\"#3-服务器环境搭建\" class=\"headerlink\" title=\"3. 服务器环境搭建\"></a>3. 服务器环境搭建</h2><h4 id=\"3-1-安装Git和NodeJS-CentOS-环境\"><a href=\"#3-1-安装Git和NodeJS-CentOS-环境\" class=\"headerlink\" title=\"3-1.安装Git和NodeJS (CentOS 环境)\"></a>3-1.安装Git和NodeJS (CentOS 环境)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div><div class=\"line\">#安装NodeJS</div><div class=\"line\">curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -</div></pre></td></tr></table></figure>\n<p>NodeJS 安装可以参考： <a href=\"https://nodejs.org/en/download/package-manager\" target=\"_blank\" rel=\"external\">Linux安装NodeJS</a></p>\n<h4 id=\"3-2-创建git用户\"><a href=\"#3-2-创建git用户\" class=\"headerlink\" title=\"3-2. 创建git用户\"></a>3-2. 创建git用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">adduser git</div><div class=\"line\">chmod 740 /etc/sudoers</div><div class=\"line\">vim /etc/sudoers</div></pre></td></tr></table></figure>\n<p>找到以下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">## Allow root to run any commands anywhere</div><div class=\"line\">root    ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<p>在下面添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git  ALL=(ALL)  ALL</div></pre></td></tr></table></figure>\n<p>保存退出后改回权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 400 /etc/sudoers</div></pre></td></tr></table></figure>\n<p>随后设置Git用户的密码，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#需要root权限</div><div class=\"line\">sudo passwd git</div></pre></td></tr></table></figure>\n<p>切换至git用户，创建 <code>~/.ssh</code> 文件夹和 <code>~/.ssh/authorized_keys</code>文件，并赋予相应的权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">mkdir ~/.ssh</div><div class=\"line\">vim ~/.ssh/authorized_keys</div><div class=\"line\">#然后将电脑中执行 cat ~/.ssh/id_rsa.pub | pbcopy ,将公钥复制粘贴到authorized_keys</div><div class=\"line\">chmod 600 ~/.ssh/authorzied_keys</div><div class=\"line\">chmod 700 ~/.ssh</div></pre></td></tr></table></figure>\n<p>然后就可以执行ssh 命令测试是否可以免密登录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -v git@SERVER</div></pre></td></tr></table></figure>\n<p>至此，Git用户添加完成</p>\n<h4 id=\"3-3-Nginx安装和配置\"><a href=\"#3-3-Nginx安装和配置\" class=\"headerlink\" title=\"3-3. Nginx安装和配置\"></a>3-3. Nginx安装和配置</h4><p>我是用的是lnmp 一键安装包，nginx安装教程一大堆，就不再叙述。主要看nginx配置。找到nginx的配置文件，修改配置如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">server</div><div class=\"line\">&#123;</div><div class=\"line\">    listen 80;</div><div class=\"line\">    #listen [::]:80;</div><div class=\"line\">    server_name www.seekbetter.me seekbetter.me;</div><div class=\"line\">    index index.html index.htm index.php default.html default.htm default.php;</div><div class=\"line\">    #这里要改成网站的根目录</div><div class=\"line\">    root  /path/to/www;  </div><div class=\"line\"></div><div class=\"line\">    include other.conf;</div><div class=\"line\">    #error_page   404   /404.html;</div><div class=\"line\">    location ~ .*\\.(ico|gif|jpg|jpeg|png|bmp|swf)$</div><div class=\"line\">    &#123;</div><div class=\"line\">        access_log   off;</div><div class=\"line\">        expires      1d;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location ~ .*\\.(js|css|txt|xml)?$</div><div class=\"line\">    &#123;</div><div class=\"line\">        access_log   off;</div><div class=\"line\">        expires      12h;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        try_files $uri $uri/ =404;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    access_log  /home/wwwlogs/blog.log  access;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-本地Hexo程序\"><a href=\"#4-本地Hexo程序\" class=\"headerlink\" title=\"4. 本地Hexo程序\"></a>4. 本地Hexo程序</h2><h4 id=\"4-1：初始化Hexo博客\"><a href=\"#4-1：初始化Hexo博客\" class=\"headerlink\" title=\"4-1：初始化Hexo博客\"></a>4-1：初始化Hexo博客</h4><p>首先要安装 <code>hexo-cli</code>，安装<code>hexo-cli</code> 需要 root 权限，使用 <code>sudo</code> 运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>然后初始化Hexo程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/Documents/code</div><div class=\"line\">hexo init blog</div></pre></td></tr></table></figure>\n<p>等执行成功以后安装两个插件， <code>hexo-deployer-git</code> 和 <code>hexo-server</code> ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。</p>\n<p><a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"external\">hexo-deployer-git帮助文档</a><br><a href=\"https://hexo.io/zh-cn/docs/server.html\" target=\"_blank\" rel=\"external\">hexo-server帮助文档</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd blog</div><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\">npm install hero-server</div></pre></td></tr></table></figure>\n<h4 id=\"4-2-生成自己的第一篇文章-hello-world\"><a href=\"#4-2-生成自己的第一篇文章-hello-world\" class=\"headerlink\" title=\"4-2. 生成自己的第一篇文章 hello world !\"></a>4-2. 生成自己的第一篇文章 hello world !</h4><p>使用 <code>hexo new &lt;文章名称&gt;</code> 来新建文章，该命令会成成一个 <code>.md</code>文件放置在 <code>sources/_posts</code>文件夹。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;hello Hexo&quot;</div><div class=\"line\">vim sources/_posts/hello-hexo.md</div></pre></td></tr></table></figure>\n<p>编辑完毕以后， 使用<code>hexo g</code>将 <code>.md</code>文件渲染成静态文件，然后启动<code>hexo-server</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g</div><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>现在便可以打开浏览器访问 <code>http://localhost:4000</code> 来查看我们的博客了！</p>\n<h2 id=\"5-自动化部署\"><a href=\"#5-自动化部署\" class=\"headerlink\" title=\"5. 自动化部署\"></a>5. 自动化部署</h2><h4 id=\"5-1：服务器上建立git裸库\"><a href=\"#5-1：服务器上建立git裸库\" class=\"headerlink\" title=\"5-1：服务器上建立git裸库\"></a>5-1：服务器上建立git裸库</h4><p>创建一个裸仓库，裸仓库就是只保存<code>git</code>信息的<code>Repository</code>, 首先切换到<code>git</code>用户确保<code>git</code>用户拥有仓库所有权<br>一定要加 <code>--bare</code>，这样才是一个裸库。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">cd ~</div><div class=\"line\">git init --bare blog.git</div></pre></td></tr></table></figure>\n<h4 id=\"5-2-使用-git-hooks-同步网站根目录\"><a href=\"#5-2-使用-git-hooks-同步网站根目录\" class=\"headerlink\" title=\"5-2. 使用 git-hooks 同步网站根目录\"></a>5-2. 使用 git-hooks 同步网站根目录</h4><p>在这里我们使用的是 <code>post-receive</code>这个钩子，当git有收发的时候就会调用这个钩子。 在 <code>~/blog.git</code> 裸库的 <code>hooks</code>文件夹中，<br>新建<code>post-receive</code>文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim ~/blog.git/hooks/post-receive</div><div class=\"line\"></div><div class=\"line\">#!/bin/sh</div><div class=\"line\">git --work-tree=/path/to/www --git-dir=~/blog.git checkout -f</div></pre></td></tr></table></figure>\n<p>保存后，要赋予这个文件可执行权限</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<h4 id=\"5-3-配置-config-yml-完成自动化部署\"><a href=\"#5-3-配置-config-yml-完成自动化部署\" class=\"headerlink\" title=\"5-3. 配置_config.yml,完成自动化部署\"></a>5-3. 配置<code>_config.yml</code>,完成自动化部署</h4><p>然后打开 <code>_config.yml</code>, 找到 <code>deploy</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">    type: git</div><div class=\"line\">    repo: git@SERVER:/home/git/blog.git    //&lt;repository url&gt;</div><div class=\"line\">    branch: master            //这里填写分支   [branch]</div><div class=\"line\">    message: 提交的信息         //自定义提交信息 (默认为 Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;)</div></pre></td></tr></table></figure>\n<p>保存后，尝试将我们刚才写的”hello hexo”部署到服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo clean</div><div class=\"line\">hexo generate --deploy</div></pre></td></tr></table></figure>\n<p>访问服务器地址，就可以看到我们写的文章”Hello hexo”,以后写文章只需要：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;Blog article name&quot;</div><div class=\"line\">···写文章</div><div class=\"line\">hexo clean &amp;&amp; hexo generate --deploy</div></pre></td></tr></table></figure>\n<p>博客就更新咯！~</p>\n<h4 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h4><p><a href=\"http://www.swiftyper.com/2016/04/17/deploy-hexo-with-git-hook/\" target=\"_blank\" rel=\"external\">使用 Git Hook 自动部署 Hexo 到个人 VPS</a><br><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">Hexo 文档</a></p>"},{"title":"阿里云配置nodejs+mongodb环境","date":"2017-05-25T10:00:37.000Z","copyright":true,"_content":"\n阿里云系统：ubuntu14.04\n\n首先，在阿里云上安装nodejs，我一开始直接在线安装，发现真的是奇慢无比，于是在这里改用源码安装。。。\n\n##1.首先，我们去nodejs官网，下载指定版本的压缩包\n下载完成后，\n\n\n```\nscp -r 你的压缩包名字 root@你的公网ip\n```\n\n然后ssh登录你的阿里云，\n解压文件并安装\n\n```\n  tar xvf 压缩包文件名 \n  cd 文件名 \n  ./configure \n make \n make install \n cp /usr/local/bin/node /usr/sbin/ \n\n查看当前安装的Node的版本 \nnode -v \nnpm -v\n\nv.....\n```\n这样，就安装完了，在make编译的时候要等大概20分钟，喝杯茶先（- -）\n\n##2.我们来下载mongodb\n\n不得不吐槽一下，直接下也是奇慢无比。。。。速度只有?b/s你敢信？等到猴年马月，于是我决定替换一下镜像源= =\n\n操作过程:\n\n###1、添加 MongoDB 公共GPG钥匙。 \n\n```\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\n```\n\n###2、创建列表文件(并替换国内镜像源)\n\n```\necho \"deb http://mirrors.aliyun.com/mongodb/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list\n```\n\n###3、重新加载本地包数据库\n\n```\nsudo apt-get update\n```\n\n###4、安装MongoDB\n\n```\nsudo apt-get install -y mongodb-org\n```\n###5、启动MongoDB \n```\nsudo service mongod start\n```\n###6、打开MongoDB \n```\nsudo mongo \n```\n注意，这里运行mongod可能会报错`/data/db not found`\n要在/目录下创建相应文件夹\n\n##3.如果你想卸载mongodb\n```\n1.sudo apt-get remove mongodb\n\n2.sudo apt-get remove --auto-remove mongodb\n\n3.sudo apt-get purge --auto-remove mongodb\n```","source":"_posts/阿里云配置nodejs-mongodb环境.md","raw":"---\ntitle: 阿里云配置nodejs+mongodb环境\ndate: 2017-05-25 18:00:37\ntags: node.js\ncopyright: true\n---\n\n阿里云系统：ubuntu14.04\n\n首先，在阿里云上安装nodejs，我一开始直接在线安装，发现真的是奇慢无比，于是在这里改用源码安装。。。\n\n##1.首先，我们去nodejs官网，下载指定版本的压缩包\n下载完成后，\n\n\n```\nscp -r 你的压缩包名字 root@你的公网ip\n```\n\n然后ssh登录你的阿里云，\n解压文件并安装\n\n```\n  tar xvf 压缩包文件名 \n  cd 文件名 \n  ./configure \n make \n make install \n cp /usr/local/bin/node /usr/sbin/ \n\n查看当前安装的Node的版本 \nnode -v \nnpm -v\n\nv.....\n```\n这样，就安装完了，在make编译的时候要等大概20分钟，喝杯茶先（- -）\n\n##2.我们来下载mongodb\n\n不得不吐槽一下，直接下也是奇慢无比。。。。速度只有?b/s你敢信？等到猴年马月，于是我决定替换一下镜像源= =\n\n操作过程:\n\n###1、添加 MongoDB 公共GPG钥匙。 \n\n```\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927\n```\n\n###2、创建列表文件(并替换国内镜像源)\n\n```\necho \"deb http://mirrors.aliyun.com/mongodb/apt/ubuntu xenial/mongodb-org/3.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list\n```\n\n###3、重新加载本地包数据库\n\n```\nsudo apt-get update\n```\n\n###4、安装MongoDB\n\n```\nsudo apt-get install -y mongodb-org\n```\n###5、启动MongoDB \n```\nsudo service mongod start\n```\n###6、打开MongoDB \n```\nsudo mongo \n```\n注意，这里运行mongod可能会报错`/data/db not found`\n要在/目录下创建相应文件夹\n\n##3.如果你想卸载mongodb\n```\n1.sudo apt-get remove mongodb\n\n2.sudo apt-get remove --auto-remove mongodb\n\n3.sudo apt-get purge --auto-remove mongodb\n```","slug":"阿里云配置nodejs-mongodb环境","published":1,"updated":"2017-10-16T07:16:33.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8tuk28s001dq0fa34u1rz04","content":"<p>阿里云系统：ubuntu14.04</p>\n<p>首先，在阿里云上安装nodejs，我一开始直接在线安装，发现真的是奇慢无比，于是在这里改用源码安装。。。</p>\n<p>##1.首先，我们去nodejs官网，下载指定版本的压缩包<br>下载完成后，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r 你的压缩包名字 root@你的公网ip</div></pre></td></tr></table></figure>\n<p>然后ssh登录你的阿里云，<br>解压文件并安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">  tar xvf 压缩包文件名 </div><div class=\"line\">  cd 文件名 </div><div class=\"line\">  ./configure </div><div class=\"line\"> make </div><div class=\"line\"> make install </div><div class=\"line\"> cp /usr/local/bin/node /usr/sbin/ </div><div class=\"line\"></div><div class=\"line\">查看当前安装的Node的版本 </div><div class=\"line\">node -v </div><div class=\"line\">npm -v</div><div class=\"line\"></div><div class=\"line\">v.....</div></pre></td></tr></table></figure>\n<p>这样，就安装完了，在make编译的时候要等大概20分钟，喝杯茶先（- -）</p>\n<p>##2.我们来下载mongodb</p>\n<p>不得不吐槽一下，直接下也是奇慢无比。。。。速度只有?b/s你敢信？等到猴年马月，于是我决定替换一下镜像源= =</p>\n<p>操作过程:</p>\n<p>###1、添加 MongoDB 公共GPG钥匙。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927</div></pre></td></tr></table></figure>\n<p>###2、创建列表文件(并替换国内镜像源)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;deb http://mirrors.aliyun.com/mongodb/apt/ubuntu xenial/mongodb-org/3.2 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list</div></pre></td></tr></table></figure>\n<p>###3、重新加载本地包数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<p>###4、安装MongoDB</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install -y mongodb-org</div></pre></td></tr></table></figure>\n<p>###5、启动MongoDB<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service mongod start</div></pre></td></tr></table></figure></p>\n<p>###6、打开MongoDB<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mongo</div></pre></td></tr></table></figure></p>\n<p>注意，这里运行mongod可能会报错<code>/data/db not found</code><br>要在/目录下创建相应文件夹</p>\n<p>##3.如果你想卸载mongodb<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.sudo apt-get remove mongodb</div><div class=\"line\"></div><div class=\"line\">2.sudo apt-get remove --auto-remove mongodb</div><div class=\"line\"></div><div class=\"line\">3.sudo apt-get purge --auto-remove mongodb</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>阿里云系统：ubuntu14.04</p>\n<p>首先，在阿里云上安装nodejs，我一开始直接在线安装，发现真的是奇慢无比，于是在这里改用源码安装。。。</p>\n<p>##1.首先，我们去nodejs官网，下载指定版本的压缩包<br>下载完成后，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">scp -r 你的压缩包名字 root@你的公网ip</div></pre></td></tr></table></figure>\n<p>然后ssh登录你的阿里云，<br>解压文件并安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">  tar xvf 压缩包文件名 </div><div class=\"line\">  cd 文件名 </div><div class=\"line\">  ./configure </div><div class=\"line\"> make </div><div class=\"line\"> make install </div><div class=\"line\"> cp /usr/local/bin/node /usr/sbin/ </div><div class=\"line\"></div><div class=\"line\">查看当前安装的Node的版本 </div><div class=\"line\">node -v </div><div class=\"line\">npm -v</div><div class=\"line\"></div><div class=\"line\">v.....</div></pre></td></tr></table></figure>\n<p>这样，就安装完了，在make编译的时候要等大概20分钟，喝杯茶先（- -）</p>\n<p>##2.我们来下载mongodb</p>\n<p>不得不吐槽一下，直接下也是奇慢无比。。。。速度只有?b/s你敢信？等到猴年马月，于是我决定替换一下镜像源= =</p>\n<p>操作过程:</p>\n<p>###1、添加 MongoDB 公共GPG钥匙。 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927</div></pre></td></tr></table></figure>\n<p>###2、创建列表文件(并替换国内镜像源)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &quot;deb http://mirrors.aliyun.com/mongodb/apt/ubuntu xenial/mongodb-org/3.2 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list</div></pre></td></tr></table></figure>\n<p>###3、重新加载本地包数据库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div></pre></td></tr></table></figure>\n<p>###4、安装MongoDB</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install -y mongodb-org</div></pre></td></tr></table></figure>\n<p>###5、启动MongoDB<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo service mongod start</div></pre></td></tr></table></figure></p>\n<p>###6、打开MongoDB<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mongo</div></pre></td></tr></table></figure></p>\n<p>注意，这里运行mongod可能会报错<code>/data/db not found</code><br>要在/目录下创建相应文件夹</p>\n<p>##3.如果你想卸载mongodb<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.sudo apt-get remove mongodb</div><div class=\"line\"></div><div class=\"line\">2.sudo apt-get remove --auto-remove mongodb</div><div class=\"line\"></div><div class=\"line\">3.sudo apt-get purge --auto-remove mongodb</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj8tuk27v0001q0fa91ynnb60","tag_id":"cj8tuk2800003q0fa8al2urwu","_id":"cj8tuk2840008q0famlc28vxh"},{"post_id":"cj8tuk27y0002q0fag29bck2c","tag_id":"cj8tuk2840007q0fax9di0p4f","_id":"cj8tuk288000dq0far87v7ikn"},{"post_id":"cj8tuk2820004q0fabo606zuv","tag_id":"cj8tuk286000bq0faqjylhc9w","_id":"cj8tuk28a000hq0faaxxed5cp"},{"post_id":"cj8tuk2820005q0fatmueor3m","tag_id":"cj8tuk289000fq0faz0ra709i","_id":"cj8tuk28c000lq0fa8x1y9qhm"},{"post_id":"cj8tuk2830006q0fany1xp4w0","tag_id":"cj8tuk28b000jq0fas3l0pz87","_id":"cj8tuk28e000pq0fa1j2dpqfe"},{"post_id":"cj8tuk2840009q0fa5v63f4z0","tag_id":"cj8tuk28d000oq0fa0w21lcxe","_id":"cj8tuk28g000uq0faaew2bs8m"},{"post_id":"cj8tuk286000aq0fasw7p2d22","tag_id":"cj8tuk28f000sq0fae0phjku8","_id":"cj8tuk28j000yq0fayzz652r3"},{"post_id":"cj8tuk287000cq0fajiy7zi5f","tag_id":"cj8tuk28i000wq0fanom71pqq","_id":"cj8tuk28l0012q0faqiw4jrip"},{"post_id":"cj8tuk28l0013q0famocqeuaa","tag_id":"cj8tuk28b000jq0fas3l0pz87","_id":"cj8tuk28o0016q0fa39smjskv"},{"post_id":"cj8tuk288000eq0fasic5tjex","tag_id":"cj8tuk28k0010q0fadqup3h0w","_id":"cj8tuk28p0018q0faf7k2c96a"},{"post_id":"cj8tuk289000gq0faavg1hg4d","tag_id":"cj8tuk28n0015q0fan6a0qe7t","_id":"cj8tuk28s001cq0fauukc6ue0"},{"post_id":"cj8tuk28r001bq0fatftdxu5j","tag_id":"cj8tuk28b000jq0fas3l0pz87","_id":"cj8tuk28t001fq0fa6a5orpkt"},{"post_id":"cj8tuk28a000iq0fam4zh3zy1","tag_id":"cj8tuk28n0015q0fan6a0qe7t","_id":"cj8tuk28t001gq0fa4n9n5wdm"},{"post_id":"cj8tuk28b000kq0faeqwta8wy","tag_id":"cj8tuk28t001eq0fazmwx1f6f","_id":"cj8tuk28u001iq0fal3nx3i4u"},{"post_id":"cj8tuk28c000mq0fa6poi2zd7","tag_id":"cj8tuk28d000oq0fa0w21lcxe","_id":"cj8tuk28v001kq0fatm1ca4dv"},{"post_id":"cj8tuk28d000nq0fayw0iy4hw","tag_id":"cj8tuk28t001eq0fazmwx1f6f","_id":"cj8tuk28v001mq0fay9g75hff"},{"post_id":"cj8tuk28e000qq0fake1dac9y","tag_id":"cj8tuk28v001lq0fa2v25c8va","_id":"cj8tuk28w001oq0fa8973hxa0"},{"post_id":"cj8tuk28f000rq0faon4guhhz","tag_id":"cj8tuk28v001lq0fa2v25c8va","_id":"cj8tuk28w001qq0faxz6n58ce"},{"post_id":"cj8tuk28g000tq0fas5ujeyqo","tag_id":"cj8tuk28v001lq0fa2v25c8va","_id":"cj8tuk28x001sq0fav0apm6y2"},{"post_id":"cj8tuk28h000vq0fas50d53l2","tag_id":"cj8tuk28w001rq0fajsxquqbf","_id":"cj8tuk28x001uq0fa9tt8t9fa"},{"post_id":"cj8tuk28i000xq0faogcrlxop","tag_id":"cj8tuk28x001tq0fapzgrfwsk","_id":"cj8tuk28y001wq0faje13dekr"},{"post_id":"cj8tuk28j000zq0fafuvkq3m7","tag_id":"cj8tuk28x001tq0fapzgrfwsk","_id":"cj8tuk28y001yq0fac079buvf"},{"post_id":"cj8tuk28k0011q0faakt5rz51","tag_id":"cj8tuk28x001tq0fapzgrfwsk","_id":"cj8tuk28z0020q0fawoldefgw"},{"post_id":"cj8tuk28m0014q0fahby09osg","tag_id":"cj8tuk28y001zq0farvi04pl6","_id":"cj8tuk28z0022q0fa7s5nsqz2"},{"post_id":"cj8tuk28o0017q0fapiffhure","tag_id":"cj8tuk28z0021q0faj4ekizj5","_id":"cj8tuk28z0024q0faj2kjabz2"},{"post_id":"cj8tuk28p0019q0faf2tx5bz3","tag_id":"cj8tuk28z0023q0famhhr4u3i","_id":"cj8tuk2900026q0fapvk5bcmw"},{"post_id":"cj8tuk28s001dq0fa34u1rz04","tag_id":"cj8tuk2900025q0faz3kfb93b","_id":"cj8tuk2900027q0fa63hwji6s"}],"Tag":[{"name":"css","_id":"cj8tuk2800003q0fa8al2urwu"},{"name":"C++","_id":"cj8tuk2840007q0fax9di0p4f"},{"name":"HTTP","_id":"cj8tuk286000bq0faqjylhc9w"},{"name":"Sublime插件","_id":"cj8tuk289000fq0faz0ra709i"},{"name":"hexo","_id":"cj8tuk28b000jq0fas3l0pz87"},{"name":"hexo_blog","_id":"cj8tuk28d000oq0fa0w21lcxe"},{"name":"mpv","_id":"cj8tuk28f000sq0fae0phjku8"},{"name":"mysql","_id":"cj8tuk28i000wq0fanom71pqq"},{"name":"Hadoop","_id":"cj8tuk28k0010q0fadqup3h0w"},{"name":"git","_id":"cj8tuk28n0015q0fan6a0qe7t"},{"name":"javascript","_id":"cj8tuk28t001eq0fazmwx1f6f"},{"name":"php","_id":"cj8tuk28v001lq0fa2v25c8va"},{"name":"笔试","_id":"cj8tuk28w001rq0fajsxquqbf"},{"name":"vue.js","_id":"cj8tuk28x001tq0fapzgrfwsk"},{"name":"软件测试","_id":"cj8tuk28y001zq0farvi04pl6"},{"name":"操作系统","_id":"cj8tuk28z0021q0faj4ekizj5"},{"name":"阿里云ECS","_id":"cj8tuk28z0023q0famhhr4u3i"},{"name":"node.js","_id":"cj8tuk2900025q0faz3kfb93b"}]}}